{"version":3,"file":"static/js/434.cf39440e.chunk.js","mappings":"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","sources":["../node_modules/react-tsparticles/esm/Utils.js","../node_modules/react-tsparticles/esm/Particles.js","../node_modules/react-tsparticles/esm/index.js","../node_modules/tsparticles-engine/esm/Core/Utils/Circle.js","../node_modules/tsparticles-engine/esm/Core/Utils/Constants.js","../node_modules/tsparticles-engine/esm/Core/Utils/Range.js","../node_modules/tsparticles-engine/esm/Core/Utils/Rectangle.js","../node_modules/tsparticles-engine/esm/Core/Utils/Vector.js","../node_modules/tsparticles-engine/esm/Core/Utils/Vector3d.js","../node_modules/tsparticles-engine/esm/Options/Classes/ColorAnimation.js","../node_modules/tsparticles-engine/esm/Options/Classes/HslAnimation.js","../node_modules/tsparticles-engine/esm/Options/Classes/AnimatableColor.js","../node_modules/tsparticles-engine/esm/Options/Classes/OptionsColor.js","../node_modules/tsparticles-engine/esm/Options/Classes/Random.js","../node_modules/tsparticles-engine/esm/Options/Classes/ValueWithRandom.js","../node_modules/tsparticles-engine/esm/Utils/CanvasUtils.js","../node_modules/tsparticles-engine/esm/Utils/ColorUtils.js","../node_modules/tsparticles-engine/esm/Utils/NumberUtils.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Collisions/CollisionsAbsorb.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Collisions/CollisionsOverlap.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Bounce/ParticlesBounceFactor.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Bounce/ParticlesBounce.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Collisions/Collisions.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveAngle.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveAttract.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveCenter.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveGravity.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/Path/MovePath.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveTrailFill.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveTrail.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/OutModes.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/Spin.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/Move.js","../node_modules/tsparticles-engine/esm/Options/Classes/AnimationOptions.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Opacity/OpacityAnimation.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Opacity/Opacity.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Number/ParticlesDensity.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Number/ParticlesNumber.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Shadow.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Shape/Shape.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Size/SizeAnimation.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Size/Size.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Stroke.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/ZIndex/ZIndex.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/ParticlesOptions.js","../node_modules/tsparticles-engine/esm/Utils/OptionsUtils.js","../node_modules/tsparticles-engine/esm/Utils/Utils.js","../node_modules/tsparticles-engine/esm/Core/Canvas.js","../node_modules/tsparticles-engine/esm/Core/Utils/EventListeners.js","../node_modules/tsparticles-engine/esm/Options/Classes/Background/Background.js","../node_modules/tsparticles-engine/esm/Options/Classes/BackgroundMask/BackgroundMaskCover.js","../node_modules/tsparticles-engine/esm/Options/Classes/BackgroundMask/BackgroundMask.js","../node_modules/tsparticles-engine/esm/Options/Classes/FullScreen/FullScreen.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/ClickEvent.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/DivEvent.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/Parallax.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/HoverEvent.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/ResizeEvent.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/Events.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Modes/Modes.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Interactivity.js","../node_modules/tsparticles-engine/esm/Options/Classes/ManualParticle.js","../node_modules/tsparticles-engine/esm/Options/Classes/Responsive.js","../node_modules/tsparticles-engine/esm/Options/Classes/Theme/ThemeDefault.js","../node_modules/tsparticles-engine/esm/Options/Classes/Theme/Theme.js","../node_modules/tsparticles-engine/esm/Options/Classes/Options.js","../node_modules/tsparticles-engine/esm/Core/Utils/InteractionManager.js","../node_modules/tsparticles-engine/esm/Core/Particle.js","../node_modules/tsparticles-engine/esm/Core/Utils/Point.js","../node_modules/tsparticles-engine/esm/Core/Utils/QuadTree.js","../node_modules/tsparticles-engine/esm/Core/Particles.js","../node_modules/tsparticles-engine/esm/Core/Retina.js","../node_modules/tsparticles-engine/esm/Core/Container.js","../node_modules/tsparticles-engine/esm/Utils/EventDispatcher.js","../node_modules/tsparticles-engine/esm/Core/Utils/Plugins.js","../node_modules/tsparticles-engine/esm/Core/Engine.js","../node_modules/tsparticles-engine/esm/Utils/HslColorManager.js","../node_modules/tsparticles-engine/esm/Utils/RgbColorManager.js","../node_modules/tsparticles-engine/esm/index.js","../node_modules/tsparticles-engine/esm/init.js","../node_modules/tsparticles-plugin-absorbers/esm/Options/Classes/AbsorberSizeLimit.js","../node_modules/tsparticles-plugin-absorbers/esm/Options/Classes/AbsorberSize.js","../node_modules/tsparticles-plugin-absorbers/esm/Options/Classes/Absorber.js","../node_modules/tsparticles-plugin-absorbers/esm/AbsorberInstance.js","../node_modules/tsparticles-plugin-absorbers/esm/Absorbers.js","../node_modules/tsparticles-plugin-absorbers/esm/index.js","../node_modules/tsparticles-updater-destroy/esm/Options/Classes/DestroyBounds.js","../node_modules/tsparticles-updater-destroy/esm/Options/Classes/SplitFactor.js","../node_modules/tsparticles-updater-destroy/esm/Options/Classes/SplitRate.js","../node_modules/tsparticles-updater-destroy/esm/Options/Classes/Split.js","../node_modules/tsparticles-updater-destroy/esm/Options/Classes/Destroy.js","../node_modules/tsparticles-updater-destroy/esm/Utils.js","../node_modules/tsparticles-updater-destroy/esm/DestroyUpdater.js","../node_modules/tsparticles-updater-destroy/esm/index.js","../node_modules/tsparticles-plugin-emitters/esm/Shapes/Circle/CircleShape.js","../node_modules/tsparticles-plugin-emitters/esm/Options/Classes/EmitterLife.js","../node_modules/tsparticles-plugin-emitters/esm/Options/Classes/EmitterRate.js","../node_modules/tsparticles-plugin-emitters/esm/Options/Classes/EmitterSize.js","../node_modules/tsparticles-plugin-emitters/esm/Options/Classes/Emitter.js","../node_modules/tsparticles-plugin-emitters/esm/EmitterInstance.js","../node_modules/tsparticles-plugin-emitters/esm/Emitters.js","../node_modules/tsparticles-plugin-emitters/esm/ShapeManager.js","../node_modules/tsparticles-plugin-emitters/esm/Shapes/Square/SquareShape.js","../node_modules/tsparticles-plugin-emitters/esm/index.js","../node_modules/tsparticles-engine/esm/Core/Utils/ExternalInteractorBase.js","../node_modules/tsparticles-interaction-external-trail/esm/Options/Classes/Trail.js","../node_modules/tsparticles-interaction-external-trail/esm/TrailMaker.js","../node_modules/tsparticles-interaction-external-trail/esm/index.js","../node_modules/tsparticles-updater-roll/esm/Options/Classes/RollLight.js","../node_modules/tsparticles-updater-roll/esm/Options/Classes/Roll.js","../node_modules/tsparticles-updater-roll/esm/RollUpdater.js","../node_modules/tsparticles-updater-roll/esm/Utils.js","../node_modules/tsparticles-updater-roll/esm/index.js","../node_modules/tsparticles-particles.js/esm/marcbruederlin/Particles.js","../node_modules/tsparticles-particles.js/esm/index.js","../node_modules/tsparticles-particles.js/esm/VincentGarreau/particles.js","../node_modules/tsparticles-move-base/esm/Utils.js","../node_modules/tsparticles-move-base/esm/BaseMover.js","../node_modules/tsparticles-move-base/esm/index.js","../node_modules/tsparticles-shape-circle/esm/CircleDrawer.js","../node_modules/tsparticles-shape-circle/esm/index.js","../node_modules/tsparticles-updater-color/esm/Utils.js","../node_modules/tsparticles-updater-color/esm/ColorUpdater.js","../node_modules/tsparticles-updater-color/esm/index.js","../node_modules/tsparticles-updater-opacity/esm/OpacityUpdater.js","../node_modules/tsparticles-updater-opacity/esm/Utils.js","../node_modules/tsparticles-updater-opacity/esm/index.js","../node_modules/tsparticles-updater-out-modes/esm/BounceOutMode.js","../node_modules/tsparticles-updater-out-modes/esm/Utils.js","../node_modules/tsparticles-updater-out-modes/esm/DestroyOutMode.js","../node_modules/tsparticles-updater-out-modes/esm/NoneOutMode.js","../node_modules/tsparticles-updater-out-modes/esm/OutOutMode.js","../node_modules/tsparticles-updater-out-modes/esm/OutOfCanvasUpdater.js","../node_modules/tsparticles-updater-out-modes/esm/index.js","../node_modules/tsparticles-updater-size/esm/SizeUpdater.js","../node_modules/tsparticles-updater-size/esm/Utils.js","../node_modules/tsparticles-updater-size/esm/index.js","../node_modules/tsparticles-basic/esm/index.js","../node_modules/tsparticles-plugin-easing-quad/esm/index.js","../node_modules/tsparticles-interaction-external-attract/esm/Options/Classes/Attract.js","../node_modules/tsparticles-interaction-external-attract/esm/Attractor.js","../node_modules/tsparticles-interaction-external-attract/esm/index.js","../node_modules/tsparticles-interaction-external-bounce/esm/Options/Classes/Bounce.js","../node_modules/tsparticles-interaction-external-bounce/esm/Bouncer.js","../node_modules/tsparticles-interaction-external-bounce/esm/index.js","../node_modules/tsparticles-interaction-external-bubble/esm/Options/Classes/BubbleBase.js","../node_modules/tsparticles-interaction-external-bubble/esm/Options/Classes/BubbleDiv.js","../node_modules/tsparticles-interaction-external-bubble/esm/Options/Classes/Bubble.js","../node_modules/tsparticles-interaction-external-bubble/esm/Utils.js","../node_modules/tsparticles-interaction-external-bubble/esm/Bubbler.js","../node_modules/tsparticles-interaction-external-bubble/esm/index.js","../node_modules/tsparticles-interaction-external-connect/esm/Options/Classes/ConnectLinks.js","../node_modules/tsparticles-interaction-external-connect/esm/Options/Classes/Connect.js","../node_modules/tsparticles-interaction-external-connect/esm/Utils.js","../node_modules/tsparticles-interaction-external-connect/esm/Connector.js","../node_modules/tsparticles-interaction-external-connect/esm/index.js","../node_modules/tsparticles-interaction-external-grab/esm/Options/Classes/GrabLinks.js","../node_modules/tsparticles-interaction-external-grab/esm/Options/Classes/Grab.js","../node_modules/tsparticles-interaction-external-grab/esm/Utils.js","../node_modules/tsparticles-interaction-external-grab/esm/Grabber.js","../node_modules/tsparticles-interaction-external-grab/esm/index.js","../node_modules/tsparticles-interaction-external-pause/esm/Pauser.js","../node_modules/tsparticles-interaction-external-pause/esm/index.js","../node_modules/tsparticles-interaction-external-push/esm/Options/Classes/Push.js","../node_modules/tsparticles-interaction-external-push/esm/Pusher.js","../node_modules/tsparticles-interaction-external-push/esm/index.js","../node_modules/tsparticles-interaction-external-remove/esm/Options/Classes/Remove.js","../node_modules/tsparticles-interaction-external-remove/esm/Remover.js","../node_modules/tsparticles-interaction-external-remove/esm/index.js","../node_modules/tsparticles-interaction-external-repulse/esm/Options/Classes/RepulseBase.js","../node_modules/tsparticles-interaction-external-repulse/esm/Options/Classes/RepulseDiv.js","../node_modules/tsparticles-interaction-external-repulse/esm/Options/Classes/Repulse.js","../node_modules/tsparticles-interaction-external-repulse/esm/Repulser.js","../node_modules/tsparticles-interaction-external-repulse/esm/index.js","../node_modules/tsparticles-interaction-external-slow/esm/Options/Classes/Slow.js","../node_modules/tsparticles-interaction-external-slow/esm/Slower.js","../node_modules/tsparticles-interaction-external-slow/esm/index.js","../node_modules/tsparticles-shape-image/esm/GifUtils/Constants.js","../node_modules/tsparticles-shape-image/esm/GifUtils/ByteStream.js","../node_modules/tsparticles-shape-image/esm/GifUtils/Utils.js","../node_modules/tsparticles-shape-image/esm/Utils.js","../node_modules/tsparticles-shape-image/esm/ImageDrawer.js","../node_modules/tsparticles-shape-image/esm/Options/Classes/Preload.js","../node_modules/tsparticles-shape-image/esm/ImagePreloader.js","../node_modules/tsparticles-shape-image/esm/index.js","../node_modules/tsparticles-updater-life/esm/Options/Classes/LifeDelay.js","../node_modules/tsparticles-updater-life/esm/Options/Classes/LifeDuration.js","../node_modules/tsparticles-updater-life/esm/Options/Classes/Life.js","../node_modules/tsparticles-updater-life/esm/LifeUpdater.js","../node_modules/tsparticles-updater-life/esm/index.js","../node_modules/tsparticles-shape-line/esm/LineDrawer.js","../node_modules/tsparticles-shape-line/esm/index.js","../node_modules/tsparticles-move-parallax/esm/ParallaxMover.js","../node_modules/tsparticles-move-parallax/esm/index.js","../node_modules/tsparticles-engine/esm/Core/Utils/ParticlesInteractorBase.js","../node_modules/tsparticles-interaction-particles-attract/esm/Attractor.js","../node_modules/tsparticles-interaction-particles-attract/esm/index.js","../node_modules/tsparticles-interaction-particles-collisions/esm/Absorb.js","../node_modules/tsparticles-interaction-particles-collisions/esm/Bounce.js","../node_modules/tsparticles-interaction-particles-collisions/esm/ResolveCollision.js","../node_modules/tsparticles-interaction-particles-collisions/esm/Destroy.js","../node_modules/tsparticles-interaction-particles-collisions/esm/Collider.js","../node_modules/tsparticles-interaction-particles-collisions/esm/index.js","../node_modules/tsparticles-interaction-particles-links/esm/CircleWarp.js","../node_modules/tsparticles-interaction-particles-links/esm/Options/Classes/LinksShadow.js","../node_modules/tsparticles-interaction-particles-links/esm/Options/Classes/LinksTriangle.js","../node_modules/tsparticles-interaction-particles-links/esm/Options/Classes/Links.js","../node_modules/tsparticles-interaction-particles-links/esm/Linker.js","../node_modules/tsparticles-interaction-particles-links/esm/interaction.js","../node_modules/tsparticles-interaction-particles-links/esm/Utils.js","../node_modules/tsparticles-interaction-particles-links/esm/LinkInstance.js","../node_modules/tsparticles-interaction-particles-links/esm/plugin.js","../node_modules/tsparticles-interaction-particles-links/esm/index.js","../node_modules/tsparticles-shape-polygon/esm/PolygonDrawerBase.js","../node_modules/tsparticles-shape-polygon/esm/PolygonDrawer.js","../node_modules/tsparticles-shape-polygon/esm/TriangleDrawer.js","../node_modules/tsparticles-shape-polygon/esm/index.js","../node_modules/tsparticles-updater-rotate/esm/Options/Classes/RotateAnimation.js","../node_modules/tsparticles-updater-rotate/esm/Options/Classes/Rotate.js","../node_modules/tsparticles-updater-rotate/esm/RotateUpdater.js","../node_modules/tsparticles-updater-rotate/esm/index.js","../node_modules/tsparticles-shape-square/esm/SquareDrawer.js","../node_modules/tsparticles-shape-square/esm/index.js","../node_modules/tsparticles-shape-star/esm/StarDrawer.js","../node_modules/tsparticles-shape-star/esm/index.js","../node_modules/tsparticles-updater-stroke-color/esm/Utils.js","../node_modules/tsparticles-updater-stroke-color/esm/StrokeColorUpdater.js","../node_modules/tsparticles-updater-stroke-color/esm/index.js","../node_modules/tsparticles-shape-text/esm/TextDrawer.js","../node_modules/tsparticles-shape-text/esm/index.js","../node_modules/tsparticles-slim/esm/index.js","../node_modules/tsparticles-updater-tilt/esm/Options/Classes/TiltAnimation.js","../node_modules/tsparticles-updater-tilt/esm/Options/Classes/Tilt.js","../node_modules/tsparticles-updater-tilt/esm/TiltUpdater.js","../node_modules/tsparticles-updater-tilt/esm/Utils.js","../node_modules/tsparticles-updater-tilt/esm/index.js","../node_modules/tsparticles-updater-twinkle/esm/Options/Classes/TwinkleValues.js","../node_modules/tsparticles-updater-twinkle/esm/Options/Classes/Twinkle.js","../node_modules/tsparticles-updater-twinkle/esm/TwinkleUpdater.js","../node_modules/tsparticles-updater-twinkle/esm/index.js","../node_modules/tsparticles-updater-wobble/esm/Options/Classes/WobbleSpeed.js","../node_modules/tsparticles-updater-wobble/esm/Options/Classes/Wobble.js","../node_modules/tsparticles-updater-wobble/esm/WobbleUpdater.js","../node_modules/tsparticles-updater-wobble/esm/Utils.js","../node_modules/tsparticles-updater-wobble/esm/index.js","../node_modules/tsparticles/esm/index.js"],"sourcesContent":["const isObject = (val) => typeof val === \"object\" && val !== null;\nexport function deepCompare(obj1, obj2, excludeKeyFn = () => false) {\n    if (!isObject(obj1) || !isObject(obj2)) {\n        return obj1 === obj2;\n    }\n    const keys1 = Object.keys(obj1).filter(key => !excludeKeyFn(key)), keys2 = Object.keys(obj2).filter(key => !excludeKeyFn(key));\n    if (keys1.length !== keys2.length) {\n        return false;\n    }\n    for (const key of keys1) {\n        const value1 = obj1[key], value2 = obj2[key];\n        if (isObject(value1) && isObject(value2)) {\n            if (value1 === obj2 && value2 === obj1) {\n                continue;\n            }\n            if (!deepCompare(value1, value2, excludeKeyFn)) {\n                return false;\n            }\n        }\n        else if (Array.isArray(value1) && Array.isArray(value2)) {\n            if (!deepCompareArrays(value1, value2, excludeKeyFn)) {\n                return false;\n            }\n        }\n        else if (value1 !== value2) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction deepCompareArrays(arr1, arr2, excludeKeyFn) {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        const val1 = arr1[i], val2 = arr2[i];\n        if (Array.isArray(val1) && Array.isArray(val2)) {\n            if (!deepCompareArrays(val1, val2, excludeKeyFn)) {\n                return false;\n            }\n        }\n        else if (isObject(val1) && isObject(val2)) {\n            if (!deepCompare(val1, val2, excludeKeyFn)) {\n                return false;\n            }\n        }\n        else if (val1 !== val2) {\n            return false;\n        }\n    }\n    return true;\n}\n","import React, { Component } from \"react\";\nimport { tsParticles } from \"tsparticles-engine\";\nimport { deepCompare } from \"./Utils\";\nconst defaultId = \"tsparticles\";\nclass Particles extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            init: false,\n            library: undefined,\n        };\n    }\n    destroy() {\n        if (!this.state.library) {\n            return;\n        }\n        this.state.library.destroy();\n        this.setState({\n            library: undefined,\n        });\n    }\n    shouldComponentUpdate(nextProps) {\n        const nextOptions = nextProps.options ?? nextProps.params, currentOptions = this.props.options ?? this.props.params;\n        return (nextProps.url !== this.props.url ||\n            nextProps.id !== this.props.id ||\n            nextProps.canvasClassName !== this.props.canvasClassName ||\n            nextProps.className !== this.props.className ||\n            nextProps.height !== this.props.height ||\n            nextProps.width !== this.props.width ||\n            !deepCompare(nextProps.style, this.props.style) ||\n            nextProps.init !== this.props.init ||\n            nextProps.loaded !== this.props.loaded ||\n            !deepCompare(nextOptions, currentOptions, key => key.startsWith(\"_\")));\n    }\n    componentDidUpdate() {\n        this.refresh();\n    }\n    forceUpdate() {\n        this.refresh().then(() => {\n            super.forceUpdate();\n        });\n    }\n    componentDidMount() {\n        (async () => {\n            if (this.props.init) {\n                await this.props.init(tsParticles);\n            }\n            this.setState({\n                init: true,\n            }, async () => {\n                await this.loadParticles();\n            });\n        })();\n    }\n    componentWillUnmount() {\n        this.destroy();\n    }\n    render() {\n        const { width, height, className, canvasClassName, id } = this.props;\n        return (React.createElement(\"div\", { className: className, id: id },\n            React.createElement(\"canvas\", { className: canvasClassName, style: {\n                    ...this.props.style,\n                    width,\n                    height,\n                } })));\n    }\n    async refresh() {\n        this.destroy();\n        await this.loadParticles();\n    }\n    async loadParticles() {\n        if (!this.state.init) {\n            return;\n        }\n        const id = this.props.id ?? Particles.defaultProps.id ?? defaultId, container = await tsParticles.load({\n            url: this.props.url,\n            id,\n            options: this.props.options ?? this.props.params,\n        });\n        if (this.props.container) {\n            this.props.container.current = container;\n        }\n        this.setState({\n            library: container,\n        });\n        if (this.props.loaded) {\n            await this.props.loaded(container);\n        }\n    }\n}\nParticles.defaultProps = {\n    width: \"100%\",\n    height: \"100%\",\n    options: {},\n    style: {},\n    url: undefined,\n    id: defaultId,\n};\nexport default Particles;\n","import Particles from \"./Particles\";\nexport default Particles;\nexport { Particles };\n","import { Range } from \"./Range\";\nimport { Rectangle } from \"./Rectangle\";\nimport { getDistance } from \"../../Utils/NumberUtils\";\nexport class Circle extends Range {\n    constructor(x, y, radius) {\n        super(x, y);\n        this.radius = radius;\n    }\n    contains(point) {\n        return getDistance(point, this.position) <= this.radius;\n    }\n    intersects(range) {\n        const pos1 = this.position, pos2 = range.position, distPos = { x: Math.abs(pos2.x - pos1.x), y: Math.abs(pos2.y - pos1.y) }, r = this.radius;\n        if (range instanceof Circle) {\n            const rSum = r + range.radius, dist = Math.sqrt(distPos.x ** 2 + distPos.y ** 2);\n            return rSum > dist;\n        }\n        else if (range instanceof Rectangle) {\n            const { width, height } = range.size, edges = Math.pow(distPos.x - width, 2) + Math.pow(distPos.y - height, 2);\n            return (edges <= r ** 2 ||\n                (distPos.x <= r + width && distPos.y <= r + height) ||\n                distPos.x <= width ||\n                distPos.y <= height);\n        }\n        return false;\n    }\n}\n","export const generatedAttribute = \"generated\";\nexport const mouseDownEvent = \"pointerdown\";\nexport const mouseUpEvent = \"pointerup\";\nexport const mouseLeaveEvent = \"pointerleave\";\nexport const mouseOutEvent = \"pointerout\";\nexport const mouseMoveEvent = \"pointermove\";\nexport const touchStartEvent = \"touchstart\";\nexport const touchEndEvent = \"touchend\";\nexport const touchMoveEvent = \"touchmove\";\nexport const touchCancelEvent = \"touchcancel\";\nexport const resizeEvent = \"resize\";\nexport const visibilityChangeEvent = \"visibilitychange\";\nexport const errorPrefix = \"tsParticles - Error\";\n","export class Range {\n    constructor(x, y) {\n        this.position = {\n            x: x,\n            y: y,\n        };\n    }\n}\n","import { Circle } from \"./Circle\";\nimport { Range } from \"./Range\";\nexport class Rectangle extends Range {\n    constructor(x, y, width, height) {\n        super(x, y);\n        this.size = {\n            height: height,\n            width: width,\n        };\n    }\n    contains(point) {\n        const w = this.size.width, h = this.size.height, pos = this.position;\n        return point.x >= pos.x && point.x <= pos.x + w && point.y >= pos.y && point.y <= pos.y + h;\n    }\n    intersects(range) {\n        if (range instanceof Circle) {\n            range.intersects(this);\n        }\n        const w = this.size.width, h = this.size.height, pos1 = this.position, pos2 = range.position, size2 = range instanceof Rectangle ? range.size : { width: 0, height: 0 }, w2 = size2.width, h2 = size2.height;\n        return pos2.x < pos1.x + w && pos2.x + w2 > pos1.x && pos2.y < pos1.y + h && pos2.y + h2 > pos1.y;\n    }\n}\n","import { Vector3d } from \"./Vector3d\";\nexport class Vector extends Vector3d {\n    constructor(xOrCoords, y) {\n        super(xOrCoords, y, 0);\n    }\n    static get origin() {\n        return Vector.create(0, 0);\n    }\n    static clone(source) {\n        return Vector.create(source.x, source.y);\n    }\n    static create(x, y) {\n        return new Vector(x, y);\n    }\n}\n","import { errorPrefix } from \"./Constants\";\nimport { isNumber } from \"../../Utils/Utils\";\nexport class Vector3d {\n    constructor(xOrCoords, y, z) {\n        this._updateFromAngle = (angle, length) => {\n            this.x = Math.cos(angle) * length;\n            this.y = Math.sin(angle) * length;\n        };\n        if (!isNumber(xOrCoords) && xOrCoords) {\n            this.x = xOrCoords.x;\n            this.y = xOrCoords.y;\n            const coords3d = xOrCoords;\n            this.z = coords3d.z ? coords3d.z : 0;\n        }\n        else if (xOrCoords !== undefined && y !== undefined) {\n            this.x = xOrCoords;\n            this.y = y;\n            this.z = z ?? 0;\n        }\n        else {\n            throw new Error(`${errorPrefix} Vector3d not initialized correctly`);\n        }\n    }\n    static get origin() {\n        return Vector3d.create(0, 0, 0);\n    }\n    get angle() {\n        return Math.atan2(this.y, this.x);\n    }\n    set angle(angle) {\n        this._updateFromAngle(angle, this.length);\n    }\n    get length() {\n        return Math.sqrt(this.getLengthSq());\n    }\n    set length(length) {\n        this._updateFromAngle(this.angle, length);\n    }\n    static clone(source) {\n        return Vector3d.create(source.x, source.y, source.z);\n    }\n    static create(x, y, z) {\n        return new Vector3d(x, y, z);\n    }\n    add(v) {\n        return Vector3d.create(this.x + v.x, this.y + v.y, this.z + v.z);\n    }\n    addTo(v) {\n        this.x += v.x;\n        this.y += v.y;\n        this.z += v.z;\n    }\n    copy() {\n        return Vector3d.clone(this);\n    }\n    distanceTo(v) {\n        return this.sub(v).length;\n    }\n    distanceToSq(v) {\n        return this.sub(v).getLengthSq();\n    }\n    div(n) {\n        return Vector3d.create(this.x / n, this.y / n, this.z / n);\n    }\n    divTo(n) {\n        this.x /= n;\n        this.y /= n;\n        this.z /= n;\n    }\n    getLengthSq() {\n        return this.x ** 2 + this.y ** 2;\n    }\n    mult(n) {\n        return Vector3d.create(this.x * n, this.y * n, this.z * n);\n    }\n    multTo(n) {\n        this.x *= n;\n        this.y *= n;\n        this.z *= n;\n    }\n    normalize() {\n        const length = this.length;\n        if (length != 0) {\n            this.multTo(1.0 / length);\n        }\n    }\n    rotate(angle) {\n        return Vector3d.create(this.x * Math.cos(angle) - this.y * Math.sin(angle), this.x * Math.sin(angle) + this.y * Math.cos(angle), 0);\n    }\n    setTo(c) {\n        this.x = c.x;\n        this.y = c.y;\n        const v3d = c;\n        this.z = v3d.z ? v3d.z : 0;\n    }\n    sub(v) {\n        return Vector3d.create(this.x - v.x, this.y - v.y, this.z - v.z);\n    }\n    subFrom(v) {\n        this.x -= v.x;\n        this.y -= v.y;\n        this.z -= v.z;\n    }\n}\n","import { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class ColorAnimation {\n    constructor() {\n        this.count = 0;\n        this.enable = false;\n        this.offset = 0;\n        this.speed = 1;\n        this.delay = 0;\n        this.decay = 0;\n        this.sync = true;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = setRangeValue(data.count);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.offset !== undefined) {\n            this.offset = setRangeValue(data.offset);\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { ColorAnimation } from \"./ColorAnimation\";\nexport class HslAnimation {\n    constructor() {\n        this.h = new ColorAnimation();\n        this.s = new ColorAnimation();\n        this.l = new ColorAnimation();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.h.load(data.h);\n        this.s.load(data.s);\n        this.l.load(data.l);\n    }\n}\n","import { isArray, isString } from \"../../Utils/Utils\";\nimport { HslAnimation } from \"./HslAnimation\";\nimport { OptionsColor } from \"./OptionsColor\";\nexport class AnimatableColor extends OptionsColor {\n    constructor() {\n        super();\n        this.animation = new HslAnimation();\n    }\n    static create(source, data) {\n        const color = new AnimatableColor();\n        color.load(source);\n        if (data !== undefined) {\n            if (isString(data) || isArray(data)) {\n                color.load({ value: data });\n            }\n            else {\n                color.load(data);\n            }\n        }\n        return color;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const colorAnimation = data.animation;\n        if (colorAnimation !== undefined) {\n            if (colorAnimation.enable !== undefined) {\n                this.animation.h.load(colorAnimation);\n            }\n            else {\n                this.animation.load(data.animation);\n            }\n        }\n    }\n}\n","import { isArray, isString } from \"../../Utils/Utils\";\nexport class OptionsColor {\n    constructor() {\n        this.value = \"\";\n    }\n    static create(source, data) {\n        const color = new OptionsColor();\n        color.load(source);\n        if (data !== undefined) {\n            if (isString(data) || isArray(data)) {\n                color.load({ value: data });\n            }\n            else {\n                color.load(data);\n            }\n        }\n        return color;\n    }\n    load(data) {\n        if (data?.value === undefined) {\n            return;\n        }\n        this.value = data.value;\n    }\n}\n","export class Random {\n    constructor() {\n        this.enable = false;\n        this.minimumValue = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.minimumValue !== undefined) {\n            this.minimumValue = data.minimumValue;\n        }\n    }\n}\n","import { AnimationOptions, RangedAnimationOptions } from \"./AnimationOptions\";\nimport { Random } from \"./Random\";\nimport { isBoolean } from \"../../Utils/Utils\";\nimport { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class ValueWithRandom {\n    constructor() {\n        this.random = new Random();\n        this.value = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (isBoolean(data.random)) {\n            this.random.enable = data.random;\n        }\n        else {\n            this.random.load(data.random);\n        }\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value, this.random.enable ? this.random.minimumValue : undefined);\n        }\n    }\n}\nexport class AnimationValueWithRandom extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new AnimationOptions();\n    }\n    get anim() {\n        return this.animation;\n    }\n    set anim(value) {\n        this.animation = value;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const animation = data.animation ?? data.anim;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n        }\n    }\n}\nexport class RangedAnimationValueWithRandom extends AnimationValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new RangedAnimationOptions();\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const animation = data.animation ?? data.anim;\n        if (animation !== undefined) {\n            this.value = setRangeValue(this.value, this.animation.enable ? this.animation.minimumValue : undefined);\n        }\n    }\n}\n","import { getStyleFromRgb } from \"./ColorUtils\";\nexport function drawLine(context, begin, end) {\n    context.beginPath();\n    context.moveTo(begin.x, begin.y);\n    context.lineTo(end.x, end.y);\n    context.closePath();\n}\nexport function drawTriangle(context, p1, p2, p3) {\n    context.beginPath();\n    context.moveTo(p1.x, p1.y);\n    context.lineTo(p2.x, p2.y);\n    context.lineTo(p3.x, p3.y);\n    context.closePath();\n}\nexport function paintBase(context, dimension, baseColor) {\n    context.fillStyle = baseColor ?? \"rgba(0,0,0,0)\";\n    context.fillRect(0, 0, dimension.width, dimension.height);\n}\nexport function paintImage(context, dimension, image, opacity) {\n    if (!image) {\n        return;\n    }\n    context.globalAlpha = opacity;\n    context.drawImage(image, 0, 0, dimension.width, dimension.height);\n    context.globalAlpha = 1;\n}\nexport function clear(context, dimension) {\n    context.clearRect(0, 0, dimension.width, dimension.height);\n}\nexport function drawParticle(data) {\n    const { container, context, particle, delta, colorStyles, backgroundMask, composite, radius, opacity, shadow, transform, } = data;\n    const pos = particle.getPosition(), angle = particle.rotation + (particle.pathRotation ? particle.velocity.angle : 0), rotateData = {\n        sin: Math.sin(angle),\n        cos: Math.cos(angle),\n    }, transformData = {\n        a: rotateData.cos * (transform.a ?? 1),\n        b: rotateData.sin * (transform.b ?? 1),\n        c: -rotateData.sin * (transform.c ?? 1),\n        d: rotateData.cos * (transform.d ?? 1),\n    };\n    context.setTransform(transformData.a, transformData.b, transformData.c, transformData.d, pos.x, pos.y);\n    context.beginPath();\n    if (backgroundMask) {\n        context.globalCompositeOperation = composite;\n    }\n    const shadowColor = particle.shadowColor;\n    if (shadow.enable && shadowColor) {\n        context.shadowBlur = shadow.blur;\n        context.shadowColor = getStyleFromRgb(shadowColor);\n        context.shadowOffsetX = shadow.offset.x;\n        context.shadowOffsetY = shadow.offset.y;\n    }\n    if (colorStyles.fill) {\n        context.fillStyle = colorStyles.fill;\n    }\n    const strokeWidth = particle.strokeWidth ?? 0;\n    context.lineWidth = strokeWidth;\n    if (colorStyles.stroke) {\n        context.strokeStyle = colorStyles.stroke;\n    }\n    drawShape(container, context, particle, radius, opacity, delta);\n    if (strokeWidth > 0) {\n        context.stroke();\n    }\n    if (particle.close) {\n        context.closePath();\n    }\n    if (particle.fill) {\n        context.fill();\n    }\n    drawShapeAfterEffect(container, context, particle, radius, opacity, delta);\n    context.globalCompositeOperation = \"source-over\";\n    context.setTransform(1, 0, 0, 1, 0, 0);\n}\nexport function drawShape(container, context, particle, radius, opacity, delta) {\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.drawers.get(particle.shape);\n    if (!drawer) {\n        return;\n    }\n    drawer.draw(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n}\nexport function drawShapeAfterEffect(container, context, particle, radius, opacity, delta) {\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.drawers.get(particle.shape);\n    if (!drawer || !drawer.afterEffect) {\n        return;\n    }\n    drawer.afterEffect(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n}\nexport function drawPlugin(context, plugin, delta) {\n    if (!plugin.draw) {\n        return;\n    }\n    plugin.draw(context, delta);\n}\nexport function drawParticlePlugin(context, plugin, particle, delta) {\n    if (!plugin.drawParticle) {\n        return;\n    }\n    plugin.drawParticle(context, particle, delta);\n}\nexport function alterHsl(color, type, value) {\n    return {\n        h: color.h,\n        s: color.s,\n        l: color.l + (type === \"darken\" ? -1 : 1) * value,\n    };\n}\n","import { getRandom, getRangeValue, mix, randomInRange, setRangeValue } from \"./NumberUtils\";\nimport { isArray, isString, itemFromArray } from \"./Utils\";\nconst randomColorValue = \"random\", midColorValue = \"mid\", colorManagers = new Map();\nexport function addColorManager(manager) {\n    colorManagers.set(manager.key, manager);\n}\nfunction hue2rgb(p, q, t) {\n    if (t < 0) {\n        t += 1;\n    }\n    if (t > 1) {\n        t -= 1;\n    }\n    if (t < 1 / 6) {\n        return p + (q - p) * 6 * t;\n    }\n    if (t < 1 / 2) {\n        return q;\n    }\n    if (t < 2 / 3) {\n        return p + (q - p) * (2 / 3 - t) * 6;\n    }\n    return p;\n}\nfunction stringToRgba(input) {\n    for (const [, manager] of colorManagers) {\n        if (input.startsWith(manager.stringPrefix)) {\n            return manager.parseString(input);\n        }\n    }\n    const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])([a-f\\d])?$/i, hexFixed = input.replace(shorthandRegex, (_, r, g, b, a) => {\n        return r + r + g + g + b + b + (a !== undefined ? a + a : \"\");\n    }), regex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})?$/i, result = regex.exec(hexFixed);\n    return result\n        ? {\n            a: result[4] !== undefined ? parseInt(result[4], 16) / 0xff : 1,\n            b: parseInt(result[3], 16),\n            g: parseInt(result[2], 16),\n            r: parseInt(result[1], 16),\n        }\n        : undefined;\n}\nexport function rangeColorToRgb(input, index, useIndex = true) {\n    if (!input) {\n        return;\n    }\n    const color = isString(input) ? { value: input } : input;\n    if (isString(color.value)) {\n        return colorToRgb(color.value, index, useIndex);\n    }\n    if (isArray(color.value)) {\n        return rangeColorToRgb({\n            value: itemFromArray(color.value, index, useIndex),\n        });\n    }\n    for (const [, manager] of colorManagers) {\n        const res = manager.handleRangeColor(color);\n        if (res) {\n            return res;\n        }\n    }\n}\nexport function colorToRgb(input, index, useIndex = true) {\n    if (!input) {\n        return;\n    }\n    const color = isString(input) ? { value: input } : input;\n    if (isString(color.value)) {\n        return color.value === randomColorValue ? getRandomRgbColor() : stringToRgb(color.value);\n    }\n    if (isArray(color.value)) {\n        return colorToRgb({\n            value: itemFromArray(color.value, index, useIndex),\n        });\n    }\n    for (const [, manager] of colorManagers) {\n        const res = manager.handleColor(color);\n        if (res) {\n            return res;\n        }\n    }\n}\nexport function colorToHsl(color, index, useIndex = true) {\n    const rgb = colorToRgb(color, index, useIndex);\n    return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rangeColorToHsl(color, index, useIndex = true) {\n    const rgb = rangeColorToRgb(color, index, useIndex);\n    return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rgbToHsl(color) {\n    const r1 = color.r / 255, g1 = color.g / 255, b1 = color.b / 255, max = Math.max(r1, g1, b1), min = Math.min(r1, g1, b1), res = {\n        h: 0,\n        l: (max + min) / 2,\n        s: 0,\n    };\n    if (max !== min) {\n        res.s = res.l < 0.5 ? (max - min) / (max + min) : (max - min) / (2.0 - max - min);\n        res.h =\n            r1 === max\n                ? (g1 - b1) / (max - min)\n                : (res.h = g1 === max ? 2.0 + (b1 - r1) / (max - min) : 4.0 + (r1 - g1) / (max - min));\n    }\n    res.l *= 100;\n    res.s *= 100;\n    res.h *= 60;\n    if (res.h < 0) {\n        res.h += 360;\n    }\n    if (res.h >= 360) {\n        res.h -= 360;\n    }\n    return res;\n}\nexport function stringToAlpha(input) {\n    return stringToRgba(input)?.a;\n}\nexport function stringToRgb(input) {\n    return stringToRgba(input);\n}\nexport function hslToRgb(hsl) {\n    const result = { b: 0, g: 0, r: 0 }, hslPercent = {\n        h: hsl.h / 360,\n        l: hsl.l / 100,\n        s: hsl.s / 100,\n    };\n    if (!hslPercent.s) {\n        result.r = result.g = result.b = hslPercent.l;\n    }\n    else {\n        const q = hslPercent.l < 0.5\n            ? hslPercent.l * (1 + hslPercent.s)\n            : hslPercent.l + hslPercent.s - hslPercent.l * hslPercent.s, p = 2 * hslPercent.l - q;\n        result.r = hue2rgb(p, q, hslPercent.h + 1 / 3);\n        result.g = hue2rgb(p, q, hslPercent.h);\n        result.b = hue2rgb(p, q, hslPercent.h - 1 / 3);\n    }\n    result.r = Math.floor(result.r * 255);\n    result.g = Math.floor(result.g * 255);\n    result.b = Math.floor(result.b * 255);\n    return result;\n}\nexport function hslaToRgba(hsla) {\n    const rgbResult = hslToRgb(hsla);\n    return {\n        a: hsla.a,\n        b: rgbResult.b,\n        g: rgbResult.g,\n        r: rgbResult.r,\n    };\n}\nexport function getRandomRgbColor(min) {\n    const fixedMin = min ?? 0;\n    return {\n        b: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n        g: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n        r: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n    };\n}\nexport function getStyleFromRgb(color, opacity) {\n    return `rgba(${color.r}, ${color.g}, ${color.b}, ${opacity ?? 1})`;\n}\nexport function getStyleFromHsl(color, opacity) {\n    return `hsla(${color.h}, ${color.s}%, ${color.l}%, ${opacity ?? 1})`;\n}\nexport function colorMix(color1, color2, size1, size2) {\n    let rgb1 = color1, rgb2 = color2;\n    if (rgb1.r === undefined) {\n        rgb1 = hslToRgb(color1);\n    }\n    if (rgb2.r === undefined) {\n        rgb2 = hslToRgb(color2);\n    }\n    return {\n        b: mix(rgb1.b, rgb2.b, size1, size2),\n        g: mix(rgb1.g, rgb2.g, size1, size2),\n        r: mix(rgb1.r, rgb2.r, size1, size2),\n    };\n}\nexport function getLinkColor(p1, p2, linkColor) {\n    if (linkColor === randomColorValue) {\n        return getRandomRgbColor();\n    }\n    else if (linkColor === midColorValue) {\n        const sourceColor = p1.getFillColor() ?? p1.getStrokeColor(), destColor = p2?.getFillColor() ?? p2?.getStrokeColor();\n        if (sourceColor && destColor && p2) {\n            return colorMix(sourceColor, destColor, p1.getRadius(), p2.getRadius());\n        }\n        else {\n            const hslColor = sourceColor ?? destColor;\n            if (hslColor) {\n                return hslToRgb(hslColor);\n            }\n        }\n    }\n    else {\n        return linkColor;\n    }\n}\nexport function getLinkRandomColor(optColor, blink, consent) {\n    const color = isString(optColor) ? optColor : optColor.value;\n    if (color === randomColorValue) {\n        if (consent) {\n            return rangeColorToRgb({\n                value: color,\n            });\n        }\n        if (blink) {\n            return randomColorValue;\n        }\n        return midColorValue;\n    }\n    else if (color === midColorValue) {\n        return midColorValue;\n    }\n    else {\n        return rangeColorToRgb({\n            value: color,\n        });\n    }\n}\nexport function getHslFromAnimation(animation) {\n    return animation !== undefined\n        ? {\n            h: animation.h.value,\n            s: animation.s.value,\n            l: animation.l.value,\n        }\n        : undefined;\n}\nexport function getHslAnimationFromHsl(hsl, animationOptions, reduceFactor) {\n    const resColor = {\n        h: {\n            enable: false,\n            value: hsl.h,\n        },\n        s: {\n            enable: false,\n            value: hsl.s,\n        },\n        l: {\n            enable: false,\n            value: hsl.l,\n        },\n    };\n    if (animationOptions) {\n        setColorAnimation(resColor.h, animationOptions.h, reduceFactor);\n        setColorAnimation(resColor.s, animationOptions.s, reduceFactor);\n        setColorAnimation(resColor.l, animationOptions.l, reduceFactor);\n    }\n    return resColor;\n}\nfunction setColorAnimation(colorValue, colorAnimation, reduceFactor) {\n    colorValue.enable = colorAnimation.enable;\n    if (colorValue.enable) {\n        colorValue.velocity = (getRangeValue(colorAnimation.speed) / 100) * reduceFactor;\n        colorValue.decay = 1 - getRangeValue(colorAnimation.decay);\n        colorValue.status = \"increasing\";\n        colorValue.loops = 0;\n        colorValue.maxLoops = getRangeValue(colorAnimation.count);\n        colorValue.time = 0;\n        colorValue.delayTime = getRangeValue(colorAnimation.delay) * 1000;\n        if (!colorAnimation.sync) {\n            colorValue.velocity *= getRandom();\n            colorValue.value *= getRandom();\n        }\n        colorValue.initialValue = colorValue.value;\n    }\n    else {\n        colorValue.velocity = 0;\n    }\n}\n","import { isBoolean, isNumber } from \"./Utils\";\nimport { Vector } from \"../Core/Utils/Vector\";\nlet _random = Math.random;\nconst easings = new Map();\nexport function addEasing(name, easing) {\n    if (easings.get(name)) {\n        return;\n    }\n    easings.set(name, easing);\n}\nexport function getEasing(name) {\n    return easings.get(name) || ((value) => value);\n}\nexport function setRandom(rnd = Math.random) {\n    _random = rnd;\n}\nexport function getRandom() {\n    return clamp(_random(), 0, 1 - 1e-16);\n}\nexport function clamp(num, min, max) {\n    return Math.min(Math.max(num, min), max);\n}\nexport function mix(comp1, comp2, weight1, weight2) {\n    return Math.floor((comp1 * weight1 + comp2 * weight2) / (weight1 + weight2));\n}\nexport function randomInRange(r) {\n    const max = getRangeMax(r);\n    let min = getRangeMin(r);\n    if (max === min) {\n        min = 0;\n    }\n    return getRandom() * (max - min) + min;\n}\nexport function getRangeValue(value) {\n    return isNumber(value) ? value : randomInRange(value);\n}\nexport function getRangeMin(value) {\n    return isNumber(value) ? value : value.min;\n}\nexport function getRangeMax(value) {\n    return isNumber(value) ? value : value.max;\n}\nexport function setRangeValue(source, value) {\n    if (source === value || (value === undefined && isNumber(source))) {\n        return source;\n    }\n    const min = getRangeMin(source), max = getRangeMax(source);\n    return value !== undefined\n        ? {\n            min: Math.min(min, value),\n            max: Math.max(max, value),\n        }\n        : setRangeValue(min, max);\n}\nexport function getValue(options) {\n    const random = options.random, { enable, minimumValue } = isBoolean(random)\n        ? {\n            enable: random,\n            minimumValue: 0,\n        }\n        : random;\n    return enable ? getRangeValue(setRangeValue(options.value, minimumValue)) : getRangeValue(options.value);\n}\nexport function getDistances(pointA, pointB) {\n    const dx = pointA.x - pointB.x, dy = pointA.y - pointB.y;\n    return { dx: dx, dy: dy, distance: Math.sqrt(dx ** 2 + dy ** 2) };\n}\nexport function getDistance(pointA, pointB) {\n    return getDistances(pointA, pointB).distance;\n}\nexport function getParticleDirectionAngle(direction, position, center) {\n    if (isNumber(direction)) {\n        return (direction * Math.PI) / 180;\n    }\n    switch (direction) {\n        case \"top\":\n            return -Math.PI / 2;\n        case \"top-right\":\n            return -Math.PI / 4;\n        case \"right\":\n            return 0;\n        case \"bottom-right\":\n            return Math.PI / 4;\n        case \"bottom\":\n            return Math.PI / 2;\n        case \"bottom-left\":\n            return (3 * Math.PI) / 4;\n        case \"left\":\n            return Math.PI;\n        case \"top-left\":\n            return (-3 * Math.PI) / 4;\n        case \"inside\":\n            return Math.atan2(center.y - position.y, center.x - position.x);\n        case \"outside\":\n            return Math.atan2(position.y - center.y, position.x - center.x);\n        default:\n            return getRandom() * Math.PI * 2;\n    }\n}\nexport function getParticleBaseVelocity(direction) {\n    const baseVelocity = Vector.origin;\n    baseVelocity.length = 1;\n    baseVelocity.angle = direction;\n    return baseVelocity;\n}\nexport function collisionVelocity(v1, v2, m1, m2) {\n    return Vector.create((v1.x * (m1 - m2)) / (m1 + m2) + (v2.x * 2 * m2) / (m1 + m2), v1.y);\n}\nexport function calcPositionFromSize(data) {\n    return data.position && data.position.x !== undefined && data.position.y !== undefined\n        ? {\n            x: (data.position.x * data.size.width) / 100,\n            y: (data.position.y * data.size.height) / 100,\n        }\n        : undefined;\n}\nexport function calcPositionOrRandomFromSize(data) {\n    return {\n        x: ((data.position?.x ?? getRandom() * 100) * data.size.width) / 100,\n        y: ((data.position?.y ?? getRandom() * 100) * data.size.height) / 100,\n    };\n}\nexport function calcPositionOrRandomFromSizeRanged(data) {\n    const position = {\n        x: data.position?.x !== undefined ? getRangeValue(data.position.x) : undefined,\n        y: data.position?.y !== undefined ? getRangeValue(data.position.y) : undefined,\n    };\n    return calcPositionOrRandomFromSize({ size: data.size, position });\n}\nexport function calcExactPositionOrRandomFromSize(data) {\n    return {\n        x: data.position?.x ?? getRandom() * data.size.width,\n        y: data.position?.y ?? getRandom() * data.size.height,\n    };\n}\nexport function calcExactPositionOrRandomFromSizeRanged(data) {\n    const position = {\n        x: data.position?.x !== undefined ? getRangeValue(data.position.x) : undefined,\n        y: data.position?.y !== undefined ? getRangeValue(data.position.y) : undefined,\n    };\n    return calcExactPositionOrRandomFromSize({ size: data.size, position });\n}\nexport function parseAlpha(input) {\n    return input ? (input.endsWith(\"%\") ? parseFloat(input) / 100 : parseFloat(input)) : 1;\n}\n","export class CollisionsAbsorb {\n    constructor() {\n        this.speed = 2;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n    }\n}\n","export class CollisionsOverlap {\n    constructor() {\n        this.enable = true;\n        this.retries = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.retries !== undefined) {\n            this.retries = data.retries;\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../ValueWithRandom\";\nexport class ParticlesBounceFactor extends ValueWithRandom {\n    constructor() {\n        super();\n        this.random.minimumValue = 0.1;\n        this.value = 1;\n    }\n}\n","import { ParticlesBounceFactor } from \"./ParticlesBounceFactor\";\nexport class ParticlesBounce {\n    constructor() {\n        this.horizontal = new ParticlesBounceFactor();\n        this.vertical = new ParticlesBounceFactor();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.horizontal.load(data.horizontal);\n        this.vertical.load(data.vertical);\n    }\n}\n","import { CollisionsAbsorb } from \"./CollisionsAbsorb\";\nimport { CollisionsOverlap } from \"./CollisionsOverlap\";\nimport { ParticlesBounce } from \"../Bounce/ParticlesBounce\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Collisions {\n    constructor() {\n        this.absorb = new CollisionsAbsorb();\n        this.bounce = new ParticlesBounce();\n        this.enable = false;\n        this.maxSpeed = 50;\n        this.mode = \"bounce\";\n        this.overlap = new CollisionsOverlap();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.absorb.load(data.absorb);\n        this.bounce.load(data.bounce);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = setRangeValue(data.maxSpeed);\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        this.overlap.load(data.overlap);\n    }\n}\n","import { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class MoveAngle {\n    constructor() {\n        this.offset = 0;\n        this.value = 90;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.offset !== undefined) {\n            this.offset = setRangeValue(data.offset);\n        }\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value);\n        }\n    }\n}\n","import { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class MoveAttract {\n    constructor() {\n        this.distance = 200;\n        this.enable = false;\n        this.rotate = {\n            x: 3000,\n            y: 3000,\n        };\n    }\n    get rotateX() {\n        return this.rotate.x;\n    }\n    set rotateX(value) {\n        this.rotate.x = value;\n    }\n    get rotateY() {\n        return this.rotate.y;\n    }\n    set rotateY(value) {\n        this.rotate.y = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = setRangeValue(data.distance);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        const rotateX = data.rotate?.x ?? data.rotateX;\n        if (rotateX !== undefined) {\n            this.rotate.x = rotateX;\n        }\n        const rotateY = data.rotate?.y ?? data.rotateY;\n        if (rotateY !== undefined) {\n            this.rotate.y = rotateY;\n        }\n    }\n}\n","export class MoveCenter {\n    constructor() {\n        this.x = 50;\n        this.y = 50;\n        this.mode = \"percent\";\n        this.radius = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.x !== undefined) {\n            this.x = data.x;\n        }\n        if (data.y !== undefined) {\n            this.y = data.y;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class MoveGravity {\n    constructor() {\n        this.acceleration = 9.81;\n        this.enable = false;\n        this.inverse = false;\n        this.maxSpeed = 50;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.acceleration !== undefined) {\n            this.acceleration = setRangeValue(data.acceleration);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.inverse !== undefined) {\n            this.inverse = data.inverse;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = setRangeValue(data.maxSpeed);\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../../ValueWithRandom\";\nimport { deepExtend } from \"../../../../../Utils/Utils\";\nexport class MovePath {\n    constructor() {\n        this.clamp = true;\n        this.delay = new ValueWithRandom();\n        this.enable = false;\n        this.options = {};\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.clamp !== undefined) {\n            this.clamp = data.clamp;\n        }\n        this.delay.load(data.delay);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.generator = data.generator;\n        if (data.options) {\n            this.options = deepExtend(this.options, data.options);\n        }\n    }\n}\n","import { OptionsColor } from \"../../OptionsColor\";\nexport class MoveTrailFill {\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n    }\n}\n","import { MoveTrailFill } from \"./MoveTrailFill\";\nexport class MoveTrail {\n    constructor() {\n        this.enable = false;\n        this.length = 10;\n        this.fill = new MoveTrailFill();\n    }\n    get fillColor() {\n        return this.fill.color;\n    }\n    set fillColor(value) {\n        this.fill.load({ color: value });\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.fill !== undefined || data.fillColor !== undefined) {\n            this.fill.load(data.fill || { color: data.fillColor });\n        }\n        if (data.length !== undefined) {\n            this.length = data.length;\n        }\n    }\n}\n","export class OutModes {\n    constructor() {\n        this.default = \"out\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.default !== undefined) {\n            this.default = data.default;\n        }\n        this.bottom = data.bottom ?? data.default;\n        this.left = data.left ?? data.default;\n        this.right = data.right ?? data.default;\n        this.top = data.top ?? data.default;\n    }\n}\n","import { deepExtend } from \"../../../../Utils/Utils\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Spin {\n    constructor() {\n        this.acceleration = 0;\n        this.enable = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.acceleration !== undefined) {\n            this.acceleration = setRangeValue(data.acceleration);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.position) {\n            this.position = deepExtend({}, data.position);\n        }\n    }\n}\n","import { isNumber, isObject } from \"../../../../Utils/Utils\";\nimport { MoveAngle } from \"./MoveAngle\";\nimport { MoveAttract } from \"./MoveAttract\";\nimport { MoveCenter } from \"./MoveCenter\";\nimport { MoveGravity } from \"./MoveGravity\";\nimport { MovePath } from \"./Path/MovePath\";\nimport { MoveTrail } from \"./MoveTrail\";\nimport { OutModes } from \"./OutModes\";\nimport { Spin } from \"./Spin\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Move {\n    constructor() {\n        this.angle = new MoveAngle();\n        this.attract = new MoveAttract();\n        this.center = new MoveCenter();\n        this.decay = 0;\n        this.distance = {};\n        this.direction = \"none\";\n        this.drift = 0;\n        this.enable = false;\n        this.gravity = new MoveGravity();\n        this.path = new MovePath();\n        this.outModes = new OutModes();\n        this.random = false;\n        this.size = false;\n        this.speed = 2;\n        this.spin = new Spin();\n        this.straight = false;\n        this.trail = new MoveTrail();\n        this.vibrate = false;\n        this.warp = false;\n    }\n    get bounce() {\n        return this.collisions;\n    }\n    set bounce(value) {\n        this.collisions = value;\n    }\n    get collisions() {\n        return false;\n    }\n    set collisions(_) {\n    }\n    get noise() {\n        return this.path;\n    }\n    set noise(value) {\n        this.path = value;\n    }\n    get outMode() {\n        return this.outModes.default;\n    }\n    set outMode(value) {\n        this.outModes.default = value;\n    }\n    get out_mode() {\n        return this.outMode;\n    }\n    set out_mode(value) {\n        this.outMode = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.angle.load(isNumber(data.angle) ? { value: data.angle } : data.angle);\n        this.attract.load(data.attract);\n        this.center.load(data.center);\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        if (data.distance !== undefined) {\n            this.distance = isNumber(data.distance)\n                ? {\n                    horizontal: data.distance,\n                    vertical: data.distance,\n                }\n                : { ...data.distance };\n        }\n        if (data.drift !== undefined) {\n            this.drift = setRangeValue(data.drift);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.gravity.load(data.gravity);\n        const outModes = data.outModes ?? data.outMode ?? data.out_mode;\n        if (outModes !== undefined) {\n            if (isObject(outModes)) {\n                this.outModes.load(outModes);\n            }\n            else {\n                this.outModes.load({\n                    default: outModes,\n                });\n            }\n        }\n        this.path.load(data.path ?? data.noise);\n        if (data.random !== undefined) {\n            this.random = data.random;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        this.spin.load(data.spin);\n        if (data.straight !== undefined) {\n            this.straight = data.straight;\n        }\n        this.trail.load(data.trail);\n        if (data.vibrate !== undefined) {\n            this.vibrate = data.vibrate;\n        }\n        if (data.warp !== undefined) {\n            this.warp = data.warp;\n        }\n    }\n}\n","import { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class AnimationOptions {\n    constructor() {\n        this.count = 0;\n        this.enable = false;\n        this.speed = 1;\n        this.decay = 0;\n        this.delay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = setRangeValue(data.count);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\nexport class RangedAnimationOptions extends AnimationOptions {\n    constructor() {\n        super();\n        this.mode = \"auto\";\n        this.startValue = \"random\";\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.minimumValue !== undefined) {\n            this.minimumValue = data.minimumValue;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.startValue !== undefined) {\n            this.startValue = data.startValue;\n        }\n    }\n}\n","import { RangedAnimationOptions } from \"../../AnimationOptions\";\nexport class OpacityAnimation extends RangedAnimationOptions {\n    constructor() {\n        super();\n        this.destroy = \"none\";\n        this.speed = 2;\n    }\n    get opacity_min() {\n        return this.minimumValue;\n    }\n    set opacity_min(value) {\n        this.minimumValue = value;\n    }\n    load(data) {\n        if (data?.opacity_min !== undefined && data.minimumValue === undefined) {\n            data.minimumValue = data.opacity_min;\n        }\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n    }\n}\n","import { OpacityAnimation } from \"./OpacityAnimation\";\nimport { ValueWithRandom } from \"../../ValueWithRandom\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Opacity extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new OpacityAnimation();\n        this.random.minimumValue = 0.1;\n        this.value = 1;\n    }\n    get anim() {\n        return this.animation;\n    }\n    set anim(value) {\n        this.animation = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        const animation = data.animation ?? data.anim;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n            this.value = setRangeValue(this.value, this.animation.enable ? this.animation.minimumValue : undefined);\n        }\n    }\n}\n","export class ParticlesDensity {\n    constructor() {\n        this.enable = false;\n        this.width = 1920;\n        this.height = 1080;\n    }\n    get area() {\n        return this.width;\n    }\n    set area(value) {\n        this.width = value;\n    }\n    get factor() {\n        return this.height;\n    }\n    set factor(value) {\n        this.height = value;\n    }\n    get value_area() {\n        return this.area;\n    }\n    set value_area(value) {\n        this.area = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        const width = data.width ?? data.area ?? data.value_area;\n        if (width !== undefined) {\n            this.width = width;\n        }\n        const height = data.height ?? data.factor;\n        if (height !== undefined) {\n            this.height = height;\n        }\n    }\n}\n","import { ParticlesDensity } from \"./ParticlesDensity\";\nexport class ParticlesNumber {\n    constructor() {\n        this.density = new ParticlesDensity();\n        this.limit = 0;\n        this.value = 0;\n    }\n    get max() {\n        return this.limit;\n    }\n    set max(value) {\n        this.limit = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.density.load(data.density);\n        const limit = data.limit ?? data.max;\n        if (limit !== undefined) {\n            this.limit = limit;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n","import { OptionsColor } from \"../OptionsColor\";\nexport class Shadow {\n    constructor() {\n        this.blur = 0;\n        this.color = new OptionsColor();\n        this.enable = false;\n        this.offset = {\n            x: 0,\n            y: 0,\n        };\n        this.color.value = \"#000\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.blur !== undefined) {\n            this.blur = data.blur;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.offset === undefined) {\n            return;\n        }\n        if (data.offset.x !== undefined) {\n            this.offset.x = data.offset.x;\n        }\n        if (data.offset.y !== undefined) {\n            this.offset.y = data.offset.y;\n        }\n    }\n}\n","import { deepExtend, isArray } from \"../../../../Utils/Utils\";\nconst charKey = \"character\", charAltKey = \"char\", imageKey = \"image\", imageAltKey = \"images\", polygonKey = \"polygon\", polygonAltKey = \"star\";\nexport class Shape {\n    constructor() {\n        this.loadShape = (item, mainKey, altKey, altOverride) => {\n            if (!item) {\n                return;\n            }\n            const itemIsArray = isArray(item), emptyValue = itemIsArray ? [] : {}, mainDifferentValues = itemIsArray !== isArray(this.options[mainKey]), altDifferentValues = itemIsArray !== isArray(this.options[altKey]);\n            if (mainDifferentValues) {\n                this.options[mainKey] = emptyValue;\n            }\n            if (altDifferentValues && altOverride) {\n                this.options[altKey] = emptyValue;\n            }\n            this.options[mainKey] = deepExtend(this.options[mainKey] ?? emptyValue, item);\n            if (!this.options[altKey] || altOverride) {\n                this.options[altKey] = deepExtend(this.options[altKey] ?? emptyValue, item);\n            }\n        };\n        this.close = true;\n        this.fill = true;\n        this.options = {};\n        this.type = \"circle\";\n    }\n    get character() {\n        return (this.options[charKey] ?? this.options[charAltKey]);\n    }\n    set character(value) {\n        this.options[charAltKey] = this.options[charKey] = value;\n    }\n    get custom() {\n        return this.options;\n    }\n    set custom(value) {\n        this.options = value;\n    }\n    get image() {\n        return (this.options[imageKey] ?? this.options[imageAltKey]);\n    }\n    set image(value) {\n        this.options[imageAltKey] = this.options[imageKey] = value;\n    }\n    get images() {\n        return this.image;\n    }\n    set images(value) {\n        this.image = value;\n    }\n    get polygon() {\n        return (this.options[polygonKey] ?? this.options[polygonAltKey]);\n    }\n    set polygon(value) {\n        this.options[polygonAltKey] = this.options[polygonKey] = value;\n    }\n    get stroke() {\n        return [];\n    }\n    set stroke(_value) {\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        const options = data.options ?? data.custom;\n        if (options !== undefined) {\n            for (const shape in options) {\n                const item = options[shape];\n                if (item) {\n                    this.options[shape] = deepExtend(this.options[shape] ?? {}, item);\n                }\n            }\n        }\n        this.loadShape(data.character, charKey, charAltKey, true);\n        this.loadShape(data.polygon, polygonKey, polygonAltKey, false);\n        this.loadShape(data.image ?? data.images, imageKey, imageAltKey, true);\n        if (data.close !== undefined) {\n            this.close = data.close;\n        }\n        if (data.fill !== undefined) {\n            this.fill = data.fill;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n","import { RangedAnimationOptions } from \"../../AnimationOptions\";\nexport class SizeAnimation extends RangedAnimationOptions {\n    constructor() {\n        super();\n        this.destroy = \"none\";\n        this.speed = 5;\n    }\n    get size_min() {\n        return this.minimumValue;\n    }\n    set size_min(value) {\n        this.minimumValue = value;\n    }\n    load(data) {\n        if (data?.size_min !== undefined && data.minimumValue === undefined) {\n            data.minimumValue = data.size_min;\n        }\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n    }\n}\n","import { SizeAnimation } from \"./SizeAnimation\";\nimport { ValueWithRandom } from \"../../ValueWithRandom\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Size extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new SizeAnimation();\n        this.random.minimumValue = 1;\n        this.value = 3;\n    }\n    get anim() {\n        return this.animation;\n    }\n    set anim(value) {\n        this.animation = value;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const animation = data.animation ?? data.anim;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n            this.value = setRangeValue(this.value, this.animation.enable ? this.animation.minimumValue : undefined);\n        }\n    }\n}\n","import { AnimatableColor } from \"../AnimatableColor\";\nimport { setRangeValue } from \"../../../Utils/NumberUtils\";\nexport class Stroke {\n    constructor() {\n        this.width = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = AnimatableColor.create(this.color, data.color);\n        }\n        if (data.width !== undefined) {\n            this.width = setRangeValue(data.width);\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = setRangeValue(data.opacity);\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../ValueWithRandom\";\nexport class ZIndex extends ValueWithRandom {\n    constructor() {\n        super();\n        this.opacityRate = 1;\n        this.sizeRate = 1;\n        this.velocityRate = 1;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.opacityRate !== undefined) {\n            this.opacityRate = data.opacityRate;\n        }\n        if (data.sizeRate !== undefined) {\n            this.sizeRate = data.sizeRate;\n        }\n        if (data.velocityRate !== undefined) {\n            this.velocityRate = data.velocityRate;\n        }\n    }\n}\n","import { deepExtend, executeOnSingleOrMultiple } from \"../../../Utils/Utils\";\nimport { AnimatableColor } from \"../AnimatableColor\";\nimport { Collisions } from \"./Collisions/Collisions\";\nimport { Move } from \"./Move/Move\";\nimport { Opacity } from \"./Opacity/Opacity\";\nimport { ParticlesBounce } from \"./Bounce/ParticlesBounce\";\nimport { ParticlesNumber } from \"./Number/ParticlesNumber\";\nimport { Shadow } from \"./Shadow\";\nimport { Shape } from \"./Shape/Shape\";\nimport { Size } from \"./Size/Size\";\nimport { Stroke } from \"./Stroke\";\nimport { ZIndex } from \"./ZIndex/ZIndex\";\nexport class ParticlesOptions {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n        this.bounce = new ParticlesBounce();\n        this.collisions = new Collisions();\n        this.color = new AnimatableColor();\n        this.color.value = \"#fff\";\n        this.groups = {};\n        this.move = new Move();\n        this.number = new ParticlesNumber();\n        this.opacity = new Opacity();\n        this.reduceDuplicates = false;\n        this.shadow = new Shadow();\n        this.shape = new Shape();\n        this.size = new Size();\n        this.stroke = new Stroke();\n        this.zIndex = new ZIndex();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.bounce.load(data.bounce);\n        this.color.load(AnimatableColor.create(this.color, data.color));\n        if (data.groups !== undefined) {\n            for (const group in data.groups) {\n                const item = data.groups[group];\n                if (item !== undefined) {\n                    this.groups[group] = deepExtend(this.groups[group] ?? {}, item);\n                }\n            }\n        }\n        this.move.load(data.move);\n        this.number.load(data.number);\n        this.opacity.load(data.opacity);\n        if (data.reduceDuplicates !== undefined) {\n            this.reduceDuplicates = data.reduceDuplicates;\n        }\n        this.shape.load(data.shape);\n        this.size.load(data.size);\n        this.shadow.load(data.shadow);\n        this.zIndex.load(data.zIndex);\n        const collisions = data.move?.collisions ?? data.move?.bounce;\n        if (collisions !== undefined) {\n            this.collisions.enable = collisions;\n        }\n        this.collisions.load(data.collisions);\n        if (data.interactivity !== undefined) {\n            this.interactivity = deepExtend({}, data.interactivity);\n        }\n        const strokeToLoad = data.stroke ?? data.shape?.stroke;\n        if (strokeToLoad) {\n            this.stroke = executeOnSingleOrMultiple(strokeToLoad, (t) => {\n                const tmp = new Stroke();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        if (this._container) {\n            const updaters = this._engine.plugins.updaters.get(this._container);\n            if (updaters) {\n                for (const updater of updaters) {\n                    if (updater.loadOptions) {\n                        updater.loadOptions(this, data);\n                    }\n                }\n            }\n            const interactors = this._engine.plugins.interactors.get(this._container);\n            if (interactors) {\n                for (const interactor of interactors) {\n                    if (interactor.loadParticlesOptions) {\n                        interactor.loadParticlesOptions(this, data);\n                    }\n                }\n            }\n        }\n    }\n}\n","import { ParticlesOptions } from \"../Options/Classes/Particles/ParticlesOptions\";\nexport function loadOptions(options, ...sourceOptionsArr) {\n    for (const sourceOptions of sourceOptionsArr) {\n        options.load(sourceOptions);\n    }\n}\nexport function loadParticlesOptions(engine, container, ...sourceOptionsArr) {\n    const options = new ParticlesOptions(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\n","import { collisionVelocity, getDistances, getRandom, getRangeMax, getRangeMin, getRangeValue, getValue, randomInRange, } from \"./NumberUtils\";\nimport { Vector } from \"../Core/Utils/Vector\";\nconst _logger = {\n    debug: console.debug,\n    error: console.error,\n    info: console.info,\n    log: console.log,\n    verbose: console.log,\n    warning: console.warn,\n};\nexport function setLogger(logger) {\n    _logger.debug = logger.debug || _logger.debug;\n    _logger.error = logger.error || _logger.error;\n    _logger.info = logger.info || _logger.info;\n    _logger.log = logger.log || _logger.log;\n    _logger.verbose = logger.verbose || _logger.verbose;\n    _logger.warning = logger.warning || _logger.warning;\n}\nexport function getLogger() {\n    return _logger;\n}\nfunction rectSideBounce(data) {\n    const res = { bounced: false }, { pSide, pOtherSide, rectSide, rectOtherSide, velocity, factor } = data;\n    if (pOtherSide.min < rectOtherSide.min ||\n        pOtherSide.min > rectOtherSide.max ||\n        pOtherSide.max < rectOtherSide.min ||\n        pOtherSide.max > rectOtherSide.max) {\n        return res;\n    }\n    if ((pSide.max >= rectSide.min && pSide.max <= (rectSide.max + rectSide.min) / 2 && velocity > 0) ||\n        (pSide.min <= rectSide.max && pSide.min > (rectSide.max + rectSide.min) / 2 && velocity < 0)) {\n        res.velocity = velocity * -factor;\n        res.bounced = true;\n    }\n    return res;\n}\nfunction checkSelector(element, selectors) {\n    const res = executeOnSingleOrMultiple(selectors, (selector) => {\n        return element.matches(selector);\n    });\n    return isArray(res) ? res.some((t) => t) : res;\n}\nexport function isSsr() {\n    return typeof window === \"undefined\" || !window || typeof window.document === \"undefined\" || !window.document;\n}\nexport function hasMatchMedia() {\n    return !isSsr() && typeof matchMedia !== \"undefined\";\n}\nexport function safeMatchMedia(query) {\n    if (!hasMatchMedia()) {\n        return;\n    }\n    return matchMedia(query);\n}\nexport function safeMutationObserver(callback) {\n    if (isSsr() || typeof MutationObserver === \"undefined\") {\n        return;\n    }\n    return new MutationObserver(callback);\n}\nexport function isInArray(value, array) {\n    return value === array || (isArray(array) && array.indexOf(value) > -1);\n}\nexport async function loadFont(font, weight) {\n    try {\n        await document.fonts.load(`${weight ?? \"400\"} 36px '${font ?? \"Verdana\"}'`);\n    }\n    catch {\n    }\n}\nexport function arrayRandomIndex(array) {\n    return Math.floor(getRandom() * array.length);\n}\nexport function itemFromArray(array, index, useIndex = true) {\n    return array[index !== undefined && useIndex ? index % array.length : arrayRandomIndex(array)];\n}\nexport function isPointInside(point, size, offset, radius, direction) {\n    return areBoundsInside(calculateBounds(point, radius ?? 0), size, offset, direction);\n}\nexport function areBoundsInside(bounds, size, offset, direction) {\n    let inside = true;\n    if (!direction || direction === \"bottom\") {\n        inside = bounds.top < size.height + offset.x;\n    }\n    if (inside && (!direction || direction === \"left\")) {\n        inside = bounds.right > offset.x;\n    }\n    if (inside && (!direction || direction === \"right\")) {\n        inside = bounds.left < size.width + offset.y;\n    }\n    if (inside && (!direction || direction === \"top\")) {\n        inside = bounds.bottom > offset.y;\n    }\n    return inside;\n}\nexport function calculateBounds(point, radius) {\n    return {\n        bottom: point.y + radius,\n        left: point.x - radius,\n        right: point.x + radius,\n        top: point.y - radius,\n    };\n}\nexport function deepExtend(destination, ...sources) {\n    for (const source of sources) {\n        if (source === undefined || source === null) {\n            continue;\n        }\n        if (!isObject(source)) {\n            destination = source;\n            continue;\n        }\n        const sourceIsArray = Array.isArray(source);\n        if (sourceIsArray && (isObject(destination) || !destination || !Array.isArray(destination))) {\n            destination = [];\n        }\n        else if (!sourceIsArray && (isObject(destination) || !destination || Array.isArray(destination))) {\n            destination = {};\n        }\n        for (const key in source) {\n            if (key === \"__proto__\") {\n                continue;\n            }\n            const sourceDict = source, value = sourceDict[key], destDict = destination;\n            destDict[key] =\n                isObject(value) && Array.isArray(value)\n                    ? value.map((v) => deepExtend(destDict[key], v))\n                    : deepExtend(destDict[key], value);\n        }\n    }\n    return destination;\n}\nexport function isDivModeEnabled(mode, divs) {\n    return !!findItemFromSingleOrMultiple(divs, (t) => t.enable && isInArray(mode, t.mode));\n}\nexport function divModeExecute(mode, divs, callback) {\n    executeOnSingleOrMultiple(divs, (div) => {\n        const divMode = div.mode, divEnabled = div.enable;\n        if (divEnabled && isInArray(mode, divMode)) {\n            singleDivModeExecute(div, callback);\n        }\n    });\n}\nexport function singleDivModeExecute(div, callback) {\n    const selectors = div.selectors;\n    executeOnSingleOrMultiple(selectors, (selector) => {\n        callback(selector, div);\n    });\n}\nexport function divMode(divs, element) {\n    if (!element || !divs) {\n        return;\n    }\n    return findItemFromSingleOrMultiple(divs, (div) => {\n        return checkSelector(element, div.selectors);\n    });\n}\nexport function circleBounceDataFromParticle(p) {\n    return {\n        position: p.getPosition(),\n        radius: p.getRadius(),\n        mass: p.getMass(),\n        velocity: p.velocity,\n        factor: Vector.create(getValue(p.options.bounce.horizontal), getValue(p.options.bounce.vertical)),\n    };\n}\nexport function circleBounce(p1, p2) {\n    const { x: xVelocityDiff, y: yVelocityDiff } = p1.velocity.sub(p2.velocity), [pos1, pos2] = [p1.position, p2.position], { dx: xDist, dy: yDist } = getDistances(pos2, pos1);\n    if (xVelocityDiff * xDist + yVelocityDiff * yDist < 0) {\n        return;\n    }\n    const angle = -Math.atan2(yDist, xDist), m1 = p1.mass, m2 = p2.mass, u1 = p1.velocity.rotate(angle), u2 = p2.velocity.rotate(angle), v1 = collisionVelocity(u1, u2, m1, m2), v2 = collisionVelocity(u2, u1, m1, m2), vFinal1 = v1.rotate(-angle), vFinal2 = v2.rotate(-angle);\n    p1.velocity.x = vFinal1.x * p1.factor.x;\n    p1.velocity.y = vFinal1.y * p1.factor.y;\n    p2.velocity.x = vFinal2.x * p2.factor.x;\n    p2.velocity.y = vFinal2.y * p2.factor.y;\n}\nexport function rectBounce(particle, divBounds) {\n    const pPos = particle.getPosition(), size = particle.getRadius(), bounds = calculateBounds(pPos, size), resH = rectSideBounce({\n        pSide: {\n            min: bounds.left,\n            max: bounds.right,\n        },\n        pOtherSide: {\n            min: bounds.top,\n            max: bounds.bottom,\n        },\n        rectSide: {\n            min: divBounds.left,\n            max: divBounds.right,\n        },\n        rectOtherSide: {\n            min: divBounds.top,\n            max: divBounds.bottom,\n        },\n        velocity: particle.velocity.x,\n        factor: getValue(particle.options.bounce.horizontal),\n    });\n    if (resH.bounced) {\n        if (resH.velocity !== undefined) {\n            particle.velocity.x = resH.velocity;\n        }\n        if (resH.position !== undefined) {\n            particle.position.x = resH.position;\n        }\n    }\n    const resV = rectSideBounce({\n        pSide: {\n            min: bounds.top,\n            max: bounds.bottom,\n        },\n        pOtherSide: {\n            min: bounds.left,\n            max: bounds.right,\n        },\n        rectSide: {\n            min: divBounds.top,\n            max: divBounds.bottom,\n        },\n        rectOtherSide: {\n            min: divBounds.left,\n            max: divBounds.right,\n        },\n        velocity: particle.velocity.y,\n        factor: getValue(particle.options.bounce.vertical),\n    });\n    if (resV.bounced) {\n        if (resV.velocity !== undefined) {\n            particle.velocity.y = resV.velocity;\n        }\n        if (resV.position !== undefined) {\n            particle.position.y = resV.position;\n        }\n    }\n}\nexport function executeOnSingleOrMultiple(obj, callback) {\n    return isArray(obj) ? obj.map((item, index) => callback(item, index)) : callback(obj, 0);\n}\nexport function itemFromSingleOrMultiple(obj, index, useIndex) {\n    return isArray(obj) ? itemFromArray(obj, index, useIndex) : obj;\n}\nexport function findItemFromSingleOrMultiple(obj, callback) {\n    return isArray(obj) ? obj.find((t, index) => callback(t, index)) : callback(obj, 0) ? obj : undefined;\n}\nexport function initParticleNumericAnimationValue(options, pxRatio) {\n    const valueRange = options.value, animationOptions = options.animation, res = {\n        delayTime: getRangeValue(animationOptions.delay) * 1000,\n        enable: animationOptions.enable,\n        value: getRangeValue(options.value) * pxRatio,\n        max: getRangeMax(valueRange) * pxRatio,\n        min: getRangeMin(valueRange) * pxRatio,\n        loops: 0,\n        maxLoops: getRangeValue(animationOptions.count),\n        time: 0,\n    };\n    if (animationOptions.enable) {\n        res.decay = 1 - getRangeValue(animationOptions.decay);\n        switch (animationOptions.mode) {\n            case \"increase\":\n                res.status = \"increasing\";\n                break;\n            case \"decrease\":\n                res.status = \"decreasing\";\n                break;\n            case \"random\":\n                res.status = getRandom() >= 0.5 ? \"increasing\" : \"decreasing\";\n                break;\n        }\n        const autoStatus = animationOptions.mode === \"auto\";\n        switch (animationOptions.startValue) {\n            case \"min\":\n                res.value = res.min;\n                if (autoStatus) {\n                    res.status = \"increasing\";\n                }\n                break;\n            case \"max\":\n                res.value = res.max;\n                if (autoStatus) {\n                    res.status = \"decreasing\";\n                }\n                break;\n            case \"random\":\n            default:\n                res.value = randomInRange(res);\n                if (autoStatus) {\n                    res.status = getRandom() >= 0.5 ? \"increasing\" : \"decreasing\";\n                }\n                break;\n        }\n    }\n    res.initialValue = res.value;\n    return res;\n}\nfunction getPositionOrSize(positionOrSize, canvasSize) {\n    const isPercent = positionOrSize.mode === \"percent\";\n    if (!isPercent) {\n        const { mode: _, ...rest } = positionOrSize;\n        return rest;\n    }\n    const isPosition = \"x\" in positionOrSize;\n    if (isPosition) {\n        return {\n            x: (positionOrSize.x / 100) * canvasSize.width,\n            y: (positionOrSize.y / 100) * canvasSize.height,\n        };\n    }\n    else {\n        return {\n            width: (positionOrSize.width / 100) * canvasSize.width,\n            height: (positionOrSize.height / 100) * canvasSize.height,\n        };\n    }\n}\nexport function getPosition(position, canvasSize) {\n    return getPositionOrSize(position, canvasSize);\n}\nexport function getSize(size, canvasSize) {\n    return getPositionOrSize(size, canvasSize);\n}\nexport function isBoolean(arg) {\n    return typeof arg === \"boolean\";\n}\nexport function isString(arg) {\n    return typeof arg === \"string\";\n}\nexport function isNumber(arg) {\n    return typeof arg === \"number\";\n}\nexport function isFunction(arg) {\n    return typeof arg === \"function\";\n}\nexport function isObject(arg) {\n    return typeof arg === \"object\" && arg !== null;\n}\nexport function isArray(arg) {\n    return Array.isArray(arg);\n}\n","import { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \"../Utils/CanvasUtils\";\nimport { deepExtend, getLogger, safeMutationObserver } from \"../Utils/Utils\";\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { generatedAttribute } from \"./Utils/Constants\";\nfunction setTransformValue(factor, newFactor, key) {\n    const newValue = newFactor[key];\n    if (newValue !== undefined) {\n        factor[key] = (factor[key] ?? 1) * newValue;\n    }\n}\nexport class Canvas {\n    constructor(container) {\n        this.container = container;\n        this._applyPostDrawUpdaters = (particle) => {\n            for (const updater of this._postDrawUpdaters) {\n                updater.afterDraw && updater.afterDraw(particle);\n            }\n        };\n        this._applyPreDrawUpdaters = (ctx, particle, radius, zOpacity, colorStyles, transform) => {\n            for (const updater of this._preDrawUpdaters) {\n                if (updater.getColorStyles) {\n                    const { fill, stroke } = updater.getColorStyles(particle, ctx, radius, zOpacity);\n                    if (fill) {\n                        colorStyles.fill = fill;\n                    }\n                    if (stroke) {\n                        colorStyles.stroke = stroke;\n                    }\n                }\n                if (updater.getTransformValues) {\n                    const updaterTransform = updater.getTransformValues(particle);\n                    for (const key in updaterTransform) {\n                        setTransformValue(transform, updaterTransform, key);\n                    }\n                }\n                updater.beforeDraw && updater.beforeDraw(particle);\n            }\n        };\n        this._applyResizePlugins = () => {\n            for (const plugin of this._resizePlugins) {\n                plugin.resize && plugin.resize();\n            }\n        };\n        this._getPluginParticleColors = (particle) => {\n            let fColor, sColor;\n            for (const plugin of this._colorPlugins) {\n                if (!fColor && plugin.particleFillColor) {\n                    fColor = rangeColorToHsl(plugin.particleFillColor(particle));\n                }\n                if (!sColor && plugin.particleStrokeColor) {\n                    sColor = rangeColorToHsl(plugin.particleStrokeColor(particle));\n                }\n                if (fColor && sColor) {\n                    break;\n                }\n            }\n            return [fColor, sColor];\n        };\n        this._initCover = () => {\n            const options = this.container.actualOptions, cover = options.backgroundMask.cover, color = cover.color, coverRgb = rangeColorToRgb(color);\n            if (coverRgb) {\n                const coverColor = {\n                    ...coverRgb,\n                    a: cover.opacity,\n                };\n                this._coverColorStyle = getStyleFromRgb(coverColor, coverColor.a);\n            }\n        };\n        this._initStyle = () => {\n            const element = this.element, options = this.container.actualOptions;\n            if (!element) {\n                return;\n            }\n            if (this._fullScreen) {\n                this._originalStyle = deepExtend({}, element.style);\n                this._setFullScreenStyle();\n            }\n            else {\n                this._resetOriginalStyle();\n            }\n            for (const key in options.style) {\n                if (!key || !options.style) {\n                    continue;\n                }\n                const value = options.style[key];\n                if (!value) {\n                    continue;\n                }\n                element.style.setProperty(key, value, \"important\");\n            }\n        };\n        this._initTrail = async () => {\n            const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = trail.fill;\n            if (!trail.enable) {\n                return;\n            }\n            if (trailFill.color) {\n                const fillColor = rangeColorToRgb(trailFill.color);\n                if (!fillColor) {\n                    return;\n                }\n                const trail = options.particles.move.trail;\n                this._trailFill = {\n                    color: {\n                        ...fillColor,\n                    },\n                    opacity: 1 / trail.length,\n                };\n            }\n            else {\n                await new Promise((resolve, reject) => {\n                    if (!trailFill.image) {\n                        return;\n                    }\n                    const img = document.createElement(\"img\");\n                    img.addEventListener(\"load\", () => {\n                        this._trailFill = {\n                            image: img,\n                            opacity: 1 / trail.length,\n                        };\n                        resolve();\n                    });\n                    img.addEventListener(\"error\", (evt) => {\n                        reject(evt.error);\n                    });\n                    img.src = trailFill.image;\n                });\n            }\n        };\n        this._paintBase = (baseColor) => {\n            this.draw((ctx) => paintBase(ctx, this.size, baseColor));\n        };\n        this._paintImage = (image, opacity) => {\n            this.draw((ctx) => paintImage(ctx, this.size, image, opacity));\n        };\n        this._repairStyle = () => {\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            this._safeMutationObserver((observer) => observer.disconnect());\n            this._initStyle();\n            this.initBackground();\n            this._safeMutationObserver((observer) => observer.observe(element, { attributes: true }));\n        };\n        this._resetOriginalStyle = () => {\n            const element = this.element, originalStyle = this._originalStyle;\n            if (!(element && originalStyle)) {\n                return;\n            }\n            const style = element.style;\n            style.position = originalStyle.position;\n            style.zIndex = originalStyle.zIndex;\n            style.top = originalStyle.top;\n            style.left = originalStyle.left;\n            style.width = originalStyle.width;\n            style.height = originalStyle.height;\n        };\n        this._safeMutationObserver = (callback) => {\n            if (!this._mutationObserver) {\n                return;\n            }\n            callback(this._mutationObserver);\n        };\n        this._setFullScreenStyle = () => {\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            const priority = \"important\", style = element.style;\n            style.setProperty(\"position\", \"fixed\", priority);\n            style.setProperty(\"z-index\", this.container.actualOptions.fullScreen.zIndex.toString(10), priority);\n            style.setProperty(\"top\", \"0\", priority);\n            style.setProperty(\"left\", \"0\", priority);\n            style.setProperty(\"width\", \"100%\", priority);\n            style.setProperty(\"height\", \"100%\", priority);\n        };\n        this.size = {\n            height: 0,\n            width: 0,\n        };\n        this._context = null;\n        this._generated = false;\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    get _fullScreen() {\n        return this.container.actualOptions.fullScreen.enable;\n    }\n    clear() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = this._trailFill;\n        if (options.backgroundMask.enable) {\n            this.paint();\n        }\n        else if (trail.enable && trail.length > 0 && trailFill) {\n            if (trailFill.color) {\n                this._paintBase(getStyleFromRgb(trailFill.color, trailFill.opacity));\n            }\n            else if (trailFill.image) {\n                this._paintImage(trailFill.image, trailFill.opacity);\n            }\n        }\n        else {\n            this.draw((ctx) => {\n                clear(ctx, this.size);\n            });\n        }\n    }\n    destroy() {\n        this.stop();\n        if (this._generated) {\n            const element = this.element;\n            element && element.remove();\n        }\n        else {\n            this._resetOriginalStyle();\n        }\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    draw(cb) {\n        const ctx = this._context;\n        if (!ctx) {\n            return;\n        }\n        return cb(ctx);\n    }\n    drawParticle(particle, delta) {\n        if (particle.spawning || particle.destroyed) {\n            return;\n        }\n        const radius = particle.getRadius();\n        if (radius <= 0) {\n            return;\n        }\n        const pfColor = particle.getFillColor(), psColor = particle.getStrokeColor() ?? pfColor;\n        let [fColor, sColor] = this._getPluginParticleColors(particle);\n        if (!fColor) {\n            fColor = pfColor;\n        }\n        if (!sColor) {\n            sColor = psColor;\n        }\n        if (!fColor && !sColor) {\n            return;\n        }\n        this.draw((ctx) => {\n            const container = this.container, options = container.actualOptions, zIndexOptions = particle.options.zIndex, zOpacityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.opacityRate, opacity = particle.bubble.opacity ?? particle.opacity?.value ?? 1, strokeOpacity = particle.strokeOpacity ?? opacity, zOpacity = opacity * zOpacityFactor, zStrokeOpacity = strokeOpacity * zOpacityFactor, transform = {}, colorStyles = {\n                fill: fColor ? getStyleFromHsl(fColor, zOpacity) : undefined,\n            };\n            colorStyles.stroke = sColor ? getStyleFromHsl(sColor, zStrokeOpacity) : colorStyles.fill;\n            this._applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform);\n            drawParticle({\n                container,\n                context: ctx,\n                particle,\n                delta,\n                colorStyles,\n                backgroundMask: options.backgroundMask.enable,\n                composite: options.backgroundMask.composite,\n                radius: radius * (1 - particle.zIndexFactor) ** zIndexOptions.sizeRate,\n                opacity: zOpacity,\n                shadow: particle.options.shadow,\n                transform,\n            });\n            this._applyPostDrawUpdaters(particle);\n        });\n    }\n    drawParticlePlugin(plugin, particle, delta) {\n        this.draw((ctx) => drawParticlePlugin(ctx, plugin, particle, delta));\n    }\n    drawPlugin(plugin, delta) {\n        this.draw((ctx) => drawPlugin(ctx, plugin, delta));\n    }\n    async init() {\n        this._safeMutationObserver((obs) => obs.disconnect());\n        this._mutationObserver = safeMutationObserver((records) => {\n            for (const record of records) {\n                if (record.type === \"attributes\" && record.attributeName === \"style\") {\n                    this._repairStyle();\n                }\n            }\n        });\n        this.resize();\n        this._initStyle();\n        this._initCover();\n        try {\n            await this._initTrail();\n        }\n        catch (e) {\n            getLogger().error(e);\n        }\n        this.initBackground();\n        this._safeMutationObserver((obs) => {\n            if (!this.element) {\n                return;\n            }\n            obs.observe(this.element, { attributes: true });\n        });\n        this.initUpdaters();\n        this.initPlugins();\n        this.paint();\n    }\n    initBackground() {\n        const options = this.container.actualOptions, background = options.background, element = this.element;\n        if (!element) {\n            return;\n        }\n        const elementStyle = element.style;\n        if (!elementStyle) {\n            return;\n        }\n        if (background.color) {\n            const color = rangeColorToRgb(background.color);\n            elementStyle.backgroundColor = color ? getStyleFromRgb(color, background.opacity) : \"\";\n        }\n        else {\n            elementStyle.backgroundColor = \"\";\n        }\n        elementStyle.backgroundImage = background.image || \"\";\n        elementStyle.backgroundPosition = background.position || \"\";\n        elementStyle.backgroundRepeat = background.repeat || \"\";\n        elementStyle.backgroundSize = background.size || \"\";\n    }\n    initPlugins() {\n        this._resizePlugins = [];\n        for (const [, plugin] of this.container.plugins) {\n            if (plugin.resize) {\n                this._resizePlugins.push(plugin);\n            }\n            if (plugin.particleFillColor || plugin.particleStrokeColor) {\n                this._colorPlugins.push(plugin);\n            }\n        }\n    }\n    initUpdaters() {\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        for (const updater of this.container.particles.updaters) {\n            if (updater.afterDraw) {\n                this._postDrawUpdaters.push(updater);\n            }\n            if (updater.getColorStyles || updater.getTransformValues || updater.beforeDraw) {\n                this._preDrawUpdaters.push(updater);\n            }\n        }\n    }\n    loadCanvas(canvas) {\n        if (this._generated && this.element) {\n            this.element.remove();\n        }\n        this._generated =\n            canvas.dataset && generatedAttribute in canvas.dataset\n                ? canvas.dataset[generatedAttribute] === \"true\"\n                : this._generated;\n        this.element = canvas;\n        this.element.ariaHidden = \"true\";\n        this._originalStyle = deepExtend({}, this.element.style);\n        this.size.height = canvas.offsetHeight;\n        this.size.width = canvas.offsetWidth;\n        this._context = this.element.getContext(\"2d\");\n        this._safeMutationObserver((obs) => {\n            if (!this.element) {\n                return;\n            }\n            obs.observe(this.element, { attributes: true });\n        });\n        this.container.retina.init();\n        this.initBackground();\n    }\n    paint() {\n        const options = this.container.actualOptions;\n        this.draw((ctx) => {\n            if (options.backgroundMask.enable && options.backgroundMask.cover) {\n                clear(ctx, this.size);\n                this._paintBase(this._coverColorStyle);\n            }\n            else {\n                this._paintBase();\n            }\n        });\n    }\n    resize() {\n        if (!this.element) {\n            return false;\n        }\n        const container = this.container, pxRatio = container.retina.pixelRatio, size = container.canvas.size, newSize = {\n            width: this.element.offsetWidth * pxRatio,\n            height: this.element.offsetHeight * pxRatio,\n        };\n        if (newSize.height === size.height &&\n            newSize.width === size.width &&\n            newSize.height === this.element.height &&\n            newSize.width === this.element.width) {\n            return false;\n        }\n        const oldSize = { ...size };\n        this.element.width = size.width = this.element.offsetWidth * pxRatio;\n        this.element.height = size.height = this.element.offsetHeight * pxRatio;\n        if (this.container.started) {\n            this.resizeFactor = {\n                width: size.width / oldSize.width,\n                height: size.height / oldSize.height,\n            };\n        }\n        return true;\n    }\n    stop() {\n        this._safeMutationObserver((obs) => obs.disconnect());\n        this._mutationObserver = undefined;\n        this.draw((ctx) => clear(ctx, this.size));\n    }\n    async windowResize() {\n        if (!this.element || !this.resize()) {\n            return;\n        }\n        const container = this.container, needsRefresh = container.updateActualOptions();\n        container.particles.setDensity();\n        this._applyResizePlugins();\n        if (needsRefresh) {\n            await container.refresh();\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, isBoolean, safeMatchMedia } from \"../../Utils/Utils\";\nimport { mouseDownEvent, mouseLeaveEvent, mouseMoveEvent, mouseOutEvent, mouseUpEvent, resizeEvent, touchCancelEvent, touchEndEvent, touchMoveEvent, touchStartEvent, visibilityChangeEvent, } from \"./Constants\";\nfunction manageListener(element, event, handler, add, options) {\n    if (add) {\n        let addOptions = { passive: true };\n        if (isBoolean(options)) {\n            addOptions.capture = options;\n        }\n        else if (options !== undefined) {\n            addOptions = options;\n        }\n        element.addEventListener(event, handler, addOptions);\n    }\n    else {\n        const removeOptions = options;\n        element.removeEventListener(event, handler, removeOptions);\n    }\n}\nexport class EventListeners {\n    constructor(container) {\n        this.container = container;\n        this._doMouseTouchClick = (e) => {\n            const container = this.container, options = container.actualOptions;\n            if (this._canPush) {\n                const mouseInteractivity = container.interactivity.mouse, mousePos = mouseInteractivity.position;\n                if (!mousePos) {\n                    return;\n                }\n                mouseInteractivity.clickPosition = { ...mousePos };\n                mouseInteractivity.clickTime = new Date().getTime();\n                const onClick = options.interactivity.events.onClick;\n                executeOnSingleOrMultiple(onClick.mode, (mode) => this.container.handleClickMode(mode));\n            }\n            if (e.type === \"touchend\") {\n                setTimeout(() => this._mouseTouchFinish(), 500);\n            }\n        };\n        this._handleThemeChange = (e) => {\n            const mediaEvent = e, container = this.container, options = container.options, defaultThemes = options.defaultThemes, themeName = mediaEvent.matches ? defaultThemes.dark : defaultThemes.light, theme = options.themes.find((theme) => theme.name === themeName);\n            if (theme && theme.default.auto) {\n                container.loadTheme(themeName);\n            }\n        };\n        this._handleVisibilityChange = () => {\n            const container = this.container, options = container.actualOptions;\n            this._mouseTouchFinish();\n            if (!options.pauseOnBlur) {\n                return;\n            }\n            if (document && document.hidden) {\n                container.pageHidden = true;\n                container.pause();\n            }\n            else {\n                container.pageHidden = false;\n                if (container.getAnimationStatus()) {\n                    container.play(true);\n                }\n                else {\n                    container.draw(true);\n                }\n            }\n        };\n        this._handleWindowResize = async () => {\n            if (this._resizeTimeout) {\n                clearTimeout(this._resizeTimeout);\n                delete this._resizeTimeout;\n            }\n            this._resizeTimeout = setTimeout(async () => {\n                const canvas = this.container.canvas;\n                canvas && (await canvas.windowResize());\n            }, this.container.actualOptions.interactivity.events.resize.delay * 1000);\n        };\n        this._manageInteractivityListeners = (mouseLeaveTmpEvent, add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions;\n            const interactivityEl = container.interactivity.element;\n            if (!interactivityEl) {\n                return;\n            }\n            const html = interactivityEl, canvasEl = container.canvas.element;\n            if (canvasEl) {\n                canvasEl.style.pointerEvents = html === canvasEl ? \"initial\" : \"none\";\n            }\n            if (!(options.interactivity.events.onHover.enable || options.interactivity.events.onClick.enable)) {\n                return;\n            }\n            manageListener(interactivityEl, mouseMoveEvent, handlers.mouseMove, add);\n            manageListener(interactivityEl, touchStartEvent, handlers.touchStart, add);\n            manageListener(interactivityEl, touchMoveEvent, handlers.touchMove, add);\n            if (!options.interactivity.events.onClick.enable) {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEnd, add);\n            }\n            else {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEndClick, add);\n                manageListener(interactivityEl, mouseUpEvent, handlers.mouseUp, add);\n                manageListener(interactivityEl, mouseDownEvent, handlers.mouseDown, add);\n            }\n            manageListener(interactivityEl, mouseLeaveTmpEvent, handlers.mouseLeave, add);\n            manageListener(interactivityEl, touchCancelEvent, handlers.touchCancel, add);\n        };\n        this._manageListeners = (add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions, detectType = options.interactivity.detectsOn, canvasEl = container.canvas.element;\n            let mouseLeaveTmpEvent = mouseLeaveEvent;\n            if (detectType === \"window\") {\n                container.interactivity.element = window;\n                mouseLeaveTmpEvent = mouseOutEvent;\n            }\n            else if (detectType === \"parent\" && canvasEl) {\n                container.interactivity.element = canvasEl.parentElement ?? canvasEl.parentNode;\n            }\n            else {\n                container.interactivity.element = canvasEl;\n            }\n            this._manageMediaMatch(add);\n            this._manageResize(add);\n            this._manageInteractivityListeners(mouseLeaveTmpEvent, add);\n            if (document) {\n                manageListener(document, visibilityChangeEvent, handlers.visibilityChange, add, false);\n            }\n        };\n        this._manageMediaMatch = (add) => {\n            const handlers = this._handlers, mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\");\n            if (!mediaMatch) {\n                return;\n            }\n            if (mediaMatch.addEventListener !== undefined) {\n                manageListener(mediaMatch, \"change\", handlers.themeChange, add);\n                return;\n            }\n            if (mediaMatch.addListener === undefined) {\n                return;\n            }\n            if (add) {\n                mediaMatch.addListener(handlers.oldThemeChange);\n            }\n            else {\n                mediaMatch.removeListener(handlers.oldThemeChange);\n            }\n        };\n        this._manageResize = (add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions;\n            if (!options.interactivity.events.resize) {\n                return;\n            }\n            if (typeof ResizeObserver === \"undefined\") {\n                manageListener(window, resizeEvent, handlers.resize, add);\n                return;\n            }\n            const canvasEl = container.canvas.element;\n            if (this._resizeObserver && !add) {\n                if (canvasEl) {\n                    this._resizeObserver.unobserve(canvasEl);\n                }\n                this._resizeObserver.disconnect();\n                delete this._resizeObserver;\n            }\n            else if (!this._resizeObserver && add && canvasEl) {\n                this._resizeObserver = new ResizeObserver(async (entries) => {\n                    const entry = entries.find((e) => e.target === canvasEl);\n                    if (!entry) {\n                        return;\n                    }\n                    await this._handleWindowResize();\n                });\n                this._resizeObserver.observe(canvasEl);\n            }\n        };\n        this._mouseDown = () => {\n            const { interactivity } = this.container;\n            if (!interactivity) {\n                return;\n            }\n            const { mouse } = interactivity;\n            mouse.clicking = true;\n            mouse.downPosition = mouse.position;\n        };\n        this._mouseTouchClick = (e) => {\n            const container = this.container, options = container.actualOptions, { mouse } = container.interactivity;\n            mouse.inside = true;\n            let handled = false;\n            const mousePosition = mouse.position;\n            if (!mousePosition || !options.interactivity.events.onClick.enable) {\n                return;\n            }\n            for (const [, plugin] of container.plugins) {\n                if (!plugin.clickPositionValid) {\n                    continue;\n                }\n                handled = plugin.clickPositionValid(mousePosition);\n                if (handled) {\n                    break;\n                }\n            }\n            if (!handled) {\n                this._doMouseTouchClick(e);\n            }\n            mouse.clicking = false;\n        };\n        this._mouseTouchFinish = () => {\n            const interactivity = this.container.interactivity;\n            if (!interactivity) {\n                return;\n            }\n            const mouse = interactivity.mouse;\n            delete mouse.position;\n            delete mouse.clickPosition;\n            delete mouse.downPosition;\n            interactivity.status = mouseLeaveEvent;\n            mouse.inside = false;\n            mouse.clicking = false;\n        };\n        this._mouseTouchMove = (e) => {\n            const container = this.container, options = container.actualOptions, interactivity = container.interactivity, canvasEl = container.canvas.element;\n            if (!interactivity || !interactivity.element) {\n                return;\n            }\n            interactivity.mouse.inside = true;\n            let pos;\n            if (e.type.startsWith(\"pointer\")) {\n                this._canPush = true;\n                const mouseEvent = e;\n                if (interactivity.element === window) {\n                    if (canvasEl) {\n                        const clientRect = canvasEl.getBoundingClientRect();\n                        pos = {\n                            x: mouseEvent.clientX - clientRect.left,\n                            y: mouseEvent.clientY - clientRect.top,\n                        };\n                    }\n                }\n                else if (options.interactivity.detectsOn === \"parent\") {\n                    const source = mouseEvent.target, target = mouseEvent.currentTarget;\n                    if (source && target && canvasEl) {\n                        const sourceRect = source.getBoundingClientRect(), targetRect = target.getBoundingClientRect(), canvasRect = canvasEl.getBoundingClientRect();\n                        pos = {\n                            x: mouseEvent.offsetX + 2 * sourceRect.left - (targetRect.left + canvasRect.left),\n                            y: mouseEvent.offsetY + 2 * sourceRect.top - (targetRect.top + canvasRect.top),\n                        };\n                    }\n                    else {\n                        pos = {\n                            x: mouseEvent.offsetX ?? mouseEvent.clientX,\n                            y: mouseEvent.offsetY ?? mouseEvent.clientY,\n                        };\n                    }\n                }\n                else if (mouseEvent.target === canvasEl) {\n                    pos = {\n                        x: mouseEvent.offsetX ?? mouseEvent.clientX,\n                        y: mouseEvent.offsetY ?? mouseEvent.clientY,\n                    };\n                }\n            }\n            else {\n                this._canPush = e.type !== \"touchmove\";\n                if (canvasEl) {\n                    const touchEvent = e, lastTouch = touchEvent.touches[touchEvent.touches.length - 1], canvasRect = canvasEl.getBoundingClientRect();\n                    pos = {\n                        x: lastTouch.clientX - (canvasRect.left ?? 0),\n                        y: lastTouch.clientY - (canvasRect.top ?? 0),\n                    };\n                }\n            }\n            const pxRatio = container.retina.pixelRatio;\n            if (pos) {\n                pos.x *= pxRatio;\n                pos.y *= pxRatio;\n            }\n            interactivity.mouse.position = pos;\n            interactivity.status = mouseMoveEvent;\n        };\n        this._touchEnd = (e) => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.delete(touch.identifier);\n            }\n            this._mouseTouchFinish();\n        };\n        this._touchEndClick = (e) => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.delete(touch.identifier);\n            }\n            this._mouseTouchClick(e);\n        };\n        this._touchStart = (e) => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.set(touch.identifier, performance.now());\n            }\n            this._mouseTouchMove(e);\n        };\n        this._canPush = true;\n        this._touches = new Map();\n        this._handlers = {\n            mouseDown: () => this._mouseDown(),\n            mouseLeave: () => this._mouseTouchFinish(),\n            mouseMove: (e) => this._mouseTouchMove(e),\n            mouseUp: (e) => this._mouseTouchClick(e),\n            touchStart: (e) => this._touchStart(e),\n            touchMove: (e) => this._mouseTouchMove(e),\n            touchEnd: (e) => this._touchEnd(e),\n            touchCancel: (e) => this._touchEnd(e),\n            touchEndClick: (e) => this._touchEndClick(e),\n            visibilityChange: () => this._handleVisibilityChange(),\n            themeChange: (e) => this._handleThemeChange(e),\n            oldThemeChange: (e) => this._handleThemeChange(e),\n            resize: () => {\n                this._handleWindowResize();\n            },\n        };\n    }\n    addListeners() {\n        this._manageListeners(true);\n    }\n    removeListeners() {\n        this._manageListeners(false);\n    }\n}\n","import { OptionsColor } from \"../OptionsColor\";\nexport class Background {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"\";\n        this.image = \"\";\n        this.position = \"\";\n        this.repeat = \"\";\n        this.size = \"\";\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n        if (data.position !== undefined) {\n            this.position = data.position;\n        }\n        if (data.repeat !== undefined) {\n            this.repeat = data.repeat;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { OptionsColor } from \"../OptionsColor\";\nexport class BackgroundMaskCover {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"#fff\";\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { BackgroundMaskCover } from \"./BackgroundMaskCover\";\nimport { isString } from \"../../../Utils/Utils\";\nexport class BackgroundMask {\n    constructor() {\n        this.composite = \"destination-out\";\n        this.cover = new BackgroundMaskCover();\n        this.enable = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.composite !== undefined) {\n            this.composite = data.composite;\n        }\n        if (data.cover !== undefined) {\n            const cover = data.cover;\n            const color = (isString(data.cover) ? { color: data.cover } : data.cover);\n            this.cover.load(cover.color !== undefined ? cover : { color: color });\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","export class FullScreen {\n    constructor() {\n        this.enable = true;\n        this.zIndex = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.zIndex !== undefined) {\n            this.zIndex = data.zIndex;\n        }\n    }\n}\n","export class ClickEvent {\n    constructor() {\n        this.enable = false;\n        this.mode = [];\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple } from \"../../../../Utils/Utils\";\nexport class DivEvent {\n    constructor() {\n        this.selectors = [];\n        this.enable = false;\n        this.mode = [];\n        this.type = \"circle\";\n    }\n    get el() {\n        return this.elementId;\n    }\n    set el(value) {\n        this.elementId = value;\n    }\n    get elementId() {\n        return this.ids;\n    }\n    set elementId(value) {\n        this.ids = value;\n    }\n    get ids() {\n        return executeOnSingleOrMultiple(this.selectors, (t) => t.replace(\"#\", \"\"));\n    }\n    set ids(value) {\n        this.selectors = executeOnSingleOrMultiple(value, (t) => `#${t}`);\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        const ids = data.ids ?? data.elementId ?? data.el;\n        if (ids !== undefined) {\n            this.ids = ids;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n","export class Parallax {\n    constructor() {\n        this.enable = false;\n        this.force = 2;\n        this.smooth = 10;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.force !== undefined) {\n            this.force = data.force;\n        }\n        if (data.smooth !== undefined) {\n            this.smooth = data.smooth;\n        }\n    }\n}\n","import { Parallax } from \"./Parallax\";\nexport class HoverEvent {\n    constructor() {\n        this.enable = false;\n        this.mode = [];\n        this.parallax = new Parallax();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        this.parallax.load(data.parallax);\n    }\n}\n","export class ResizeEvent {\n    constructor() {\n        this.delay = 0.5;\n        this.enable = true;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.delay !== undefined) {\n            this.delay = data.delay;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, isBoolean } from \"../../../../Utils/Utils\";\nimport { ClickEvent } from \"./ClickEvent\";\nimport { DivEvent } from \"./DivEvent\";\nimport { HoverEvent } from \"./HoverEvent\";\nimport { ResizeEvent } from \"./ResizeEvent\";\nexport class Events {\n    constructor() {\n        this.onClick = new ClickEvent();\n        this.onDiv = new DivEvent();\n        this.onHover = new HoverEvent();\n        this.resize = new ResizeEvent();\n    }\n    get onclick() {\n        return this.onClick;\n    }\n    set onclick(value) {\n        this.onClick = value;\n    }\n    get ondiv() {\n        return this.onDiv;\n    }\n    set ondiv(value) {\n        this.onDiv = value;\n    }\n    get onhover() {\n        return this.onHover;\n    }\n    set onhover(value) {\n        this.onHover = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.onClick.load(data.onClick ?? data.onclick);\n        const onDiv = data.onDiv ?? data.ondiv;\n        if (onDiv !== undefined) {\n            this.onDiv = executeOnSingleOrMultiple(onDiv, (t) => {\n                const tmp = new DivEvent();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        this.onHover.load(data.onHover ?? data.onhover);\n        if (isBoolean(data.resize)) {\n            this.resize.enable = data.resize;\n        }\n        else {\n            this.resize.load(data.resize);\n        }\n    }\n}\n","export class Modes {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (!this._container) {\n            return;\n        }\n        const interactors = this._engine.plugins.interactors.get(this._container);\n        if (!interactors) {\n            return;\n        }\n        for (const interactor of interactors) {\n            if (!interactor.loadModeOptions) {\n                continue;\n            }\n            interactor.loadModeOptions(this, data);\n        }\n    }\n}\n","import { Events } from \"./Events/Events\";\nimport { Modes } from \"./Modes/Modes\";\nexport class Interactivity {\n    constructor(engine, container) {\n        this.detectsOn = \"window\";\n        this.events = new Events();\n        this.modes = new Modes(engine, container);\n    }\n    get detect_on() {\n        return this.detectsOn;\n    }\n    set detect_on(value) {\n        this.detectsOn = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        const detectsOn = data.detectsOn ?? data.detect_on;\n        if (detectsOn !== undefined) {\n            this.detectsOn = detectsOn;\n        }\n        this.events.load(data.events);\n        this.modes.load(data.modes);\n    }\n}\n","import { deepExtend } from \"../../Utils/Utils\";\nexport class ManualParticle {\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.position) {\n            this.position = {\n                x: data.position.x ?? 50,\n                y: data.position.y ?? 50,\n                mode: data.position.mode ?? \"percent\",\n            };\n        }\n        if (data.options) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","import { deepExtend } from \"../../Utils/Utils\";\nexport class Responsive {\n    constructor() {\n        this.maxWidth = Infinity;\n        this.options = {};\n        this.mode = \"canvas\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.maxWidth !== undefined) {\n            this.maxWidth = data.maxWidth;\n        }\n        if (data.mode !== undefined) {\n            if (data.mode === \"screen\") {\n                this.mode = \"screen\";\n            }\n            else {\n                this.mode = \"canvas\";\n            }\n        }\n        if (data.options !== undefined) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","export class ThemeDefault {\n    constructor() {\n        this.auto = false;\n        this.mode = \"any\";\n        this.value = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.auto !== undefined) {\n            this.auto = data.auto;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n","import { ThemeDefault } from \"./ThemeDefault\";\nimport { deepExtend } from \"../../../Utils/Utils\";\nexport class Theme {\n    constructor() {\n        this.name = \"\";\n        this.default = new ThemeDefault();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.name !== undefined) {\n            this.name = data.name;\n        }\n        this.default.load(data.default);\n        if (data.options !== undefined) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","import { deepExtend, executeOnSingleOrMultiple, isBoolean, safeMatchMedia } from \"../../Utils/Utils\";\nimport { Background } from \"./Background/Background\";\nimport { BackgroundMask } from \"./BackgroundMask/BackgroundMask\";\nimport { FullScreen } from \"./FullScreen/FullScreen\";\nimport { Interactivity } from \"./Interactivity/Interactivity\";\nimport { ManualParticle } from \"./ManualParticle\";\nimport { Responsive } from \"./Responsive\";\nimport { Theme } from \"./Theme/Theme\";\nimport { loadParticlesOptions } from \"../../Utils/OptionsUtils\";\nimport { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class Options {\n    constructor(engine, container) {\n        this._findDefaultTheme = (mode) => {\n            return (this.themes.find((theme) => theme.default.value && theme.default.mode === mode) ??\n                this.themes.find((theme) => theme.default.value && theme.default.mode === \"any\"));\n        };\n        this._importPreset = (preset) => {\n            this.load(this._engine.plugins.getPreset(preset));\n        };\n        this._engine = engine;\n        this._container = container;\n        this.autoPlay = true;\n        this.background = new Background();\n        this.backgroundMask = new BackgroundMask();\n        this.defaultThemes = {};\n        this.delay = 0;\n        this.fullScreen = new FullScreen();\n        this.detectRetina = true;\n        this.duration = 0;\n        this.fpsLimit = 120;\n        this.interactivity = new Interactivity(engine, container);\n        this.manualParticles = [];\n        this.particles = loadParticlesOptions(this._engine, this._container);\n        this.pauseOnBlur = true;\n        this.pauseOnOutsideViewport = true;\n        this.responsive = [];\n        this.smooth = false;\n        this.style = {};\n        this.themes = [];\n        this.zLayers = 100;\n    }\n    get backgroundMode() {\n        return this.fullScreen;\n    }\n    set backgroundMode(value) {\n        this.fullScreen.load(value);\n    }\n    get fps_limit() {\n        return this.fpsLimit;\n    }\n    set fps_limit(value) {\n        this.fpsLimit = value;\n    }\n    get retina_detect() {\n        return this.detectRetina;\n    }\n    set retina_detect(value) {\n        this.detectRetina = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.preset !== undefined) {\n            executeOnSingleOrMultiple(data.preset, (preset) => this._importPreset(preset));\n        }\n        if (data.autoPlay !== undefined) {\n            this.autoPlay = data.autoPlay;\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        const detectRetina = data.detectRetina ?? data.retina_detect;\n        if (detectRetina !== undefined) {\n            this.detectRetina = detectRetina;\n        }\n        if (data.duration !== undefined) {\n            this.duration = setRangeValue(data.duration);\n        }\n        const fpsLimit = data.fpsLimit ?? data.fps_limit;\n        if (fpsLimit !== undefined) {\n            this.fpsLimit = fpsLimit;\n        }\n        if (data.pauseOnBlur !== undefined) {\n            this.pauseOnBlur = data.pauseOnBlur;\n        }\n        if (data.pauseOnOutsideViewport !== undefined) {\n            this.pauseOnOutsideViewport = data.pauseOnOutsideViewport;\n        }\n        if (data.zLayers !== undefined) {\n            this.zLayers = data.zLayers;\n        }\n        this.background.load(data.background);\n        const fullScreen = data.fullScreen ?? data.backgroundMode;\n        if (isBoolean(fullScreen)) {\n            this.fullScreen.enable = fullScreen;\n        }\n        else {\n            this.fullScreen.load(fullScreen);\n        }\n        this.backgroundMask.load(data.backgroundMask);\n        this.interactivity.load(data.interactivity);\n        if (data.manualParticles) {\n            this.manualParticles = data.manualParticles.map((t) => {\n                const tmp = new ManualParticle();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        this.particles.load(data.particles);\n        this.style = deepExtend(this.style, data.style);\n        this._engine.plugins.loadOptions(this, data);\n        if (data.smooth !== undefined) {\n            this.smooth = data.smooth;\n        }\n        const interactors = this._engine.plugins.interactors.get(this._container);\n        if (interactors) {\n            for (const interactor of interactors) {\n                if (interactor.loadOptions) {\n                    interactor.loadOptions(this, data);\n                }\n            }\n        }\n        if (data.responsive !== undefined) {\n            for (const responsive of data.responsive) {\n                const optResponsive = new Responsive();\n                optResponsive.load(responsive);\n                this.responsive.push(optResponsive);\n            }\n        }\n        this.responsive.sort((a, b) => a.maxWidth - b.maxWidth);\n        if (data.themes !== undefined) {\n            for (const theme of data.themes) {\n                const existingTheme = this.themes.find((t) => t.name === theme.name);\n                if (!existingTheme) {\n                    const optTheme = new Theme();\n                    optTheme.load(theme);\n                    this.themes.push(optTheme);\n                }\n                else {\n                    existingTheme.load(theme);\n                }\n            }\n        }\n        this.defaultThemes.dark = this._findDefaultTheme(\"dark\")?.name;\n        this.defaultThemes.light = this._findDefaultTheme(\"light\")?.name;\n    }\n    setResponsive(width, pxRatio, defaultOptions) {\n        this.load(defaultOptions);\n        const responsiveOptions = this.responsive.find((t) => t.mode === \"screen\" && screen ? t.maxWidth > screen.availWidth : t.maxWidth * pxRatio > width);\n        this.load(responsiveOptions?.options);\n        return responsiveOptions?.maxWidth;\n    }\n    setTheme(name) {\n        if (name) {\n            const chosenTheme = this.themes.find((theme) => theme.name === name);\n            if (chosenTheme) {\n                this.load(chosenTheme.options);\n            }\n        }\n        else {\n            const mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\"), clientDarkMode = mediaMatch && mediaMatch.matches, defaultTheme = this._findDefaultTheme(clientDarkMode ? \"dark\" : \"light\");\n            if (defaultTheme) {\n                this.load(defaultTheme.options);\n            }\n        }\n    }\n}\n","export class InteractionManager {\n    constructor(engine, container) {\n        this.container = container;\n        this._engine = engine;\n        this._interactors = engine.plugins.getInteractors(this.container, true);\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n    }\n    async externalInteract(delta) {\n        for (const interactor of this._externalInteractors) {\n            interactor.isEnabled() && (await interactor.interact(delta));\n        }\n    }\n    handleClickMode(mode) {\n        for (const interactor of this._externalInteractors) {\n            interactor.handleClickMode && interactor.handleClickMode(mode);\n        }\n    }\n    init() {\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n        for (const interactor of this._interactors) {\n            switch (interactor.type) {\n                case \"external\":\n                    this._externalInteractors.push(interactor);\n                    break;\n                case \"particles\":\n                    this._particleInteractors.push(interactor);\n                    break;\n            }\n            interactor.init();\n        }\n    }\n    async particlesInteract(particle, delta) {\n        for (const interactor of this._externalInteractors) {\n            interactor.clear(particle, delta);\n        }\n        for (const interactor of this._particleInteractors) {\n            interactor.isEnabled(particle) && (await interactor.interact(particle, delta));\n        }\n    }\n    async reset(particle) {\n        for (const interactor of this._externalInteractors) {\n            interactor.isEnabled() && interactor.reset(particle);\n        }\n        for (const interactor of this._particleInteractors) {\n            interactor.isEnabled(particle) && interactor.reset(particle);\n        }\n    }\n}\n","import { calcExactPositionOrRandomFromSize, clamp, getDistance, getParticleBaseVelocity, getParticleDirectionAngle, getRandom, getRangeValue, getValue, randomInRange, setRangeValue, } from \"../Utils/NumberUtils\";\nimport { deepExtend, getPosition, initParticleNumericAnimationValue, isInArray, itemFromSingleOrMultiple, } from \"../Utils/Utils\";\nimport { getHslFromAnimation, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { Interactivity } from \"../Options/Classes/Interactivity/Interactivity\";\nimport { Vector } from \"./Utils/Vector\";\nimport { Vector3d } from \"./Utils/Vector3d\";\nimport { alterHsl } from \"../Utils/CanvasUtils\";\nimport { errorPrefix } from \"./Utils/Constants\";\nimport { loadParticlesOptions } from \"../Utils/OptionsUtils\";\nconst fixOutMode = (data) => {\n    if (!isInArray(data.outMode, data.checkModes)) {\n        return;\n    }\n    const diameter = data.radius * 2;\n    if (data.coord > data.maxCoord - diameter) {\n        data.setCb(-data.radius);\n    }\n    else if (data.coord < diameter) {\n        data.setCb(data.radius);\n    }\n};\nexport class Particle {\n    constructor(engine, id, container, position, overrideOptions, group) {\n        this.container = container;\n        this._calcPosition = (container, position, zIndex, tryCount = 0) => {\n            for (const [, plugin] of container.plugins) {\n                const pluginPos = plugin.particlePosition !== undefined ? plugin.particlePosition(position, this) : undefined;\n                if (pluginPos) {\n                    return Vector3d.create(pluginPos.x, pluginPos.y, zIndex);\n                }\n            }\n            const canvasSize = container.canvas.size, exactPosition = calcExactPositionOrRandomFromSize({\n                size: canvasSize,\n                position: position,\n            }), pos = Vector3d.create(exactPosition.x, exactPosition.y, zIndex), radius = this.getRadius(), outModes = this.options.move.outModes, fixHorizontal = (outMode) => {\n                fixOutMode({\n                    outMode,\n                    checkModes: [\"bounce\", \"bounce-horizontal\"],\n                    coord: pos.x,\n                    maxCoord: container.canvas.size.width,\n                    setCb: (value) => (pos.x += value),\n                    radius,\n                });\n            }, fixVertical = (outMode) => {\n                fixOutMode({\n                    outMode,\n                    checkModes: [\"bounce\", \"bounce-vertical\"],\n                    coord: pos.y,\n                    maxCoord: container.canvas.size.height,\n                    setCb: (value) => (pos.y += value),\n                    radius,\n                });\n            };\n            fixHorizontal(outModes.left ?? outModes.default);\n            fixHorizontal(outModes.right ?? outModes.default);\n            fixVertical(outModes.top ?? outModes.default);\n            fixVertical(outModes.bottom ?? outModes.default);\n            if (this._checkOverlap(pos, tryCount)) {\n                return this._calcPosition(container, undefined, zIndex, tryCount + 1);\n            }\n            return pos;\n        };\n        this._calculateVelocity = () => {\n            const baseVelocity = getParticleBaseVelocity(this.direction), res = baseVelocity.copy(), moveOptions = this.options.move;\n            if (moveOptions.direction === \"inside\" || moveOptions.direction === \"outside\") {\n                return res;\n            }\n            const rad = (Math.PI / 180) * getRangeValue(moveOptions.angle.value), radOffset = (Math.PI / 180) * getRangeValue(moveOptions.angle.offset), range = {\n                left: radOffset - rad / 2,\n                right: radOffset + rad / 2,\n            };\n            if (!moveOptions.straight) {\n                res.angle += randomInRange(setRangeValue(range.left, range.right));\n            }\n            if (moveOptions.random && typeof moveOptions.speed === \"number\") {\n                res.length *= getRandom();\n            }\n            return res;\n        };\n        this._checkOverlap = (pos, tryCount = 0) => {\n            const collisionsOptions = this.options.collisions, radius = this.getRadius();\n            if (!collisionsOptions.enable) {\n                return false;\n            }\n            const overlapOptions = collisionsOptions.overlap;\n            if (overlapOptions.enable) {\n                return false;\n            }\n            const retries = overlapOptions.retries;\n            if (retries >= 0 && tryCount > retries) {\n                throw new Error(`${errorPrefix} particle is overlapping and can't be placed`);\n            }\n            return !!this.container.particles.find((particle) => getDistance(pos, particle.position) < radius + particle.getRadius());\n        };\n        this._getRollColor = (color) => {\n            if (!color || !this.roll || (!this.backColor && !this.roll.alter)) {\n                return color;\n            }\n            const backFactor = this.roll.horizontal && this.roll.vertical ? 2 : 1, backSum = this.roll.horizontal ? Math.PI / 2 : 0, rolled = Math.floor(((this.roll.angle ?? 0) + backSum) / (Math.PI / backFactor)) % 2;\n            if (!rolled) {\n                return color;\n            }\n            if (this.backColor) {\n                return this.backColor;\n            }\n            if (this.roll.alter) {\n                return alterHsl(color, this.roll.alter.type, this.roll.alter.value);\n            }\n            return color;\n        };\n        this._initPosition = (position) => {\n            const container = this.container, zIndexValue = getRangeValue(this.options.zIndex.value);\n            this.position = this._calcPosition(container, position, clamp(zIndexValue, 0, container.zLayers));\n            this.initialPosition = this.position.copy();\n            const canvasSize = container.canvas.size;\n            this.moveCenter = {\n                ...getPosition(this.options.move.center, canvasSize),\n                radius: this.options.move.center.radius ?? 0,\n                mode: this.options.move.center.mode ?? \"percent\",\n            };\n            this.direction = getParticleDirectionAngle(this.options.move.direction, this.position, this.moveCenter);\n            switch (this.options.move.direction) {\n                case \"inside\":\n                    this.outType = \"inside\";\n                    break;\n                case \"outside\":\n                    this.outType = \"outside\";\n                    break;\n            }\n            this.offset = Vector.origin;\n        };\n        this._loadShapeData = (shapeOptions, reduceDuplicates) => {\n            const shapeData = shapeOptions.options[this.shape];\n            if (!shapeData) {\n                return;\n            }\n            return deepExtend({\n                close: shapeOptions.close,\n                fill: shapeOptions.fill,\n            }, itemFromSingleOrMultiple(shapeData, this.id, reduceDuplicates));\n        };\n        this._engine = engine;\n        this.init(id, position, overrideOptions, group);\n    }\n    destroy(override) {\n        if (this.unbreakable || this.destroyed) {\n            return;\n        }\n        this.destroyed = true;\n        this.bubble.inRange = false;\n        this.slow.inRange = false;\n        const container = this.container, pathGenerator = this.pathGenerator;\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particleDestroyed) {\n                plugin.particleDestroyed(this, override);\n            }\n        }\n        for (const updater of container.particles.updaters) {\n            if (updater.particleDestroyed) {\n                updater.particleDestroyed(this, override);\n            }\n        }\n        if (pathGenerator) {\n            pathGenerator.reset(this);\n        }\n    }\n    draw(delta) {\n        const container = this.container;\n        for (const [, plugin] of container.plugins) {\n            container.canvas.drawParticlePlugin(plugin, this, delta);\n        }\n        container.canvas.drawParticle(this, delta);\n    }\n    getFillColor() {\n        return this._getRollColor(this.bubble.color ?? getHslFromAnimation(this.color));\n    }\n    getMass() {\n        return (this.getRadius() ** 2 * Math.PI) / 2;\n    }\n    getPosition() {\n        return {\n            x: this.position.x + this.offset.x,\n            y: this.position.y + this.offset.y,\n            z: this.position.z,\n        };\n    }\n    getRadius() {\n        return this.bubble.radius ?? this.size.value;\n    }\n    getStrokeColor() {\n        return this._getRollColor(this.bubble.color ?? getHslFromAnimation(this.strokeColor));\n    }\n    init(id, position, overrideOptions, group) {\n        const container = this.container, engine = this._engine;\n        this.id = id;\n        this.group = group;\n        this.fill = true;\n        this.pathRotation = false;\n        this.close = true;\n        this.lastPathTime = 0;\n        this.destroyed = false;\n        this.unbreakable = false;\n        this.rotation = 0;\n        this.misplaced = false;\n        this.retina = {\n            maxDistance: {},\n        };\n        this.outType = \"normal\";\n        this.ignoresResizeRatio = true;\n        const pxRatio = container.retina.pixelRatio, mainOptions = container.actualOptions, particlesOptions = loadParticlesOptions(this._engine, container, mainOptions.particles), shapeType = particlesOptions.shape.type, { reduceDuplicates } = particlesOptions;\n        this.shape = itemFromSingleOrMultiple(shapeType, this.id, reduceDuplicates);\n        const shapeOptions = particlesOptions.shape;\n        if (overrideOptions && overrideOptions.shape && overrideOptions.shape.type) {\n            const overrideShapeType = overrideOptions.shape.type, shape = itemFromSingleOrMultiple(overrideShapeType, this.id, reduceDuplicates);\n            if (shape) {\n                this.shape = shape;\n                shapeOptions.load(overrideOptions.shape);\n            }\n        }\n        this.shapeData = this._loadShapeData(shapeOptions, reduceDuplicates);\n        particlesOptions.load(overrideOptions);\n        const shapeData = this.shapeData;\n        if (shapeData) {\n            particlesOptions.load(shapeData.particles);\n        }\n        const interactivity = new Interactivity(engine, container);\n        interactivity.load(container.actualOptions.interactivity);\n        interactivity.load(particlesOptions.interactivity);\n        this.interactivity = interactivity;\n        this.fill = shapeData?.fill ?? particlesOptions.shape.fill;\n        this.close = shapeData?.close ?? particlesOptions.shape.close;\n        this.options = particlesOptions;\n        const pathOptions = this.options.move.path;\n        this.pathDelay = getValue(pathOptions.delay) * 1000;\n        if (pathOptions.generator) {\n            this.pathGenerator = this._engine.plugins.getPathGenerator(pathOptions.generator);\n            if (this.pathGenerator && container.addPath(pathOptions.generator, this.pathGenerator)) {\n                this.pathGenerator.init(container);\n            }\n        }\n        container.retina.initParticle(this);\n        this.size = initParticleNumericAnimationValue(this.options.size, pxRatio);\n        this.bubble = {\n            inRange: false,\n        };\n        this.slow = {\n            inRange: false,\n            factor: 1,\n        };\n        this._initPosition(position);\n        this.initialVelocity = this._calculateVelocity();\n        this.velocity = this.initialVelocity.copy();\n        this.moveDecay = 1 - getRangeValue(this.options.move.decay);\n        const particles = container.particles;\n        particles.needsSort = particles.needsSort || particles.lastZIndex < this.position.z;\n        particles.lastZIndex = this.position.z;\n        this.zIndexFactor = this.position.z / container.zLayers;\n        this.sides = 24;\n        let drawer = container.drawers.get(this.shape);\n        if (!drawer) {\n            drawer = this._engine.plugins.getShapeDrawer(this.shape);\n            if (drawer) {\n                container.drawers.set(this.shape, drawer);\n            }\n        }\n        if (drawer && drawer.loadShape) {\n            drawer.loadShape(this);\n        }\n        const sideCountFunc = drawer?.getSidesCount;\n        if (sideCountFunc) {\n            this.sides = sideCountFunc(this);\n        }\n        this.spawning = false;\n        this.shadowColor = rangeColorToRgb(this.options.shadow.color);\n        for (const updater of container.particles.updaters) {\n            updater.init(this);\n        }\n        for (const mover of container.particles.movers) {\n            mover.init && mover.init(this);\n        }\n        if (drawer && drawer.particleInit) {\n            drawer.particleInit(container, this);\n        }\n        for (const [, plugin] of container.plugins) {\n            plugin.particleCreated && plugin.particleCreated(this);\n        }\n    }\n    isInsideCanvas() {\n        const radius = this.getRadius(), canvasSize = this.container.canvas.size, position = this.position;\n        return (position.x >= -radius &&\n            position.y >= -radius &&\n            position.y <= canvasSize.height + radius &&\n            position.x <= canvasSize.width + radius);\n    }\n    isVisible() {\n        return !this.destroyed && !this.spawning && this.isInsideCanvas();\n    }\n    reset() {\n        for (const updater of this.container.particles.updaters) {\n            updater.reset && updater.reset(this);\n        }\n    }\n}\n","export class Point {\n    constructor(position, particle) {\n        this.position = position;\n        this.particle = particle;\n    }\n}\n","import { Circle } from \"./Circle\";\nimport { Rectangle } from \"./Rectangle\";\nimport { getDistance } from \"../../Utils/NumberUtils\";\nexport class QuadTree {\n    constructor(rectangle, capacity) {\n        this.rectangle = rectangle;\n        this.capacity = capacity;\n        this._subdivide = () => {\n            const { x, y } = this.rectangle.position, { width, height } = this.rectangle.size, { capacity } = this;\n            for (let i = 0; i < 4; i++) {\n                this._subs.push(new QuadTree(new Rectangle(x + (width / 2) * (i % 2), y + (height / 2) * (Math.round(i / 2) - (i % 2)), width / 2, height / 2), capacity));\n            }\n            this._divided = true;\n        };\n        this._points = [];\n        this._divided = false;\n        this._subs = [];\n    }\n    insert(point) {\n        if (!this.rectangle.contains(point.position)) {\n            return false;\n        }\n        if (this._points.length < this.capacity) {\n            this._points.push(point);\n            return true;\n        }\n        if (!this._divided) {\n            this._subdivide();\n        }\n        return this._subs.some((sub) => sub.insert(point));\n    }\n    query(range, check, found) {\n        const res = found || [];\n        if (!range.intersects(this.rectangle)) {\n            return [];\n        }\n        for (const p of this._points) {\n            if (!range.contains(p.position) &&\n                getDistance(range.position, p.position) > p.particle.getRadius() &&\n                (!check || check(p.particle))) {\n                continue;\n            }\n            res.push(p.particle);\n        }\n        if (this._divided) {\n            for (const sub of this._subs) {\n                sub.query(range, check, res);\n            }\n        }\n        return res;\n    }\n    queryCircle(position, radius, check) {\n        return this.query(new Circle(position.x, position.y, radius), check);\n    }\n    queryRectangle(position, size, check) {\n        return this.query(new Rectangle(position.x, position.y, size.width, size.height), check);\n    }\n}\n","import { getLogger, getPosition } from \"../Utils/Utils\";\nimport { InteractionManager } from \"./Utils/InteractionManager\";\nimport { Particle } from \"./Particle\";\nimport { Point } from \"./Utils/Point\";\nimport { QuadTree } from \"./Utils/QuadTree\";\nimport { Rectangle } from \"./Utils/Rectangle\";\nimport { errorPrefix } from \"./Utils/Constants\";\nconst qTreeCapacity = 4;\nconst qTreeRectangle = (canvasSize) => {\n    return new Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, (canvasSize.width * 3) / 2, (canvasSize.height * 3) / 2);\n};\nexport class Particles {\n    constructor(engine, container) {\n        this._applyDensity = (options, manualCount, group) => {\n            if (!options.number.density?.enable) {\n                return;\n            }\n            const numberOptions = options.number, densityFactor = this._initDensityFactor(numberOptions.density), optParticlesNumber = numberOptions.value, optParticlesLimit = numberOptions.limit > 0 ? numberOptions.limit : optParticlesNumber, particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor + manualCount, particlesCount = Math.min(this.count, this.filter((t) => t.group === group).length);\n            this.limit = numberOptions.limit * densityFactor;\n            if (particlesCount < particlesNumber) {\n                this.push(Math.abs(particlesNumber - particlesCount), undefined, options, group);\n            }\n            else if (particlesCount > particlesNumber) {\n                this.removeQuantity(particlesCount - particlesNumber, group);\n            }\n        };\n        this._initDensityFactor = (densityOptions) => {\n            const container = this._container;\n            if (!container.canvas.element || !densityOptions.enable) {\n                return 1;\n            }\n            const canvas = container.canvas.element, pxRatio = container.retina.pixelRatio;\n            return (canvas.width * canvas.height) / (densityOptions.factor * pxRatio ** 2 * densityOptions.area);\n        };\n        this._pushParticle = (position, overrideOptions, group, initializer) => {\n            try {\n                let particle = this.pool.pop();\n                if (particle) {\n                    particle.init(this._nextId, position, overrideOptions, group);\n                }\n                else {\n                    particle = new Particle(this._engine, this._nextId, this._container, position, overrideOptions, group);\n                }\n                let canAdd = true;\n                if (initializer) {\n                    canAdd = initializer(particle);\n                }\n                if (!canAdd) {\n                    return;\n                }\n                this._array.push(particle);\n                this._zArray.push(particle);\n                this._nextId++;\n                this._engine.dispatchEvent(\"particleAdded\", {\n                    container: this._container,\n                    data: {\n                        particle,\n                    },\n                });\n                return particle;\n            }\n            catch (e) {\n                getLogger().warning(`${errorPrefix} adding particle: ${e}`);\n                return;\n            }\n        };\n        this._removeParticle = (index, group, override) => {\n            const particle = this._array[index];\n            if (!particle || particle.group !== group) {\n                return false;\n            }\n            particle.destroy(override);\n            const zIdx = this._zArray.indexOf(particle);\n            this._array.splice(index, 1);\n            this._zArray.splice(zIdx, 1);\n            this.pool.push(particle);\n            this._engine.dispatchEvent(\"particleRemoved\", {\n                container: this._container,\n                data: {\n                    particle,\n                },\n            });\n            return true;\n        };\n        this._engine = engine;\n        this._container = container;\n        this._nextId = 0;\n        this._array = [];\n        this._zArray = [];\n        this.pool = [];\n        this.limit = 0;\n        this.needsSort = false;\n        this.lastZIndex = 0;\n        this._interactionManager = new InteractionManager(engine, container);\n        const canvasSize = container.canvas.size;\n        this.quadTree = new QuadTree(qTreeRectangle(canvasSize), qTreeCapacity);\n        this.movers = this._engine.plugins.getMovers(container, true);\n        this.updaters = this._engine.plugins.getUpdaters(container, true);\n    }\n    get count() {\n        return this._array.length;\n    }\n    addManualParticles() {\n        const container = this._container, options = container.actualOptions;\n        for (const particle of options.manualParticles) {\n            this.addParticle(particle.position ? getPosition(particle.position, container.canvas.size) : undefined, particle.options);\n        }\n    }\n    addParticle(position, overrideOptions, group, initializer) {\n        const container = this._container, options = container.actualOptions, limit = options.particles.number.limit;\n        if (limit > 0) {\n            const countToRemove = this.count + 1 - limit;\n            if (countToRemove > 0) {\n                this.removeQuantity(countToRemove);\n            }\n        }\n        return this._pushParticle(position, overrideOptions, group, initializer);\n    }\n    clear() {\n        this._array = [];\n        this._zArray = [];\n    }\n    destroy() {\n        this._array = [];\n        this._zArray = [];\n        this.movers = [];\n        this.updaters = [];\n    }\n    async draw(delta) {\n        const container = this._container;\n        container.canvas.clear();\n        await this.update(delta);\n        for (const [, plugin] of container.plugins) {\n            container.canvas.drawPlugin(plugin, delta);\n        }\n        for (const p of this._zArray) {\n            p.draw(delta);\n        }\n    }\n    filter(condition) {\n        return this._array.filter(condition);\n    }\n    find(condition) {\n        return this._array.find(condition);\n    }\n    handleClickMode(mode) {\n        this._interactionManager.handleClickMode(mode);\n    }\n    init() {\n        const container = this._container, options = container.actualOptions;\n        this.lastZIndex = 0;\n        this.needsSort = false;\n        let handled = false;\n        this.updaters = this._engine.plugins.getUpdaters(container, true);\n        this._interactionManager.init();\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particlesInitialization !== undefined) {\n                handled = plugin.particlesInitialization();\n            }\n            if (handled) {\n                break;\n            }\n        }\n        this._interactionManager.init();\n        for (const [, pathGenerator] of container.pathGenerators) {\n            pathGenerator.init(container);\n        }\n        this.addManualParticles();\n        if (!handled) {\n            for (const group in options.particles.groups) {\n                const groupOptions = options.particles.groups[group];\n                for (let i = this.count, j = 0; j < groupOptions.number?.value && i < options.particles.number.value; i++, j++) {\n                    this.addParticle(undefined, groupOptions, group);\n                }\n            }\n            for (let i = this.count; i < options.particles.number.value; i++) {\n                this.addParticle();\n            }\n        }\n    }\n    push(nb, mouse, overrideOptions, group) {\n        this.pushing = true;\n        for (let i = 0; i < nb; i++) {\n            this.addParticle(mouse?.position, overrideOptions, group);\n        }\n        this.pushing = false;\n    }\n    async redraw() {\n        this.clear();\n        this.init();\n        await this.draw({ value: 0, factor: 0 });\n    }\n    remove(particle, group, override) {\n        this.removeAt(this._array.indexOf(particle), undefined, group, override);\n    }\n    removeAt(index, quantity = 1, group, override) {\n        if (index < 0 || index > this.count) {\n            return;\n        }\n        let deleted = 0;\n        for (let i = index; deleted < quantity && i < this.count; i++) {\n            this._removeParticle(i--, group, override) && deleted++;\n        }\n    }\n    removeQuantity(quantity, group) {\n        this.removeAt(0, quantity, group);\n    }\n    setDensity() {\n        const options = this._container.actualOptions, groups = options.particles.groups;\n        for (const group in groups) {\n            this._applyDensity(groups[group], 0, group);\n        }\n        this._applyDensity(options.particles, options.manualParticles.length);\n    }\n    async update(delta) {\n        const container = this._container, particlesToDelete = new Set();\n        this.quadTree = new QuadTree(qTreeRectangle(container.canvas.size), qTreeCapacity);\n        for (const [, pathGenerator] of container.pathGenerators) {\n            pathGenerator.update();\n        }\n        for (const [, plugin] of container.plugins) {\n            plugin.update && plugin.update(delta);\n        }\n        for (const particle of this._array) {\n            const resizeFactor = container.canvas.resizeFactor;\n            if (resizeFactor && !particle.ignoresResizeRatio) {\n                particle.position.x *= resizeFactor.width;\n                particle.position.y *= resizeFactor.height;\n                particle.initialPosition.x *= resizeFactor.width;\n                particle.initialPosition.y *= resizeFactor.height;\n            }\n            particle.ignoresResizeRatio = false;\n            await this._interactionManager.reset(particle);\n            for (const [, plugin] of this._container.plugins) {\n                if (particle.destroyed) {\n                    break;\n                }\n                if (plugin.particleUpdate) {\n                    plugin.particleUpdate(particle, delta);\n                }\n            }\n            for (const mover of this.movers) {\n                mover.isEnabled(particle) && mover.move(particle, delta);\n            }\n            if (particle.destroyed) {\n                particlesToDelete.add(particle);\n                continue;\n            }\n            this.quadTree.insert(new Point(particle.getPosition(), particle));\n        }\n        if (particlesToDelete.size) {\n            const checkDelete = (p) => !particlesToDelete.has(p);\n            this._array = this.filter(checkDelete);\n            this._zArray = this._zArray.filter(checkDelete);\n            this.pool.push(...particlesToDelete);\n        }\n        await this._interactionManager.externalInteract(delta);\n        for (const particle of this._array) {\n            for (const updater of this.updaters) {\n                updater.update(particle, delta);\n            }\n            if (!particle.destroyed && !particle.spawning) {\n                await this._interactionManager.particlesInteract(particle, delta);\n            }\n        }\n        delete container.canvas.resizeFactor;\n        if (this.needsSort) {\n            const zArray = this._zArray;\n            zArray.sort((a, b) => b.position.z - a.position.z || a.id - b.id);\n            this.lastZIndex = zArray[zArray.length - 1].position.z;\n            this.needsSort = false;\n        }\n    }\n}\n","import { getRangeValue } from \"../Utils/NumberUtils\";\nimport { isSsr } from \"../Utils/Utils\";\nexport class Retina {\n    constructor(container) {\n        this.container = container;\n        this.pixelRatio = 1;\n        this.reduceFactor = 1;\n    }\n    init() {\n        const container = this.container, options = container.actualOptions;\n        this.pixelRatio = !options.detectRetina || isSsr() ? 1 : window.devicePixelRatio;\n        this.reduceFactor = 1;\n        const ratio = this.pixelRatio;\n        if (container.canvas.element) {\n            const element = container.canvas.element;\n            container.canvas.size.width = element.offsetWidth * ratio;\n            container.canvas.size.height = element.offsetHeight * ratio;\n        }\n        const particles = options.particles, moveOptions = particles.move;\n        this.attractDistance = getRangeValue(moveOptions.attract.distance) * ratio;\n        this.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n        this.sizeAnimationSpeed = getRangeValue(particles.size.animation.speed) * ratio;\n    }\n    initParticle(particle) {\n        const options = particle.options, ratio = this.pixelRatio, moveOptions = options.move, moveDistance = moveOptions.distance, props = particle.retina;\n        props.attractDistance = getRangeValue(moveOptions.attract.distance) * ratio;\n        props.moveDrift = getRangeValue(moveOptions.drift) * ratio;\n        props.moveSpeed = getRangeValue(moveOptions.speed) * ratio;\n        props.sizeAnimationSpeed = getRangeValue(options.size.animation.speed) * ratio;\n        const maxDistance = props.maxDistance;\n        maxDistance.horizontal = moveDistance.horizontal !== undefined ? moveDistance.horizontal * ratio : undefined;\n        maxDistance.vertical = moveDistance.vertical !== undefined ? moveDistance.vertical * ratio : undefined;\n        props.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n    }\n}\n","import { getLogger, isFunction } from \"../Utils/Utils\";\nimport { Canvas } from \"./Canvas\";\nimport { EventListeners } from \"./Utils/EventListeners\";\nimport { Options } from \"../Options/Classes/Options\";\nimport { Particles } from \"./Particles\";\nimport { Retina } from \"./Retina\";\nimport { errorPrefix } from \"./Utils/Constants\";\nimport { getRangeValue } from \"../Utils/NumberUtils\";\nimport { loadOptions } from \"../Utils/OptionsUtils\";\nfunction guardCheck(container) {\n    return container && !container.destroyed;\n}\nfunction initDelta(value, fpsLimit = 60, smooth = false) {\n    return {\n        value,\n        factor: smooth ? 60 / fpsLimit : (60 * value) / 1000,\n    };\n}\nfunction loadContainerOptions(engine, container, ...sourceOptionsArr) {\n    const options = new Options(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\nconst defaultPathGeneratorKey = \"default\", defaultPathGenerator = {\n    generate: (p) => p.velocity,\n    init: () => {\n    },\n    update: () => {\n    },\n    reset: () => {\n    },\n};\nexport class Container {\n    constructor(engine, id, sourceOptions) {\n        this.id = id;\n        this._intersectionManager = (entries) => {\n            if (!guardCheck(this) || !this.actualOptions.pauseOnOutsideViewport) {\n                return;\n            }\n            for (const entry of entries) {\n                if (entry.target !== this.interactivity.element) {\n                    continue;\n                }\n                (entry.isIntersecting ? this.play : this.pause)();\n            }\n        };\n        this._nextFrame = async (timestamp) => {\n            try {\n                if (!this.smooth &&\n                    this.lastFrameTime !== undefined &&\n                    timestamp < this.lastFrameTime + 1000 / this.fpsLimit) {\n                    this.draw(false);\n                    return;\n                }\n                this.lastFrameTime ??= timestamp;\n                const delta = initDelta(timestamp - this.lastFrameTime, this.fpsLimit, this.smooth);\n                this.addLifeTime(delta.value);\n                this.lastFrameTime = timestamp;\n                if (delta.value > 1000) {\n                    this.draw(false);\n                    return;\n                }\n                await this.particles.draw(delta);\n                if (!this.alive()) {\n                    this.destroy();\n                    return;\n                }\n                if (this.getAnimationStatus()) {\n                    this.draw(false);\n                }\n            }\n            catch (e) {\n                getLogger().error(`${errorPrefix} in animation loop`, e);\n            }\n        };\n        this._engine = engine;\n        this.fpsLimit = 120;\n        this.smooth = false;\n        this._delay = 0;\n        this._duration = 0;\n        this._lifeTime = 0;\n        this._firstStart = true;\n        this.started = false;\n        this.destroyed = false;\n        this._paused = true;\n        this.lastFrameTime = 0;\n        this.zLayers = 100;\n        this.pageHidden = false;\n        this._sourceOptions = sourceOptions;\n        this._initialSourceOptions = sourceOptions;\n        this.retina = new Retina(this);\n        this.canvas = new Canvas(this);\n        this.particles = new Particles(this._engine, this);\n        this.pathGenerators = new Map();\n        this.interactivity = {\n            mouse: {\n                clicking: false,\n                inside: false,\n            },\n        };\n        this.plugins = new Map();\n        this.drawers = new Map();\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this);\n        this._eventListeners = new EventListeners(this);\n        if (typeof IntersectionObserver !== \"undefined\" && IntersectionObserver) {\n            this._intersectionObserver = new IntersectionObserver((entries) => this._intersectionManager(entries));\n        }\n        this._engine.dispatchEvent(\"containerBuilt\", { container: this });\n    }\n    get options() {\n        return this._options;\n    }\n    get sourceOptions() {\n        return this._sourceOptions;\n    }\n    addClickHandler(callback) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const el = this.interactivity.element;\n        if (!el) {\n            return;\n        }\n        const clickOrTouchHandler = (e, pos, radius) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const pxRatio = this.retina.pixelRatio, posRetina = {\n                x: pos.x * pxRatio,\n                y: pos.y * pxRatio,\n            }, particles = this.particles.quadTree.queryCircle(posRetina, radius * pxRatio);\n            callback(e, particles);\n        };\n        const clickHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const mouseEvent = e, pos = {\n                x: mouseEvent.offsetX || mouseEvent.clientX,\n                y: mouseEvent.offsetY || mouseEvent.clientY,\n            };\n            clickOrTouchHandler(e, pos, 1);\n        };\n        const touchStartHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = true;\n            touchMoved = false;\n        };\n        const touchMoveHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touchMoved = true;\n        };\n        const touchEndHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            if (touched && !touchMoved) {\n                const touchEvent = e;\n                let lastTouch = touchEvent.touches[touchEvent.touches.length - 1];\n                if (!lastTouch) {\n                    lastTouch = touchEvent.changedTouches[touchEvent.changedTouches.length - 1];\n                    if (!lastTouch) {\n                        return;\n                    }\n                }\n                const element = this.canvas.element, canvasRect = element ? element.getBoundingClientRect() : undefined, pos = {\n                    x: lastTouch.clientX - (canvasRect ? canvasRect.left : 0),\n                    y: lastTouch.clientY - (canvasRect ? canvasRect.top : 0),\n                };\n                clickOrTouchHandler(e, pos, Math.max(lastTouch.radiusX, lastTouch.radiusY));\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        const touchCancelHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        let touched = false, touchMoved = false;\n        el.addEventListener(\"click\", clickHandler);\n        el.addEventListener(\"touchstart\", touchStartHandler);\n        el.addEventListener(\"touchmove\", touchMoveHandler);\n        el.addEventListener(\"touchend\", touchEndHandler);\n        el.addEventListener(\"touchcancel\", touchCancelHandler);\n    }\n    addLifeTime(value) {\n        this._lifeTime += value;\n    }\n    addPath(key, generator, override = false) {\n        if (!guardCheck(this) || (!override && this.pathGenerators.has(key))) {\n            return false;\n        }\n        this.pathGenerators.set(key, generator ?? defaultPathGenerator);\n        return true;\n    }\n    alive() {\n        return !this._duration || this._lifeTime <= this._duration;\n    }\n    destroy() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        this.particles.destroy();\n        this.canvas.destroy();\n        for (const [, drawer] of this.drawers) {\n            drawer.destroy && drawer.destroy(this);\n        }\n        for (const key of this.drawers.keys()) {\n            this.drawers.delete(key);\n        }\n        this._engine.plugins.destroy(this);\n        this.destroyed = true;\n        const mainArr = this._engine.dom(), idx = mainArr.findIndex((t) => t === this);\n        if (idx >= 0) {\n            mainArr.splice(idx, 1);\n        }\n        this._engine.dispatchEvent(\"containerDestroyed\", { container: this });\n    }\n    draw(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        let refreshTime = force;\n        this._drawAnimationFrame = requestAnimationFrame(async (timestamp) => {\n            if (refreshTime) {\n                this.lastFrameTime = undefined;\n                refreshTime = false;\n            }\n            await this._nextFrame(timestamp);\n        });\n    }\n    async export(type, options = {}) {\n        for (const [, plugin] of this.plugins) {\n            if (!plugin.export) {\n                continue;\n            }\n            const res = await plugin.export(type, options);\n            if (!res.supported) {\n                continue;\n            }\n            return res.blob;\n        }\n        getLogger().error(`${errorPrefix} - Export plugin with type ${type} not found`);\n    }\n    getAnimationStatus() {\n        return !this._paused && !this.pageHidden && guardCheck(this);\n    }\n    handleClickMode(mode) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.particles.handleClickMode(mode);\n        for (const [, plugin] of this.plugins) {\n            plugin.handleClickMode && plugin.handleClickMode(mode);\n        }\n    }\n    async init() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const shapes = this._engine.plugins.getSupportedShapes();\n        for (const type of shapes) {\n            const drawer = this._engine.plugins.getShapeDrawer(type);\n            if (drawer) {\n                this.drawers.set(type, drawer);\n            }\n        }\n        this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        const availablePlugins = this._engine.plugins.getAvailablePlugins(this);\n        for (const [id, plugin] of availablePlugins) {\n            this.plugins.set(id, plugin);\n        }\n        this.retina.init();\n        await this.canvas.init();\n        this.updateActualOptions();\n        this.canvas.initBackground();\n        this.canvas.resize();\n        this.zLayers = this.actualOptions.zLayers;\n        this._duration = getRangeValue(this.actualOptions.duration) * 1000;\n        this._delay = getRangeValue(this.actualOptions.delay) * 1000;\n        this._lifeTime = 0;\n        this.fpsLimit = this.actualOptions.fpsLimit > 0 ? this.actualOptions.fpsLimit : 120;\n        this.smooth = this.actualOptions.smooth;\n        for (const [, drawer] of this.drawers) {\n            drawer.init && (await drawer.init(this));\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.init && (await plugin.init());\n        }\n        this._engine.dispatchEvent(\"containerInit\", { container: this });\n        this.particles.init();\n        this.particles.setDensity();\n        for (const [, plugin] of this.plugins) {\n            plugin.particlesSetup && plugin.particlesSetup();\n        }\n        this._engine.dispatchEvent(\"particlesSetup\", { container: this });\n    }\n    async loadTheme(name) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._currentTheme = name;\n        await this.refresh();\n    }\n    pause() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        if (this._drawAnimationFrame !== undefined) {\n            cancelAnimationFrame(this._drawAnimationFrame);\n            delete this._drawAnimationFrame;\n        }\n        if (this._paused) {\n            return;\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.pause && plugin.pause();\n        }\n        if (!this.pageHidden) {\n            this._paused = true;\n        }\n        this._engine.dispatchEvent(\"containerPaused\", { container: this });\n    }\n    play(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const needsUpdate = this._paused || force;\n        if (this._firstStart && !this.actualOptions.autoPlay) {\n            this._firstStart = false;\n            return;\n        }\n        if (this._paused) {\n            this._paused = false;\n        }\n        if (needsUpdate) {\n            for (const [, plugin] of this.plugins) {\n                if (plugin.play) {\n                    plugin.play();\n                }\n            }\n        }\n        this._engine.dispatchEvent(\"containerPlay\", { container: this });\n        this.draw(needsUpdate || false);\n    }\n    async refresh() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        return this.start();\n    }\n    async reset() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._initialSourceOptions = undefined;\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        return this.refresh();\n    }\n    setNoise(noiseOrGenerator, init, update) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.setPath(noiseOrGenerator, init, update);\n    }\n    setPath(pathOrGenerator, init, update) {\n        if (!pathOrGenerator || !guardCheck(this)) {\n            return;\n        }\n        const pathGenerator = { ...defaultPathGenerator };\n        if (isFunction(pathOrGenerator)) {\n            pathGenerator.generate = pathOrGenerator;\n            if (init) {\n                pathGenerator.init = init;\n            }\n            if (update) {\n                pathGenerator.update = update;\n            }\n        }\n        else {\n            const oldGenerator = pathGenerator;\n            pathGenerator.generate = pathOrGenerator.generate || oldGenerator.generate;\n            pathGenerator.init = pathOrGenerator.init || oldGenerator.init;\n            pathGenerator.update = pathOrGenerator.update || oldGenerator.update;\n        }\n        this.addPath(defaultPathGeneratorKey, pathGenerator, true);\n    }\n    async start() {\n        if (!guardCheck(this) || this.started) {\n            return;\n        }\n        await this.init();\n        this.started = true;\n        await new Promise((resolve) => {\n            this._delayTimeout = setTimeout(async () => {\n                this._eventListeners.addListeners();\n                if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n                    this._intersectionObserver.observe(this.interactivity.element);\n                }\n                for (const [, plugin] of this.plugins) {\n                    plugin.start && (await plugin.start());\n                }\n                this._engine.dispatchEvent(\"containerStarted\", { container: this });\n                this.play();\n                resolve();\n            }, this._delay);\n        });\n    }\n    stop() {\n        if (!guardCheck(this) || !this.started) {\n            return;\n        }\n        if (this._delayTimeout) {\n            clearTimeout(this._delayTimeout);\n            delete this._delayTimeout;\n        }\n        this._firstStart = true;\n        this.started = false;\n        this._eventListeners.removeListeners();\n        this.pause();\n        this.particles.clear();\n        this.canvas.stop();\n        if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n            this._intersectionObserver.unobserve(this.interactivity.element);\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.stop && plugin.stop();\n        }\n        for (const key of this.plugins.keys()) {\n            this.plugins.delete(key);\n        }\n        this._sourceOptions = this._options;\n        this._engine.dispatchEvent(\"containerStopped\", { container: this });\n    }\n    updateActualOptions() {\n        this.actualOptions.responsive = [];\n        const newMaxWidth = this.actualOptions.setResponsive(this.canvas.size.width, this.retina.pixelRatio, this._options);\n        this.actualOptions.setTheme(this._currentTheme);\n        if (this.responsiveMaxWidth === newMaxWidth) {\n            return false;\n        }\n        this.responsiveMaxWidth = newMaxWidth;\n        return true;\n    }\n}\n","export class EventDispatcher {\n    constructor() {\n        this._listeners = new Map();\n    }\n    addEventListener(type, listener) {\n        this.removeEventListener(type, listener);\n        let arr = this._listeners.get(type);\n        if (!arr) {\n            arr = [];\n            this._listeners.set(type, arr);\n        }\n        arr.push(listener);\n    }\n    dispatchEvent(type, args) {\n        const listeners = this._listeners.get(type);\n        listeners && listeners.forEach((handler) => handler(args));\n    }\n    hasEventListener(type) {\n        return !!this._listeners.get(type);\n    }\n    removeAllEventListeners(type) {\n        if (!type) {\n            this._listeners = new Map();\n        }\n        else {\n            this._listeners.delete(type);\n        }\n    }\n    removeEventListener(type, listener) {\n        const arr = this._listeners.get(type);\n        if (!arr) {\n            return;\n        }\n        const length = arr.length, idx = arr.indexOf(listener);\n        if (idx < 0) {\n            return;\n        }\n        if (length === 1) {\n            this._listeners.delete(type);\n        }\n        else {\n            arr.splice(idx, 1);\n        }\n    }\n}\n","import { executeOnSingleOrMultiple } from \"../../Utils/Utils\";\nfunction getItemsFromInitializer(container, map, initializers, force = false) {\n    let res = map.get(container);\n    if (!res || force) {\n        res = [...initializers.values()].map((t) => t(container));\n        map.set(container, res);\n    }\n    return res;\n}\nexport class Plugins {\n    constructor(engine) {\n        this._engine = engine;\n        this.plugins = [];\n        this._initializers = {\n            interactors: new Map(),\n            movers: new Map(),\n            updaters: new Map(),\n        };\n        this.interactors = new Map();\n        this.movers = new Map();\n        this.updaters = new Map();\n        this.presets = new Map();\n        this.drawers = new Map();\n        this.pathGenerators = new Map();\n    }\n    addInteractor(name, initInteractor) {\n        this._initializers.interactors.set(name, initInteractor);\n    }\n    addParticleMover(name, initMover) {\n        this._initializers.movers.set(name, initMover);\n    }\n    addParticleUpdater(name, initUpdater) {\n        this._initializers.updaters.set(name, initUpdater);\n    }\n    addPathGenerator(type, pathGenerator) {\n        !this.getPathGenerator(type) && this.pathGenerators.set(type, pathGenerator);\n    }\n    addPlugin(plugin) {\n        !this.getPlugin(plugin.id) && this.plugins.push(plugin);\n    }\n    addPreset(presetKey, options, override = false) {\n        (override || !this.getPreset(presetKey)) && this.presets.set(presetKey, options);\n    }\n    addShapeDrawer(types, drawer) {\n        executeOnSingleOrMultiple(types, (type) => {\n            !this.getShapeDrawer(type) && this.drawers.set(type, drawer);\n        });\n    }\n    destroy(container) {\n        this.updaters.delete(container);\n        this.movers.delete(container);\n        this.interactors.delete(container);\n    }\n    getAvailablePlugins(container) {\n        const res = new Map();\n        for (const plugin of this.plugins) {\n            plugin.needsPlugin(container.actualOptions) && res.set(plugin.id, plugin.getPlugin(container));\n        }\n        return res;\n    }\n    getInteractors(container, force = false) {\n        return getItemsFromInitializer(container, this.interactors, this._initializers.interactors, force);\n    }\n    getMovers(container, force = false) {\n        return getItemsFromInitializer(container, this.movers, this._initializers.movers, force);\n    }\n    getPathGenerator(type) {\n        return this.pathGenerators.get(type);\n    }\n    getPlugin(plugin) {\n        return this.plugins.find((t) => t.id === plugin);\n    }\n    getPreset(preset) {\n        return this.presets.get(preset);\n    }\n    getShapeDrawer(type) {\n        return this.drawers.get(type);\n    }\n    getSupportedShapes() {\n        return this.drawers.keys();\n    }\n    getUpdaters(container, force = false) {\n        return getItemsFromInitializer(container, this.updaters, this._initializers.updaters, force);\n    }\n    loadOptions(options, sourceOptions) {\n        for (const plugin of this.plugins) {\n            plugin.loadOptions(options, sourceOptions);\n        }\n    }\n    loadParticlesOptions(container, options, ...sourceOptions) {\n        const updaters = this.updaters.get(container);\n        if (!updaters) {\n            return;\n        }\n        for (const updater of updaters) {\n            updater.loadOptions && updater.loadOptions(options, ...sourceOptions);\n        }\n    }\n}\n","import { errorPrefix, generatedAttribute } from \"./Utils/Constants\";\nimport { getLogger, isBoolean, isFunction, isNumber, isString, itemFromSingleOrMultiple } from \"../Utils/Utils\";\nimport { Container } from \"./Container\";\nimport { EventDispatcher } from \"../Utils/EventDispatcher\";\nimport { Plugins } from \"./Utils/Plugins\";\nimport { getRandom } from \"../Utils/NumberUtils\";\nasync function getDataFromUrl(data) {\n    const url = itemFromSingleOrMultiple(data.url, data.index);\n    if (!url) {\n        return data.fallback;\n    }\n    const response = await fetch(url);\n    if (response.ok) {\n        return response.json();\n    }\n    getLogger().error(`${errorPrefix} ${response.status} while retrieving config file`);\n    return data.fallback;\n}\nfunction isParamsEmpty(params) {\n    return !params.id && !params.element && !params.url && !params.options;\n}\nfunction isParams(obj) {\n    return !isParamsEmpty(obj);\n}\nexport class Engine {\n    constructor() {\n        this._configs = new Map();\n        this._domArray = [];\n        this._eventDispatcher = new EventDispatcher();\n        this._initialized = false;\n        this.plugins = new Plugins(this);\n    }\n    get configs() {\n        const res = {};\n        for (const [name, config] of this._configs) {\n            res[name] = config;\n        }\n        return res;\n    }\n    get version() {\n        return \"2.12.0\";\n    }\n    addConfig(nameOrConfig, config) {\n        if (isString(nameOrConfig)) {\n            if (config) {\n                config.name = nameOrConfig;\n                this._configs.set(nameOrConfig, config);\n            }\n        }\n        else {\n            this._configs.set(nameOrConfig.name ?? \"default\", nameOrConfig);\n        }\n    }\n    addEventListener(type, listener) {\n        this._eventDispatcher.addEventListener(type, listener);\n    }\n    async addInteractor(name, interactorInitializer, refresh = true) {\n        this.plugins.addInteractor(name, interactorInitializer);\n        await this.refresh(refresh);\n    }\n    async addMover(name, moverInitializer, refresh = true) {\n        this.plugins.addParticleMover(name, moverInitializer);\n        await this.refresh(refresh);\n    }\n    async addParticleUpdater(name, updaterInitializer, refresh = true) {\n        this.plugins.addParticleUpdater(name, updaterInitializer);\n        await this.refresh(refresh);\n    }\n    async addPathGenerator(name, generator, refresh = true) {\n        this.plugins.addPathGenerator(name, generator);\n        await this.refresh(refresh);\n    }\n    async addPlugin(plugin, refresh = true) {\n        this.plugins.addPlugin(plugin);\n        await this.refresh(refresh);\n    }\n    async addPreset(preset, options, override = false, refresh = true) {\n        this.plugins.addPreset(preset, options, override);\n        await this.refresh(refresh);\n    }\n    async addShape(shape, drawer, initOrRefresh, afterEffectOrRefresh, destroyOrRefresh, refresh = true) {\n        let customDrawer;\n        let realRefresh = refresh, realInit, realAfterEffect, realDestroy;\n        if (isBoolean(initOrRefresh)) {\n            realRefresh = initOrRefresh;\n            realInit = undefined;\n        }\n        else {\n            realInit = initOrRefresh;\n        }\n        if (isBoolean(afterEffectOrRefresh)) {\n            realRefresh = afterEffectOrRefresh;\n            realAfterEffect = undefined;\n        }\n        else {\n            realAfterEffect = afterEffectOrRefresh;\n        }\n        if (isBoolean(destroyOrRefresh)) {\n            realRefresh = destroyOrRefresh;\n            realDestroy = undefined;\n        }\n        else {\n            realDestroy = destroyOrRefresh;\n        }\n        if (isFunction(drawer)) {\n            customDrawer = {\n                afterEffect: realAfterEffect,\n                destroy: realDestroy,\n                draw: drawer,\n                init: realInit,\n            };\n        }\n        else {\n            customDrawer = drawer;\n        }\n        this.plugins.addShapeDrawer(shape, customDrawer);\n        await this.refresh(realRefresh);\n    }\n    dispatchEvent(type, args) {\n        this._eventDispatcher.dispatchEvent(type, args);\n    }\n    dom() {\n        return this._domArray;\n    }\n    domItem(index) {\n        const dom = this.dom(), item = dom[index];\n        if (!item || item.destroyed) {\n            dom.splice(index, 1);\n            return;\n        }\n        return item;\n    }\n    init() {\n        if (this._initialized) {\n            return;\n        }\n        this._initialized = true;\n    }\n    async load(tagIdOrOptionsOrParams, options) {\n        return this.loadFromArray(tagIdOrOptionsOrParams, options);\n    }\n    async loadFromArray(tagIdOrOptionsOrParams, optionsOrIndex, index) {\n        let params;\n        if (!isParams(tagIdOrOptionsOrParams)) {\n            params = {};\n            if (isString(tagIdOrOptionsOrParams)) {\n                params.id = tagIdOrOptionsOrParams;\n            }\n            else {\n                params.options = tagIdOrOptionsOrParams;\n            }\n            if (isNumber(optionsOrIndex)) {\n                params.index = optionsOrIndex;\n            }\n            else {\n                params.options = optionsOrIndex ?? params.options;\n            }\n            params.index = index ?? params.index;\n        }\n        else {\n            params = tagIdOrOptionsOrParams;\n        }\n        return this._loadParams(params);\n    }\n    async loadJSON(tagId, pathConfigJson, index) {\n        let url, id;\n        if (isNumber(pathConfigJson) || pathConfigJson === undefined) {\n            url = tagId;\n        }\n        else {\n            id = tagId;\n            url = pathConfigJson;\n        }\n        return this._loadParams({ id: id, url, index });\n    }\n    async refresh(refresh = true) {\n        if (!refresh) {\n            return;\n        }\n        this.dom().forEach((t) => t.refresh());\n    }\n    removeEventListener(type, listener) {\n        this._eventDispatcher.removeEventListener(type, listener);\n    }\n    async set(id, element, options, index) {\n        const params = { index };\n        if (isString(id)) {\n            params.id = id;\n        }\n        else {\n            params.element = id;\n        }\n        if (element instanceof HTMLElement) {\n            params.element = element;\n        }\n        else {\n            params.options = element;\n        }\n        if (isNumber(options)) {\n            params.index = options;\n        }\n        else {\n            params.options = options ?? params.options;\n        }\n        return this._loadParams(params);\n    }\n    async setJSON(id, element, pathConfigJson, index) {\n        const params = {};\n        if (id instanceof HTMLElement) {\n            params.element = id;\n            params.url = element;\n            params.index = pathConfigJson;\n        }\n        else {\n            params.id = id;\n            params.element = element;\n            params.url = pathConfigJson;\n            params.index = index;\n        }\n        return this._loadParams(params);\n    }\n    setOnClickHandler(callback) {\n        const dom = this.dom();\n        if (!dom.length) {\n            throw new Error(`${errorPrefix} can only set click handlers after calling tsParticles.load()`);\n        }\n        for (const domItem of dom) {\n            domItem.addClickHandler(callback);\n        }\n    }\n    async _loadParams(params) {\n        const id = params.id ?? `tsparticles${Math.floor(getRandom() * 10000)}`, { index, url } = params, options = url ? await getDataFromUrl({ fallback: params.options, url, index }) : params.options;\n        let domContainer = params.element ?? document.getElementById(id);\n        if (!domContainer) {\n            domContainer = document.createElement(\"div\");\n            domContainer.id = id;\n            document.body.append(domContainer);\n        }\n        const currentOptions = itemFromSingleOrMultiple(options, index), dom = this.dom(), oldIndex = dom.findIndex((v) => v.id === id);\n        if (oldIndex >= 0) {\n            const old = this.domItem(oldIndex);\n            if (old && !old.destroyed) {\n                old.destroy();\n                dom.splice(oldIndex, 1);\n            }\n        }\n        let canvasEl;\n        if (domContainer.tagName.toLowerCase() === \"canvas\") {\n            canvasEl = domContainer;\n            canvasEl.dataset[generatedAttribute] = \"false\";\n        }\n        else {\n            const existingCanvases = domContainer.getElementsByTagName(\"canvas\");\n            if (existingCanvases.length) {\n                canvasEl = existingCanvases[0];\n                canvasEl.dataset[generatedAttribute] = \"false\";\n            }\n            else {\n                canvasEl = document.createElement(\"canvas\");\n                canvasEl.dataset[generatedAttribute] = \"true\";\n                domContainer.appendChild(canvasEl);\n            }\n        }\n        if (!canvasEl.style.width) {\n            canvasEl.style.width = \"100%\";\n        }\n        if (!canvasEl.style.height) {\n            canvasEl.style.height = \"100%\";\n        }\n        const newItem = new Container(this, id, currentOptions);\n        if (oldIndex >= 0) {\n            dom.splice(oldIndex, 0, newItem);\n        }\n        else {\n            dom.push(newItem);\n        }\n        newItem.canvas.loadCanvas(canvasEl);\n        await newItem.start();\n        return newItem;\n    }\n}\n","import { getRangeValue, parseAlpha } from \"./NumberUtils\";\nimport { hslToRgb, hslaToRgba } from \"./ColorUtils\";\nexport class HslColorManager {\n    constructor() {\n        this.key = \"hsl\";\n        this.stringPrefix = \"hsl\";\n    }\n    handleColor(color) {\n        const colorValue = color.value, hslColor = colorValue.hsl ?? color.value;\n        if (hslColor.h !== undefined && hslColor.s !== undefined && hslColor.l !== undefined) {\n            return hslToRgb(hslColor);\n        }\n    }\n    handleRangeColor(color) {\n        const colorValue = color.value, hslColor = colorValue.hsl ?? color.value;\n        if (hslColor.h !== undefined && hslColor.l !== undefined) {\n            return hslToRgb({\n                h: getRangeValue(hslColor.h),\n                l: getRangeValue(hslColor.l),\n                s: getRangeValue(hslColor.s),\n            });\n        }\n    }\n    parseString(input) {\n        if (!input.startsWith(\"hsl\")) {\n            return;\n        }\n        const regex = /hsla?\\(\\s*(\\d+)\\s*,\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*(,\\s*([\\d.%]+)\\s*)?\\)/i, result = regex.exec(input);\n        return result\n            ? hslaToRgba({\n                a: result.length > 4 ? parseAlpha(result[5]) : 1,\n                h: parseInt(result[1], 10),\n                l: parseInt(result[3], 10),\n                s: parseInt(result[2], 10),\n            })\n            : undefined;\n    }\n}\n","import { getRangeValue, parseAlpha } from \"./NumberUtils\";\nexport class RgbColorManager {\n    constructor() {\n        this.key = \"rgb\";\n        this.stringPrefix = \"rgb\";\n    }\n    handleColor(color) {\n        const colorValue = color.value, rgbColor = colorValue.rgb ?? color.value;\n        if (rgbColor.r !== undefined) {\n            return rgbColor;\n        }\n    }\n    handleRangeColor(color) {\n        const colorValue = color.value, rgbColor = colorValue.rgb ?? color.value;\n        if (rgbColor.r !== undefined) {\n            return {\n                r: getRangeValue(rgbColor.r),\n                g: getRangeValue(rgbColor.g),\n                b: getRangeValue(rgbColor.b),\n            };\n        }\n    }\n    parseString(input) {\n        if (!input.startsWith(this.stringPrefix)) {\n            return;\n        }\n        const regex = /rgba?\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([\\d.%]+)\\s*)?\\)/i, result = regex.exec(input);\n        return result\n            ? {\n                a: result.length > 4 ? parseAlpha(result[5]) : 1,\n                b: parseInt(result[3], 10),\n                g: parseInt(result[2], 10),\n                r: parseInt(result[1], 10),\n            }\n            : undefined;\n    }\n}\n","import { init } from \"./init\";\nimport { isSsr } from \"./Utils/Utils\";\nconst tsParticles = init();\nif (!isSsr()) {\n    window.tsParticles = tsParticles;\n}\nexport * from \"./exports\";\nexport * from \"./export-types\";\nexport { tsParticles };\n","import { Engine } from \"./Core/Engine\";\nimport { HslColorManager } from \"./Utils/HslColorManager\";\nimport { RgbColorManager } from \"./Utils/RgbColorManager\";\nimport { addColorManager } from \"./Utils/ColorUtils\";\nexport function init() {\n    const rgbColorManager = new RgbColorManager(), hslColorManager = new HslColorManager();\n    addColorManager(rgbColorManager);\n    addColorManager(hslColorManager);\n    const engine = new Engine();\n    engine.init();\n    return engine;\n}\n","export class AbsorberSizeLimit {\n    constructor() {\n        this.radius = 0;\n        this.mass = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.mass !== undefined) {\n            this.mass = data.mass;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { ValueWithRandom, isNumber } from \"tsparticles-engine\";\nimport { AbsorberSizeLimit } from \"./AbsorberSizeLimit\";\nexport class AbsorberSize extends ValueWithRandom {\n    constructor() {\n        super();\n        this.density = 5;\n        this.value = 50;\n        this.limit = new AbsorberSizeLimit();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.density !== undefined) {\n            this.density = data.density;\n        }\n        if (isNumber(data.limit)) {\n            this.limit.radius = data.limit;\n        }\n        else {\n            this.limit.load(data.limit);\n        }\n    }\n}\n","import { OptionsColor, setRangeValue, } from \"tsparticles-engine\";\nimport { AbsorberSize } from \"./AbsorberSize\";\nexport class Absorber {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"#000000\";\n        this.draggable = false;\n        this.opacity = 1;\n        this.destroy = true;\n        this.orbits = false;\n        this.size = new AbsorberSize();\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.draggable !== undefined) {\n            this.draggable = data.draggable;\n        }\n        this.name = data.name;\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        if (data.position !== undefined) {\n            this.position = {};\n            if (data.position.x !== undefined) {\n                this.position.x = setRangeValue(data.position.x);\n            }\n            if (data.position.y !== undefined) {\n                this.position.y = setRangeValue(data.position.y);\n            }\n        }\n        if (data.size !== undefined) {\n            this.size.load(data.size);\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n        if (data.orbits !== undefined) {\n            this.orbits = data.orbits;\n        }\n    }\n}\n","import { Vector, calcPositionOrRandomFromSize, calcPositionOrRandomFromSizeRanged, getDistance, getDistances, getRandom, getRangeValue, getStyleFromRgb, isPointInside, rangeColorToRgb, } from \"tsparticles-engine\";\nimport { Absorber } from \"./Options/Classes/Absorber\";\nexport class AbsorberInstance {\n    constructor(absorbers, container, options, position) {\n        this.absorbers = absorbers;\n        this.container = container;\n        this._calcPosition = () => {\n            const exactPosition = calcPositionOrRandomFromSizeRanged({\n                size: this.container.canvas.size,\n                position: this.options.position,\n            });\n            return Vector.create(exactPosition.x, exactPosition.y);\n        };\n        this._updateParticlePosition = (particle, v) => {\n            if (particle.destroyed) {\n                return;\n            }\n            const container = this.container, canvasSize = container.canvas.size;\n            if (particle.needsNewPosition) {\n                const newPosition = calcPositionOrRandomFromSize({ size: canvasSize });\n                particle.position.setTo(newPosition);\n                particle.velocity.setTo(particle.initialVelocity);\n                particle.absorberOrbit = undefined;\n                particle.needsNewPosition = false;\n            }\n            if (this.options.orbits) {\n                if (particle.absorberOrbit === undefined) {\n                    particle.absorberOrbit = Vector.create(0, 0);\n                    particle.absorberOrbit.length = getDistance(particle.getPosition(), this.position);\n                    particle.absorberOrbit.angle = getRandom() * Math.PI * 2;\n                }\n                if (particle.absorberOrbit.length <= this.size && !this.options.destroy) {\n                    const minSize = Math.min(canvasSize.width, canvasSize.height);\n                    particle.absorberOrbit.length = minSize * (1 + (getRandom() * 0.2 - 0.1));\n                }\n                if (particle.absorberOrbitDirection === undefined) {\n                    particle.absorberOrbitDirection =\n                        particle.velocity.x >= 0 ? \"clockwise\" : \"counter-clockwise\";\n                }\n                const orbitRadius = particle.absorberOrbit.length, orbitAngle = particle.absorberOrbit.angle, orbitDirection = particle.absorberOrbitDirection;\n                particle.velocity.setTo(Vector.origin);\n                const updateFunc = {\n                    x: orbitDirection === \"clockwise\" ? Math.cos : Math.sin,\n                    y: orbitDirection === \"clockwise\" ? Math.sin : Math.cos,\n                };\n                particle.position.x = this.position.x + orbitRadius * updateFunc.x(orbitAngle);\n                particle.position.y = this.position.y + orbitRadius * updateFunc.y(orbitAngle);\n                particle.absorberOrbit.length -= v.length;\n                particle.absorberOrbit.angle +=\n                    (((particle.retina.moveSpeed ?? 0) * container.retina.pixelRatio) / 100) *\n                        container.retina.reduceFactor;\n            }\n            else {\n                const addV = Vector.origin;\n                addV.length = v.length;\n                addV.angle = v.angle;\n                particle.velocity.addTo(addV);\n            }\n        };\n        this.initialPosition = position ? Vector.create(position.x, position.y) : undefined;\n        if (options instanceof Absorber) {\n            this.options = options;\n        }\n        else {\n            this.options = new Absorber();\n            this.options.load(options);\n        }\n        this.dragging = false;\n        this.name = this.options.name;\n        this.opacity = this.options.opacity;\n        this.size = getRangeValue(this.options.size.value) * container.retina.pixelRatio;\n        this.mass = this.size * this.options.size.density * container.retina.reduceFactor;\n        const limit = this.options.size.limit;\n        this.limit = {\n            radius: limit.radius * container.retina.pixelRatio * container.retina.reduceFactor,\n            mass: limit.mass,\n        };\n        this.color = rangeColorToRgb(this.options.color) ?? {\n            b: 0,\n            g: 0,\n            r: 0,\n        };\n        this.position = this.initialPosition?.copy() ?? this._calcPosition();\n    }\n    attract(particle) {\n        const container = this.container, options = this.options;\n        if (options.draggable) {\n            const mouse = container.interactivity.mouse;\n            if (mouse.clicking && mouse.downPosition) {\n                const mouseDist = getDistance(this.position, mouse.downPosition);\n                if (mouseDist <= this.size) {\n                    this.dragging = true;\n                }\n            }\n            else {\n                this.dragging = false;\n            }\n            if (this.dragging && mouse.position) {\n                this.position.x = mouse.position.x;\n                this.position.y = mouse.position.y;\n            }\n        }\n        const pos = particle.getPosition(), { dx, dy, distance } = getDistances(this.position, pos), v = Vector.create(dx, dy);\n        v.length = (this.mass / Math.pow(distance, 2)) * container.retina.reduceFactor;\n        if (distance < this.size + particle.getRadius()) {\n            const sizeFactor = particle.getRadius() * 0.033 * container.retina.pixelRatio;\n            if ((this.size > particle.getRadius() && distance < this.size - particle.getRadius()) ||\n                (particle.absorberOrbit !== undefined && particle.absorberOrbit.length < 0)) {\n                if (options.destroy) {\n                    particle.destroy();\n                }\n                else {\n                    particle.needsNewPosition = true;\n                    this._updateParticlePosition(particle, v);\n                }\n            }\n            else {\n                if (options.destroy) {\n                    particle.size.value -= sizeFactor;\n                }\n                this._updateParticlePosition(particle, v);\n            }\n            if (this.limit.radius <= 0 || this.size < this.limit.radius) {\n                this.size += sizeFactor;\n            }\n            if (this.limit.mass <= 0 || this.mass < this.limit.mass) {\n                this.mass += sizeFactor * this.options.size.density * container.retina.reduceFactor;\n            }\n        }\n        else {\n            this._updateParticlePosition(particle, v);\n        }\n    }\n    draw(context) {\n        context.translate(this.position.x, this.position.y);\n        context.beginPath();\n        context.arc(0, 0, this.size, 0, Math.PI * 2, false);\n        context.closePath();\n        context.fillStyle = getStyleFromRgb(this.color, this.opacity);\n        context.fill();\n    }\n    resize() {\n        const initialPosition = this.initialPosition;\n        this.position =\n            initialPosition && isPointInside(initialPosition, this.container.canvas.size, Vector.origin)\n                ? initialPosition\n                : this._calcPosition();\n    }\n}\n","import { executeOnSingleOrMultiple, isNumber, itemFromSingleOrMultiple, } from \"tsparticles-engine\";\nimport { AbsorberInstance } from \"./AbsorberInstance\";\nexport class Absorbers {\n    constructor(container) {\n        this.container = container;\n        this.array = [];\n        this.absorbers = [];\n        this.interactivityAbsorbers = [];\n        container.getAbsorber = (idxOrName) => idxOrName === undefined || isNumber(idxOrName)\n            ? this.array[idxOrName || 0]\n            : this.array.find((t) => t.name === idxOrName);\n        container.addAbsorber = (options, position) => this.addAbsorber(options, position);\n    }\n    addAbsorber(options, position) {\n        const absorber = new AbsorberInstance(this, this.container, options, position);\n        this.array.push(absorber);\n        return absorber;\n    }\n    draw(context) {\n        for (const absorber of this.array) {\n            absorber.draw(context);\n        }\n    }\n    handleClickMode(mode) {\n        const absorberOptions = this.absorbers, modeAbsorbers = this.interactivityAbsorbers;\n        if (mode === \"absorber\") {\n            const absorbersModeOptions = itemFromSingleOrMultiple(modeAbsorbers), absorbersOptions = absorbersModeOptions ?? itemFromSingleOrMultiple(absorberOptions), aPosition = this.container.interactivity.mouse.clickPosition;\n            this.addAbsorber(absorbersOptions, aPosition);\n        }\n    }\n    async init() {\n        this.absorbers = this.container.actualOptions.absorbers;\n        this.interactivityAbsorbers = this.container.actualOptions.interactivity.modes.absorbers;\n        executeOnSingleOrMultiple(this.absorbers, (absorber) => {\n            this.addAbsorber(absorber);\n        });\n    }\n    particleUpdate(particle) {\n        for (const absorber of this.array) {\n            absorber.attract(particle);\n            if (particle.destroyed) {\n                break;\n            }\n        }\n    }\n    removeAbsorber(absorber) {\n        const index = this.array.indexOf(absorber);\n        if (index >= 0) {\n            this.array.splice(index, 1);\n        }\n    }\n    resize() {\n        for (const absorber of this.array) {\n            absorber.resize();\n        }\n    }\n    stop() {\n        this.array = [];\n    }\n}\n","import { executeOnSingleOrMultiple, isArray, isInArray, } from \"tsparticles-engine\";\nimport { Absorber } from \"./Options/Classes/Absorber\";\nimport { Absorbers } from \"./Absorbers\";\nclass AbsorbersPlugin {\n    constructor() {\n        this.id = \"absorbers\";\n    }\n    getPlugin(container) {\n        return new Absorbers(container);\n    }\n    loadOptions(options, source) {\n        if (!this.needsPlugin(options) && !this.needsPlugin(source)) {\n            return;\n        }\n        if (source?.absorbers) {\n            options.absorbers = executeOnSingleOrMultiple(source.absorbers, (absorber) => {\n                const tmp = new Absorber();\n                tmp.load(absorber);\n                return tmp;\n            });\n        }\n        options.interactivity.modes.absorbers = executeOnSingleOrMultiple(source?.interactivity?.modes?.absorbers, (absorber) => {\n            const tmp = new Absorber();\n            tmp.load(absorber);\n            return tmp;\n        });\n    }\n    needsPlugin(options) {\n        if (!options) {\n            return false;\n        }\n        const absorbers = options.absorbers;\n        if (isArray(absorbers)) {\n            return !!absorbers.length;\n        }\n        else if (absorbers) {\n            return true;\n        }\n        else if (options.interactivity?.events?.onClick?.mode &&\n            isInArray(\"absorber\", options.interactivity.events.onClick.mode)) {\n            return true;\n        }\n        return false;\n    }\n}\nexport async function loadAbsorbersPlugin(engine, refresh = true) {\n    await engine.addPlugin(new AbsorbersPlugin(), refresh);\n}\nexport * from \"./AbsorberContainer\";\nexport * from \"./Enums/AbsorberClickMode\";\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class DestroyBounds {\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.bottom !== undefined) {\n            this.bottom = setRangeValue(data.bottom);\n        }\n        if (data.left !== undefined) {\n            this.left = setRangeValue(data.left);\n        }\n        if (data.right !== undefined) {\n            this.right = setRangeValue(data.right);\n        }\n        if (data.top !== undefined) {\n            this.top = setRangeValue(data.top);\n        }\n    }\n}\n","import { ValueWithRandom } from \"tsparticles-engine\";\nexport class SplitFactor extends ValueWithRandom {\n    constructor() {\n        super();\n        this.value = 3;\n    }\n}\n","import { ValueWithRandom } from \"tsparticles-engine\";\nexport class SplitRate extends ValueWithRandom {\n    constructor() {\n        super();\n        this.value = { min: 4, max: 9 };\n    }\n}\n","import { OptionsColor, deepExtend, executeOnSingleOrMultiple, } from \"tsparticles-engine\";\nimport { SplitFactor } from \"./SplitFactor\";\nimport { SplitRate } from \"./SplitRate\";\nexport class Split {\n    constructor() {\n        this.count = 1;\n        this.factor = new SplitFactor();\n        this.rate = new SplitRate();\n        this.sizeOffset = true;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.count !== undefined) {\n            this.count = data.count;\n        }\n        this.factor.load(data.factor);\n        this.rate.load(data.rate);\n        this.particles = executeOnSingleOrMultiple(data.particles, (particles) => {\n            return deepExtend({}, particles);\n        });\n        if (data.sizeOffset !== undefined) {\n            this.sizeOffset = data.sizeOffset;\n        }\n        if (data.colorOffset) {\n            this.colorOffset = this.colorOffset ?? {};\n            if (data.colorOffset.h !== undefined) {\n                this.colorOffset.h = data.colorOffset.h;\n            }\n            if (data.colorOffset.s !== undefined) {\n                this.colorOffset.s = data.colorOffset.s;\n            }\n            if (data.colorOffset.l !== undefined) {\n                this.colorOffset.l = data.colorOffset.l;\n            }\n        }\n    }\n}\n","import { DestroyBounds } from \"./DestroyBounds\";\nimport { Split } from \"./Split\";\nexport class Destroy {\n    constructor() {\n        this.bounds = new DestroyBounds();\n        this.mode = \"none\";\n        this.split = new Split();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.mode) {\n            this.mode = data.mode;\n        }\n        if (data.bounds) {\n            this.bounds.load(data.bounds);\n        }\n        this.split.load(data.split);\n    }\n}\n","import { getRangeValue, getValue, isNumber, itemFromSingleOrMultiple, loadParticlesOptions, randomInRange, setRangeValue, } from \"tsparticles-engine\";\nfunction addSplitParticle(engine, container, parent, splitParticlesOptions) {\n    const destroyOptions = parent.options.destroy;\n    if (!destroyOptions) {\n        return;\n    }\n    const splitOptions = destroyOptions.split, options = loadParticlesOptions(engine, container, parent.options), factor = getValue(splitOptions.factor), parentColor = parent.getFillColor();\n    if (splitOptions.color) {\n        options.color.load(splitOptions.color);\n    }\n    else if (splitOptions.colorOffset && parentColor) {\n        options.color.load({\n            value: {\n                hsl: {\n                    h: parentColor.h + getRangeValue(splitOptions.colorOffset.h ?? 0),\n                    s: parentColor.s + getRangeValue(splitOptions.colorOffset.s ?? 0),\n                    l: parentColor.l + getRangeValue(splitOptions.colorOffset.l ?? 0),\n                },\n            },\n        });\n    }\n    else {\n        options.color.load({\n            value: {\n                hsl: parent.getFillColor(),\n            },\n        });\n    }\n    options.move.load({\n        center: {\n            x: parent.position.x,\n            y: parent.position.y,\n            mode: \"precise\",\n        },\n    });\n    if (isNumber(options.size.value)) {\n        options.size.value /= factor;\n    }\n    else {\n        options.size.value.min /= factor;\n        options.size.value.max /= factor;\n    }\n    options.load(splitParticlesOptions);\n    const offset = splitOptions.sizeOffset ? setRangeValue(-parent.size.value, parent.size.value) : 0, position = {\n        x: parent.position.x + randomInRange(offset),\n        y: parent.position.y + randomInRange(offset),\n    };\n    return container.particles.addParticle(position, options, parent.group, (particle) => {\n        if (particle.size.value < 0.5) {\n            return false;\n        }\n        particle.velocity.length = randomInRange(setRangeValue(parent.velocity.length, particle.velocity.length));\n        particle.splitCount = (parent.splitCount ?? 0) + 1;\n        particle.unbreakable = true;\n        setTimeout(() => {\n            particle.unbreakable = false;\n        }, 500);\n        return true;\n    });\n}\nexport function split(engine, container, particle) {\n    const destroyOptions = particle.options.destroy;\n    if (!destroyOptions) {\n        return;\n    }\n    const splitOptions = destroyOptions.split;\n    if (splitOptions.count >= 0 && (particle.splitCount === undefined || particle.splitCount++ > splitOptions.count)) {\n        return;\n    }\n    const rate = getValue(splitOptions.rate), particlesSplitOptions = itemFromSingleOrMultiple(splitOptions.particles);\n    for (let i = 0; i < rate; i++) {\n        addSplitParticle(engine, container, particle, particlesSplitOptions);\n    }\n}\n","import { getRangeValue, } from \"tsparticles-engine\";\nimport { Destroy } from \"./Options/Classes/Destroy\";\nimport { split } from \"./Utils\";\nexport class DestroyUpdater {\n    constructor(engine, container) {\n        this.engine = engine;\n        this.container = container;\n    }\n    init(particle) {\n        const container = this.container, particlesOptions = particle.options, destroyOptions = particlesOptions.destroy;\n        if (!destroyOptions) {\n            return;\n        }\n        particle.splitCount = 0;\n        const destroyBoundsOptions = destroyOptions.bounds;\n        if (!particle.destroyBounds) {\n            particle.destroyBounds = {};\n        }\n        const { bottom, left, right, top } = destroyBoundsOptions, { destroyBounds } = particle, canvasSize = container.canvas.size;\n        if (bottom) {\n            destroyBounds.bottom = (getRangeValue(bottom) * canvasSize.height) / 100;\n        }\n        if (left) {\n            destroyBounds.left = (getRangeValue(left) * canvasSize.width) / 100;\n        }\n        if (right) {\n            destroyBounds.right = (getRangeValue(right) * canvasSize.width) / 100;\n        }\n        if (top) {\n            destroyBounds.top = (getRangeValue(top) * canvasSize.height) / 100;\n        }\n    }\n    isEnabled(particle) {\n        return !particle.destroyed;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.destroy) {\n            options.destroy = new Destroy();\n        }\n        for (const source of sources) {\n            options.destroy.load(source?.destroy);\n        }\n    }\n    particleDestroyed(particle, override) {\n        if (override) {\n            return;\n        }\n        const destroyOptions = particle.options.destroy;\n        if (destroyOptions && destroyOptions.mode === \"split\") {\n            split(this.engine, this.container, particle);\n        }\n    }\n    update(particle) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        const position = particle.getPosition(), bounds = particle.destroyBounds;\n        if (!bounds) {\n            return;\n        }\n        if ((bounds.bottom !== undefined && position.y >= bounds.bottom) ||\n            (bounds.left !== undefined && position.x <= bounds.left) ||\n            (bounds.right !== undefined && position.x >= bounds.right) ||\n            (bounds.top !== undefined && position.y <= bounds.top)) {\n            particle.destroy();\n        }\n    }\n}\n","import { DestroyUpdater } from \"./DestroyUpdater\";\nexport async function loadDestroyUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"destroy\", (container) => new DestroyUpdater(engine, container), refresh);\n}\n","import { getRandom } from \"tsparticles-engine\";\nexport class CircleShape {\n    randomPosition(position, size, fill) {\n        const generateTheta = (x, y) => {\n            const u = getRandom() / 4.0, theta = Math.atan((y / x) * Math.tan(2 * Math.PI * u)), v = getRandom();\n            if (v < 0.25) {\n                return theta;\n            }\n            else if (v < 0.5) {\n                return Math.PI - theta;\n            }\n            else if (v < 0.75) {\n                return Math.PI + theta;\n            }\n            else {\n                return -theta;\n            }\n        }, radius = (x, y, theta) => (x * y) / Math.sqrt((y * Math.cos(theta)) ** 2 + (x * Math.sin(theta)) ** 2), [a, b] = [size.width / 2, size.height / 2], randomTheta = generateTheta(a, b), maxRadius = radius(a, b, randomTheta), randomRadius = fill ? maxRadius * Math.sqrt(getRandom()) : maxRadius;\n        return {\n            x: position.x + randomRadius * Math.cos(randomTheta),\n            y: position.y + randomRadius * Math.sin(randomTheta),\n        };\n    }\n}\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class EmitterLife {\n    constructor() {\n        this.wait = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = data.count;\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        if (data.duration !== undefined) {\n            this.duration = setRangeValue(data.duration);\n        }\n        if (data.wait !== undefined) {\n            this.wait = data.wait;\n        }\n    }\n}\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class EmitterRate {\n    constructor() {\n        this.quantity = 1;\n        this.delay = 0.1;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.quantity !== undefined) {\n            this.quantity = setRangeValue(data.quantity);\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n    }\n}\n","export class EmitterSize {\n    constructor() {\n        this.mode = \"percent\";\n        this.height = 0;\n        this.width = 0;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.height !== undefined) {\n            this.height = data.height;\n        }\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n    }\n}\n","import { AnimatableColor, deepExtend, executeOnSingleOrMultiple, setRangeValue, } from \"tsparticles-engine\";\nimport { EmitterLife } from \"./EmitterLife\";\nimport { EmitterRate } from \"./EmitterRate\";\nimport { EmitterSize } from \"./EmitterSize\";\nexport class Emitter {\n    constructor() {\n        this.autoPlay = true;\n        this.fill = true;\n        this.life = new EmitterLife();\n        this.rate = new EmitterRate();\n        this.shape = \"square\";\n        this.startCount = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.autoPlay !== undefined) {\n            this.autoPlay = data.autoPlay;\n        }\n        if (data.size !== undefined) {\n            if (!this.size) {\n                this.size = new EmitterSize();\n            }\n            this.size.load(data.size);\n        }\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        this.domId = data.domId;\n        if (data.fill !== undefined) {\n            this.fill = data.fill;\n        }\n        this.life.load(data.life);\n        this.name = data.name;\n        this.particles = executeOnSingleOrMultiple(data.particles, (particles) => {\n            return deepExtend({}, particles);\n        });\n        this.rate.load(data.rate);\n        if (data.shape !== undefined) {\n            this.shape = data.shape;\n        }\n        if (data.position !== undefined) {\n            this.position = {};\n            if (data.position.x !== undefined) {\n                this.position.x = setRangeValue(data.position.x);\n            }\n            if (data.position.y !== undefined) {\n                this.position.y = setRangeValue(data.position.y);\n            }\n        }\n        if (data.spawnColor !== undefined) {\n            if (this.spawnColor === undefined) {\n                this.spawnColor = new AnimatableColor();\n            }\n            this.spawnColor.load(data.spawnColor);\n        }\n        if (data.startCount !== undefined) {\n            this.startCount = data.startCount;\n        }\n    }\n}\n","import { Vector, calcPositionOrRandomFromSizeRanged, deepExtend, getRangeValue, getSize, isPointInside, itemFromSingleOrMultiple, randomInRange, rangeColorToHsl, } from \"tsparticles-engine\";\nimport { Emitter } from \"./Options/Classes/Emitter\";\nimport { EmitterSize } from \"./Options/Classes/EmitterSize\";\nexport class EmitterInstance {\n    constructor(engine, emitters, container, options, position) {\n        this.emitters = emitters;\n        this.container = container;\n        this._calcPosition = () => {\n            return calcPositionOrRandomFromSizeRanged({\n                size: this.container.canvas.size,\n                position: this.options.position,\n            });\n        };\n        this._destroy = () => {\n            this.emitters.removeEmitter(this);\n            this._engine.dispatchEvent(\"emitterDestroyed\", {\n                container: this.container,\n                data: {\n                    emitter: this,\n                },\n            });\n        };\n        this._emit = () => {\n            if (this._paused) {\n                return;\n            }\n            const quantity = getRangeValue(this.options.rate.quantity);\n            this._emitParticles(quantity);\n        };\n        this._emitParticles = (quantity) => {\n            const position = this.getPosition(), size = this.getSize(), singleParticlesOptions = itemFromSingleOrMultiple(this._particlesOptions);\n            for (let i = 0; i < quantity; i++) {\n                const particlesOptions = deepExtend({}, singleParticlesOptions);\n                if (this.spawnColor) {\n                    const hslAnimation = this.options.spawnColor?.animation;\n                    if (hslAnimation) {\n                        this.spawnColor.h = this._setColorAnimation(hslAnimation.h, this.spawnColor.h, 360);\n                        this.spawnColor.s = this._setColorAnimation(hslAnimation.s, this.spawnColor.s, 100);\n                        this.spawnColor.l = this._setColorAnimation(hslAnimation.l, this.spawnColor.l, 100);\n                    }\n                    if (!particlesOptions.color) {\n                        particlesOptions.color = {\n                            value: this.spawnColor,\n                        };\n                    }\n                    else {\n                        particlesOptions.color.value = this.spawnColor;\n                    }\n                }\n                if (!position) {\n                    return;\n                }\n                const pPosition = this._shape?.randomPosition(position, size, this.fill) ?? position;\n                this.container.particles.addParticle(pPosition, particlesOptions);\n            }\n        };\n        this._prepareToDie = () => {\n            if (this._paused) {\n                return;\n            }\n            const duration = this.options.life?.duration !== undefined ? getRangeValue(this.options.life.duration) : undefined;\n            if (this.container.retina.reduceFactor &&\n                (this._lifeCount > 0 || this._immortal) &&\n                duration !== undefined &&\n                duration > 0) {\n                this._duration = duration * 1000;\n            }\n        };\n        this._setColorAnimation = (animation, initValue, maxValue) => {\n            const container = this.container;\n            if (!animation.enable) {\n                return initValue;\n            }\n            const colorOffset = randomInRange(animation.offset), delay = getRangeValue(this.options.rate.delay), emitFactor = (1000 * delay) / container.retina.reduceFactor, colorSpeed = getRangeValue(animation.speed ?? 0);\n            return (initValue + (colorSpeed * container.fpsLimit) / emitFactor + colorOffset * 3.6) % maxValue;\n        };\n        this._engine = engine;\n        this._currentDuration = 0;\n        this._currentEmitDelay = 0;\n        this._currentSpawnDelay = 0;\n        this._initialPosition = position;\n        if (options instanceof Emitter) {\n            this.options = options;\n        }\n        else {\n            this.options = new Emitter();\n            this.options.load(options);\n        }\n        this._spawnDelay = (getRangeValue(this.options.life.delay ?? 0) * 1000) / this.container.retina.reduceFactor;\n        this.position = this._initialPosition ?? this._calcPosition();\n        this.name = this.options.name;\n        this._shape = this._engine.emitterShapeManager?.getShape(this.options.shape);\n        this.fill = this.options.fill;\n        this._firstSpawn = !this.options.life.wait;\n        this._startParticlesAdded = false;\n        let particlesOptions = deepExtend({}, this.options.particles);\n        particlesOptions ??= {};\n        particlesOptions.move ??= {};\n        particlesOptions.move.direction ??= this.options.direction;\n        if (this.options.spawnColor) {\n            this.spawnColor = rangeColorToHsl(this.options.spawnColor);\n        }\n        this._paused = !this.options.autoPlay;\n        this._particlesOptions = particlesOptions;\n        this.size =\n            this.options.size ??\n                (() => {\n                    const size = new EmitterSize();\n                    size.load({\n                        height: 0,\n                        mode: \"percent\",\n                        width: 0,\n                    });\n                    return size;\n                })();\n        this._lifeCount = this.options.life.count ?? -1;\n        this._immortal = this._lifeCount <= 0;\n        this._engine.dispatchEvent(\"emitterCreated\", {\n            container,\n            data: {\n                emitter: this,\n            },\n        });\n        this.play();\n    }\n    externalPause() {\n        this._paused = true;\n        this.pause();\n    }\n    externalPlay() {\n        this._paused = false;\n        this.play();\n    }\n    getPosition() {\n        if (this.options.domId) {\n            const container = this.container, element = document.getElementById(this.options.domId);\n            if (element) {\n                const elRect = element.getBoundingClientRect();\n                return {\n                    x: (elRect.x + elRect.width / 2) * container.retina.pixelRatio,\n                    y: (elRect.y + elRect.height / 2) * container.retina.pixelRatio,\n                };\n            }\n        }\n        return this.position;\n    }\n    getSize() {\n        const container = this.container;\n        if (this.options.domId) {\n            const element = document.getElementById(this.options.domId);\n            if (element) {\n                const elRect = element.getBoundingClientRect();\n                return {\n                    width: elRect.width * container.retina.pixelRatio,\n                    height: elRect.height * container.retina.pixelRatio,\n                };\n            }\n        }\n        return getSize(this.size, container.canvas.size);\n    }\n    pause() {\n        if (this._paused) {\n            return;\n        }\n        delete this._emitDelay;\n    }\n    play() {\n        if (this._paused) {\n            return;\n        }\n        if (!(this.container.retina.reduceFactor &&\n            (this._lifeCount > 0 || this._immortal || !this.options.life.count) &&\n            (this._firstSpawn || this._currentSpawnDelay >= (this._spawnDelay ?? 0)))) {\n            return;\n        }\n        if (this._emitDelay === undefined) {\n            const delay = getRangeValue(this.options.rate.delay);\n            this._emitDelay = (1000 * delay) / this.container.retina.reduceFactor;\n        }\n        if (this._lifeCount > 0 || this._immortal) {\n            this._prepareToDie();\n        }\n    }\n    resize() {\n        const initialPosition = this._initialPosition;\n        this.position =\n            initialPosition && isPointInside(initialPosition, this.container.canvas.size, Vector.origin)\n                ? initialPosition\n                : this._calcPosition();\n    }\n    update(delta) {\n        if (this._paused) {\n            return;\n        }\n        if (this._firstSpawn) {\n            this._firstSpawn = false;\n            this._currentSpawnDelay = this._spawnDelay ?? 0;\n            this._currentEmitDelay = this._emitDelay ?? 0;\n        }\n        if (!this._startParticlesAdded) {\n            this._startParticlesAdded = true;\n            this._emitParticles(this.options.startCount);\n        }\n        if (this._duration !== undefined) {\n            this._currentDuration += delta.value;\n            if (this._currentDuration >= this._duration) {\n                this.pause();\n                if (this._spawnDelay !== undefined) {\n                    delete this._spawnDelay;\n                }\n                if (!this._immortal) {\n                    this._lifeCount--;\n                }\n                if (this._lifeCount > 0 || this._immortal) {\n                    this.position = this._calcPosition();\n                    this._spawnDelay =\n                        (getRangeValue(this.options.life.delay ?? 0) * 1000) / this.container.retina.reduceFactor;\n                }\n                else {\n                    this._destroy();\n                }\n                this._currentDuration -= this._duration;\n                delete this._duration;\n            }\n        }\n        if (this._spawnDelay !== undefined) {\n            this._currentSpawnDelay += delta.value;\n            if (this._currentSpawnDelay >= this._spawnDelay) {\n                this._engine.dispatchEvent(\"emitterPlay\", {\n                    container: this.container,\n                });\n                this.play();\n                this._currentSpawnDelay -= this._currentSpawnDelay;\n                delete this._spawnDelay;\n            }\n        }\n        if (this._emitDelay !== undefined) {\n            this._currentEmitDelay += delta.value;\n            if (this._currentEmitDelay >= this._emitDelay) {\n                this._emit();\n                this._currentEmitDelay -= this._emitDelay;\n            }\n        }\n    }\n}\n","import { arrayRandomIndex, executeOnSingleOrMultiple, isArray, isNumber, itemFromArray, } from \"tsparticles-engine\";\nimport { Emitter } from \"./Options/Classes/Emitter\";\nimport { EmitterInstance } from \"./EmitterInstance\";\nexport class Emitters {\n    constructor(engine, container) {\n        this.container = container;\n        this._engine = engine;\n        this.array = [];\n        this.emitters = [];\n        this.interactivityEmitters = {\n            random: {\n                count: 1,\n                enable: false,\n            },\n            value: [],\n        };\n        container.getEmitter = (idxOrName) => idxOrName === undefined || isNumber(idxOrName)\n            ? this.array[idxOrName || 0]\n            : this.array.find((t) => t.name === idxOrName);\n        container.addEmitter = (options, position) => this.addEmitter(options, position);\n        container.removeEmitter = (idxOrName) => {\n            const emitter = container.getEmitter(idxOrName);\n            if (emitter) {\n                this.removeEmitter(emitter);\n            }\n        };\n        container.playEmitter = (idxOrName) => {\n            const emitter = container.getEmitter(idxOrName);\n            if (emitter) {\n                emitter.externalPlay();\n            }\n        };\n        container.pauseEmitter = (idxOrName) => {\n            const emitter = container.getEmitter(idxOrName);\n            if (emitter) {\n                emitter.externalPause();\n            }\n        };\n    }\n    addEmitter(options, position) {\n        const emitterOptions = new Emitter();\n        emitterOptions.load(options);\n        const emitter = new EmitterInstance(this._engine, this, this.container, emitterOptions, position);\n        this.array.push(emitter);\n        return emitter;\n    }\n    handleClickMode(mode) {\n        const emitterOptions = this.emitters, modeEmitters = this.interactivityEmitters;\n        if (mode !== \"emitter\") {\n            return;\n        }\n        let emittersModeOptions;\n        if (modeEmitters && isArray(modeEmitters.value)) {\n            if (modeEmitters.value.length > 0 && modeEmitters.random.enable) {\n                emittersModeOptions = [];\n                const usedIndexes = [];\n                for (let i = 0; i < modeEmitters.random.count; i++) {\n                    const idx = arrayRandomIndex(modeEmitters.value);\n                    if (usedIndexes.includes(idx) && usedIndexes.length < modeEmitters.value.length) {\n                        i--;\n                        continue;\n                    }\n                    usedIndexes.push(idx);\n                    emittersModeOptions.push(itemFromArray(modeEmitters.value, idx));\n                }\n            }\n            else {\n                emittersModeOptions = modeEmitters.value;\n            }\n        }\n        else {\n            emittersModeOptions = modeEmitters?.value;\n        }\n        const emittersOptions = emittersModeOptions ?? emitterOptions, ePosition = this.container.interactivity.mouse.clickPosition;\n        executeOnSingleOrMultiple(emittersOptions, (emitter) => {\n            this.addEmitter(emitter, ePosition);\n        });\n    }\n    async init() {\n        this.emitters = this.container.actualOptions.emitters;\n        this.interactivityEmitters = this.container.actualOptions.interactivity.modes.emitters;\n        if (!this.emitters) {\n            return;\n        }\n        if (isArray(this.emitters)) {\n            for (const emitterOptions of this.emitters) {\n                this.addEmitter(emitterOptions);\n            }\n        }\n        else {\n            this.addEmitter(this.emitters);\n        }\n    }\n    pause() {\n        for (const emitter of this.array) {\n            emitter.pause();\n        }\n    }\n    play() {\n        for (const emitter of this.array) {\n            emitter.play();\n        }\n    }\n    removeEmitter(emitter) {\n        const index = this.array.indexOf(emitter);\n        if (index >= 0) {\n            this.array.splice(index, 1);\n        }\n    }\n    resize() {\n        for (const emitter of this.array) {\n            emitter.resize();\n        }\n    }\n    stop() {\n        this.array = [];\n    }\n    update(delta) {\n        for (const emitter of this.array) {\n            emitter.update(delta);\n        }\n    }\n}\n","const shapes = new Map();\nexport class ShapeManager {\n    constructor(engine) {\n        this._engine = engine;\n    }\n    addShape(name, drawer) {\n        if (!this.getShape(name)) {\n            shapes.set(name, drawer);\n        }\n    }\n    getShape(name) {\n        return shapes.get(name);\n    }\n    getSupportedShapes() {\n        return shapes.keys();\n    }\n}\n","import { getRandom } from \"tsparticles-engine\";\nfunction randomSquareCoordinate(position, offset) {\n    return position + offset * (getRandom() - 0.5);\n}\nexport class SquareShape {\n    randomPosition(position, size, fill) {\n        if (fill) {\n            return {\n                x: randomSquareCoordinate(position.x, size.width),\n                y: randomSquareCoordinate(position.y, size.height),\n            };\n        }\n        else {\n            const halfW = size.width / 2, halfH = size.height / 2, side = Math.floor(getRandom() * 4), v = (getRandom() - 0.5) * 2;\n            switch (side) {\n                case 0:\n                    return {\n                        x: position.x + v * halfW,\n                        y: position.y - halfH,\n                    };\n                case 1:\n                    return {\n                        x: position.x - halfW,\n                        y: position.y + v * halfH,\n                    };\n                case 2:\n                    return {\n                        x: position.x + v * halfW,\n                        y: position.y + halfH,\n                    };\n                case 3:\n                default:\n                    return {\n                        x: position.x + halfW,\n                        y: position.y + v * halfH,\n                    };\n            }\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, isArray, isInArray, } from \"tsparticles-engine\";\nimport { CircleShape } from \"./Shapes/Circle/CircleShape\";\nimport { Emitter } from \"./Options/Classes/Emitter\";\nimport { Emitters } from \"./Emitters\";\nimport { ShapeManager } from \"./ShapeManager\";\nimport { SquareShape } from \"./Shapes/Square/SquareShape\";\nclass EmittersPlugin {\n    constructor(engine) {\n        this._engine = engine;\n        this.id = \"emitters\";\n    }\n    getPlugin(container) {\n        return new Emitters(this._engine, container);\n    }\n    loadOptions(options, source) {\n        if (!this.needsPlugin(options) && !this.needsPlugin(source)) {\n            return;\n        }\n        if (source?.emitters) {\n            options.emitters = executeOnSingleOrMultiple(source.emitters, (emitter) => {\n                const tmp = new Emitter();\n                tmp.load(emitter);\n                return tmp;\n            });\n        }\n        const interactivityEmitters = source?.interactivity?.modes?.emitters;\n        if (interactivityEmitters) {\n            if (isArray(interactivityEmitters)) {\n                options.interactivity.modes.emitters = {\n                    random: {\n                        count: 1,\n                        enable: true,\n                    },\n                    value: interactivityEmitters.map((s) => {\n                        const tmp = new Emitter();\n                        tmp.load(s);\n                        return tmp;\n                    }),\n                };\n            }\n            else {\n                const emitterMode = interactivityEmitters;\n                if (emitterMode.value !== undefined) {\n                    if (isArray(emitterMode.value)) {\n                        options.interactivity.modes.emitters = {\n                            random: {\n                                count: emitterMode.random.count ?? 1,\n                                enable: emitterMode.random.enable ?? false,\n                            },\n                            value: emitterMode.value.map((s) => {\n                                const tmp = new Emitter();\n                                tmp.load(s);\n                                return tmp;\n                            }),\n                        };\n                    }\n                    else {\n                        const tmp = new Emitter();\n                        tmp.load(emitterMode.value);\n                        options.interactivity.modes.emitters = {\n                            random: {\n                                count: emitterMode.random.count ?? 1,\n                                enable: emitterMode.random.enable ?? false,\n                            },\n                            value: tmp,\n                        };\n                    }\n                }\n                else {\n                    const emitterOptions = (options.interactivity.modes.emitters = {\n                        random: {\n                            count: 1,\n                            enable: false,\n                        },\n                        value: new Emitter(),\n                    });\n                    emitterOptions.value.load(interactivityEmitters);\n                }\n            }\n        }\n    }\n    needsPlugin(options) {\n        if (!options) {\n            return false;\n        }\n        const emitters = options.emitters;\n        return ((isArray(emitters) && !!emitters.length) ||\n            emitters !== undefined ||\n            (!!options.interactivity?.events?.onClick?.mode &&\n                isInArray(\"emitter\", options.interactivity.events.onClick.mode)));\n    }\n}\nexport async function loadEmittersPlugin(engine, refresh = true) {\n    if (!engine.emitterShapeManager) {\n        engine.emitterShapeManager = new ShapeManager(engine);\n    }\n    if (!engine.addEmitterShape) {\n        engine.addEmitterShape = (name, shape) => {\n            engine.emitterShapeManager?.addShape(name, shape);\n        };\n    }\n    const plugin = new EmittersPlugin(engine);\n    await engine.addPlugin(plugin, refresh);\n    engine.addEmitterShape(\"circle\", new CircleShape());\n    engine.addEmitterShape(\"square\", new SquareShape());\n}\nexport * from \"./EmitterContainer\";\nexport * from \"./EmittersEngine\";\nexport * from \"./Enums/EmitterClickMode\";\nexport * from \"./Enums/EmitterShapeType\";\n","export class ExternalInteractorBase {\n    constructor(container) {\n        this.container = container;\n        this.type = \"external\";\n    }\n}\n","import { deepExtend } from \"tsparticles-engine\";\nexport class Trail {\n    constructor() {\n        this.delay = 1;\n        this.pauseOnStop = false;\n        this.quantity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.delay !== undefined) {\n            this.delay = data.delay;\n        }\n        if (data.quantity !== undefined) {\n            this.quantity = data.quantity;\n        }\n        if (data.particles !== undefined) {\n            this.particles = deepExtend({}, data.particles);\n        }\n        if (data.pauseOnStop !== undefined) {\n            this.pauseOnStop = data.pauseOnStop;\n        }\n    }\n}\n","import { ExternalInteractorBase, isInArray, } from \"tsparticles-engine\";\nimport { Trail } from \"./Options/Classes/Trail\";\nexport class TrailMaker extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this._delay = 0;\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact(delta) {\n        const container = this.container, { interactivity } = container;\n        if (!container.retina.reduceFactor) {\n            return;\n        }\n        const options = container.actualOptions, trailOptions = options.interactivity.modes.trail;\n        if (!trailOptions) {\n            return;\n        }\n        const optDelay = (trailOptions.delay * 1000) / this.container.retina.reduceFactor;\n        if (this._delay < optDelay) {\n            this._delay += delta.value;\n        }\n        if (this._delay < optDelay) {\n            return;\n        }\n        const canEmit = !(trailOptions.pauseOnStop &&\n            (interactivity.mouse.position === this._lastPosition ||\n                (interactivity.mouse.position?.x === this._lastPosition?.x &&\n                    interactivity.mouse.position?.y === this._lastPosition?.y)));\n        const mousePos = container.interactivity.mouse.position;\n        if (mousePos) {\n            this._lastPosition = { ...mousePos };\n        }\n        else {\n            delete this._lastPosition;\n        }\n        if (canEmit) {\n            container.particles.push(trailOptions.quantity, container.interactivity.mouse, trailOptions.particles);\n        }\n        this._delay -= optDelay;\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events;\n        return ((mouse.clicking && mouse.inside && !!mouse.position && isInArray(\"trail\", events.onClick.mode)) ||\n            (mouse.inside && !!mouse.position && isInArray(\"trail\", events.onHover.mode)));\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.trail) {\n            options.trail = new Trail();\n        }\n        for (const source of sources) {\n            options.trail.load(source?.trail);\n        }\n    }\n    reset() {\n    }\n}\n","import { TrailMaker } from \"./TrailMaker\";\nexport async function loadExternalTrailInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalTrail\", (container) => new TrailMaker(container), refresh);\n}\nexport * from \"./Options/Classes/Trail\";\nexport * from \"./Options/Interfaces/ITrail\";\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class RollLight {\n    constructor() {\n        this.enable = false;\n        this.value = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value);\n        }\n    }\n}\n","import { OptionsColor, setRangeValue, } from \"tsparticles-engine\";\nimport { RollLight } from \"./RollLight\";\nexport class Roll {\n    constructor() {\n        this.darken = new RollLight();\n        this.enable = false;\n        this.enlighten = new RollLight();\n        this.mode = \"vertical\";\n        this.speed = 25;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.backColor !== undefined) {\n            this.backColor = OptionsColor.create(this.backColor, data.backColor);\n        }\n        this.darken.load(data.darken);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.enlighten.load(data.enlighten);\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n    }\n}\n","import { initParticle, updateRoll } from \"./Utils\";\nimport { Roll } from \"./Options/Classes/Roll\";\nexport class RollUpdater {\n    getTransformValues(particle) {\n        const roll = particle.roll?.enable && particle.roll, rollHorizontal = roll && roll.horizontal, rollVertical = roll && roll.vertical;\n        return {\n            a: rollHorizontal ? Math.cos(roll.angle) : undefined,\n            d: rollVertical ? Math.sin(roll.angle) : undefined,\n        };\n    }\n    init(particle) {\n        initParticle(particle);\n    }\n    isEnabled(particle) {\n        const roll = particle.options.roll;\n        return !particle.destroyed && !particle.spawning && !!roll?.enable;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.roll) {\n            options.roll = new Roll();\n        }\n        for (const source of sources) {\n            options.roll.load(source?.roll);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateRoll(particle, delta);\n    }\n}\n","import { getRandom, getRangeValue, rangeColorToHsl } from \"tsparticles-engine\";\nexport function initParticle(particle) {\n    const rollOpt = particle.options.roll;\n    if (!rollOpt?.enable) {\n        particle.roll = {\n            enable: false,\n            horizontal: false,\n            vertical: false,\n            angle: 0,\n            speed: 0,\n        };\n        return;\n    }\n    particle.roll = {\n        enable: rollOpt.enable,\n        horizontal: rollOpt.mode === \"horizontal\" || rollOpt.mode === \"both\",\n        vertical: rollOpt.mode === \"vertical\" || rollOpt.mode === \"both\",\n        angle: getRandom() * Math.PI * 2,\n        speed: getRangeValue(rollOpt.speed) / 360,\n    };\n    if (rollOpt.backColor) {\n        particle.backColor = rangeColorToHsl(rollOpt.backColor);\n    }\n    else if (rollOpt.darken.enable && rollOpt.enlighten.enable) {\n        const alterType = getRandom() >= 0.5 ? \"darken\" : \"enlighten\";\n        particle.roll.alter = {\n            type: alterType,\n            value: getRangeValue(alterType === \"darken\" ? rollOpt.darken.value : rollOpt.enlighten.value),\n        };\n    }\n    else if (rollOpt.darken.enable) {\n        particle.roll.alter = {\n            type: \"darken\",\n            value: getRangeValue(rollOpt.darken.value),\n        };\n    }\n    else if (rollOpt.enlighten.enable) {\n        particle.roll.alter = {\n            type: \"enlighten\",\n            value: getRangeValue(rollOpt.enlighten.value),\n        };\n    }\n}\nexport function updateRoll(particle, delta) {\n    const roll = particle.options.roll, data = particle.roll;\n    if (!data || !roll?.enable) {\n        return;\n    }\n    const speed = data.speed * delta.factor, max = 2 * Math.PI;\n    data.angle += speed;\n    if (data.angle > max) {\n        data.angle -= max;\n    }\n}\n","import { RollUpdater } from \"./RollUpdater\";\nexport async function loadRollUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"roll\", () => new RollUpdater(), refresh);\n}\n","import { tsParticles } from \"tsparticles-engine\";\nexport class Particles {\n    static init(options) {\n        const particles = new Particles(), selector = options.selector;\n        if (!selector) {\n            throw new Error(\"No selector provided\");\n        }\n        const el = document.querySelector(selector);\n        if (!el) {\n            throw new Error(\"No element found for selector\");\n        }\n        tsParticles\n            .set(selector.replace(\".\", \"\").replace(\"!\", \"\"), el, {\n            fullScreen: {\n                enable: false,\n            },\n            particles: {\n                color: {\n                    value: options.color ?? \"!000000\",\n                },\n                links: {\n                    color: \"random\",\n                    distance: options.minDistance ?? 120,\n                    enable: options.connectParticles ?? false,\n                },\n                move: {\n                    enable: true,\n                    speed: options.speed ?? 0.5,\n                },\n                number: {\n                    value: options.maxParticles ?? 100,\n                },\n                size: {\n                    value: { min: 1, max: options.sizeVariations ?? 3 },\n                },\n            },\n            responsive: options.responsive?.map((responsive) => ({\n                maxWidth: responsive.breakpoint,\n                options: {\n                    particles: {\n                        color: {\n                            value: responsive.options?.color,\n                        },\n                        links: {\n                            distance: responsive.options?.minDistance,\n                            enable: responsive.options?.connectParticles,\n                        },\n                        number: {\n                            value: options.maxParticles,\n                        },\n                        move: {\n                            enable: true,\n                            speed: responsive.options?.speed,\n                        },\n                        size: {\n                            value: responsive.options?.sizeVariations,\n                        },\n                    },\n                },\n            })),\n        })\n            .then((container) => {\n            particles._container = container;\n        });\n        return particles;\n    }\n    destroy() {\n        const container = this._container;\n        container && container.destroy();\n    }\n    pauseAnimation() {\n        const container = this._container;\n        container && container.pause();\n    }\n    resumeAnimation() {\n        const container = this._container;\n        container && container.play();\n    }\n}\n","import { Particles } from \"./marcbruederlin/Particles\";\nimport { initParticlesJS } from \"./VincentGarreau/particles\";\nconst initPjs = (engine) => {\n    const { particlesJS, pJSDom } = initParticlesJS(engine);\n    window.particlesJS = particlesJS;\n    window.pJSDom = pJSDom;\n    window.Particles = Particles;\n    return { particlesJS, pJSDom, Particles };\n};\nexport { initPjs };\n","const initParticlesJS = (engine) => {\n    const particlesJS = (tagId, options) => {\n        return engine.load(tagId, options);\n    };\n    particlesJS.load = (tagId, pathConfigJson, callback) => {\n        engine\n            .loadJSON(tagId, pathConfigJson)\n            .then((container) => {\n            if (container) {\n                callback(container);\n            }\n        })\n            .catch(() => {\n            callback(undefined);\n        });\n    };\n    particlesJS.setOnClickHandler = (callback) => {\n        engine.setOnClickHandler(callback);\n    };\n    const pJSDom = engine.dom();\n    return { particlesJS, pJSDom };\n};\nexport { initParticlesJS };\n","import { clamp, getDistances, getRandom, } from \"tsparticles-engine\";\nexport function applyDistance(particle) {\n    const initialPosition = particle.initialPosition, { dx, dy } = getDistances(initialPosition, particle.position), dxFixed = Math.abs(dx), dyFixed = Math.abs(dy), { maxDistance } = particle.retina, hDistance = maxDistance.horizontal, vDistance = maxDistance.vertical;\n    if (!hDistance && !vDistance) {\n        return;\n    }\n    if (((hDistance && dxFixed >= hDistance) || (vDistance && dyFixed >= vDistance)) && !particle.misplaced) {\n        particle.misplaced = (!!hDistance && dxFixed > hDistance) || (!!vDistance && dyFixed > vDistance);\n        if (hDistance) {\n            particle.velocity.x = particle.velocity.y / 2 - particle.velocity.x;\n        }\n        if (vDistance) {\n            particle.velocity.y = particle.velocity.x / 2 - particle.velocity.y;\n        }\n    }\n    else if ((!hDistance || dxFixed < hDistance) && (!vDistance || dyFixed < vDistance) && particle.misplaced) {\n        particle.misplaced = false;\n    }\n    else if (particle.misplaced) {\n        const pos = particle.position, vel = particle.velocity;\n        if (hDistance && ((pos.x < initialPosition.x && vel.x < 0) || (pos.x > initialPosition.x && vel.x > 0))) {\n            vel.x *= -getRandom();\n        }\n        if (vDistance && ((pos.y < initialPosition.y && vel.y < 0) || (pos.y > initialPosition.y && vel.y > 0))) {\n            vel.y *= -getRandom();\n        }\n    }\n}\nexport function move(particle, moveOptions, moveSpeed, maxSpeed, moveDrift, delta) {\n    applyPath(particle, delta);\n    const gravityOptions = particle.gravity, gravityFactor = gravityOptions?.enable && gravityOptions.inverse ? -1 : 1;\n    if (moveDrift && moveSpeed) {\n        particle.velocity.x += (moveDrift * delta.factor) / (60 * moveSpeed);\n    }\n    if (gravityOptions?.enable && moveSpeed) {\n        particle.velocity.y += (gravityFactor * (gravityOptions.acceleration * delta.factor)) / (60 * moveSpeed);\n    }\n    const decay = particle.moveDecay;\n    particle.velocity.multTo(decay);\n    const velocity = particle.velocity.mult(moveSpeed);\n    if (gravityOptions?.enable &&\n        maxSpeed > 0 &&\n        ((!gravityOptions.inverse && velocity.y >= 0 && velocity.y >= maxSpeed) ||\n            (gravityOptions.inverse && velocity.y <= 0 && velocity.y <= -maxSpeed))) {\n        velocity.y = gravityFactor * maxSpeed;\n        if (moveSpeed) {\n            particle.velocity.y = velocity.y / moveSpeed;\n        }\n    }\n    const zIndexOptions = particle.options.zIndex, zVelocityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.velocityRate;\n    velocity.multTo(zVelocityFactor);\n    const { position } = particle;\n    position.addTo(velocity);\n    if (moveOptions.vibrate) {\n        position.x += Math.sin(position.x * Math.cos(position.y));\n        position.y += Math.cos(position.y * Math.sin(position.x));\n    }\n}\nexport function spin(particle, moveSpeed) {\n    const container = particle.container;\n    if (!particle.spin) {\n        return;\n    }\n    const updateFunc = {\n        x: particle.spin.direction === \"clockwise\" ? Math.cos : Math.sin,\n        y: particle.spin.direction === \"clockwise\" ? Math.sin : Math.cos,\n    };\n    particle.position.x = particle.spin.center.x + particle.spin.radius * updateFunc.x(particle.spin.angle);\n    particle.position.y = particle.spin.center.y + particle.spin.radius * updateFunc.y(particle.spin.angle);\n    particle.spin.radius += particle.spin.acceleration;\n    const maxCanvasSize = Math.max(container.canvas.size.width, container.canvas.size.height);\n    if (particle.spin.radius > maxCanvasSize / 2) {\n        particle.spin.radius = maxCanvasSize / 2;\n        particle.spin.acceleration *= -1;\n    }\n    else if (particle.spin.radius < 0) {\n        particle.spin.radius = 0;\n        particle.spin.acceleration *= -1;\n    }\n    particle.spin.angle += (moveSpeed / 100) * (1 - particle.spin.radius / maxCanvasSize);\n}\nexport function applyPath(particle, delta) {\n    const particlesOptions = particle.options, pathOptions = particlesOptions.move.path, pathEnabled = pathOptions.enable;\n    if (!pathEnabled) {\n        return;\n    }\n    if (particle.lastPathTime <= particle.pathDelay) {\n        particle.lastPathTime += delta.value;\n        return;\n    }\n    const path = particle.pathGenerator?.generate(particle, delta);\n    if (path) {\n        particle.velocity.addTo(path);\n    }\n    if (pathOptions.clamp) {\n        particle.velocity.x = clamp(particle.velocity.x, -1, 1);\n        particle.velocity.y = clamp(particle.velocity.y, -1, 1);\n    }\n    particle.lastPathTime -= particle.pathDelay;\n}\nexport function getProximitySpeedFactor(particle) {\n    return particle.slow.inRange ? particle.slow.factor : 1;\n}\n","import { getDistance, getRangeMax, getRangeValue, } from \"tsparticles-engine\";\nimport { applyDistance, getProximitySpeedFactor, move, spin } from \"./Utils\";\nconst diffFactor = 2;\nexport class BaseMover {\n    constructor() {\n        this._initSpin = (particle) => {\n            const container = particle.container, options = particle.options, spinOptions = options.move.spin;\n            if (!spinOptions.enable) {\n                return;\n            }\n            const spinPos = spinOptions.position ?? { x: 50, y: 50 }, spinCenter = {\n                x: (spinPos.x / 100) * container.canvas.size.width,\n                y: (spinPos.y / 100) * container.canvas.size.height,\n            }, pos = particle.getPosition(), distance = getDistance(pos, spinCenter), spinAcceleration = getRangeValue(spinOptions.acceleration);\n            particle.retina.spinAcceleration = spinAcceleration * container.retina.pixelRatio;\n            particle.spin = {\n                center: spinCenter,\n                direction: particle.velocity.x >= 0 ? \"clockwise\" : \"counter-clockwise\",\n                angle: particle.velocity.angle,\n                radius: distance,\n                acceleration: particle.retina.spinAcceleration,\n            };\n        };\n    }\n    init(particle) {\n        const options = particle.options, gravityOptions = options.move.gravity;\n        particle.gravity = {\n            enable: gravityOptions.enable,\n            acceleration: getRangeValue(gravityOptions.acceleration),\n            inverse: gravityOptions.inverse,\n        };\n        this._initSpin(particle);\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && particle.options.move.enable;\n    }\n    move(particle, delta) {\n        const particleOptions = particle.options, moveOptions = particleOptions.move;\n        if (!moveOptions.enable) {\n            return;\n        }\n        const container = particle.container, pxRatio = container.retina.pixelRatio, slowFactor = getProximitySpeedFactor(particle), baseSpeed = (particle.retina.moveSpeed ??= getRangeValue(moveOptions.speed) * pxRatio) *\n            container.retina.reduceFactor, moveDrift = (particle.retina.moveDrift ??= getRangeValue(particle.options.move.drift) * pxRatio), maxSize = getRangeMax(particleOptions.size.value) * pxRatio, sizeFactor = moveOptions.size ? particle.getRadius() / maxSize : 1, moveSpeed = (baseSpeed * sizeFactor * slowFactor * (delta.factor || 1)) / diffFactor, maxSpeed = particle.retina.maxSpeed ?? container.retina.maxSpeed;\n        if (moveOptions.spin.enable) {\n            spin(particle, moveSpeed);\n        }\n        else {\n            move(particle, moveOptions, moveSpeed, maxSpeed, moveDrift, delta);\n        }\n        applyDistance(particle);\n    }\n}\n","import { BaseMover } from \"./BaseMover\";\nexport async function loadBaseMover(engine, refresh = true) {\n    await engine.addMover(\"base\", () => new BaseMover(), refresh);\n}\n","import { isObject } from \"tsparticles-engine\";\nexport class CircleDrawer {\n    draw(context, particle, radius) {\n        if (!particle.circleRange) {\n            particle.circleRange = { min: 0, max: Math.PI * 2 };\n        }\n        const circleRange = particle.circleRange;\n        context.arc(0, 0, radius, circleRange.min, circleRange.max, false);\n    }\n    getSidesCount() {\n        return 12;\n    }\n    particleInit(container, particle) {\n        const shapeData = particle.shapeData, angle = shapeData?.angle ?? {\n            max: 360,\n            min: 0,\n        };\n        particle.circleRange = !isObject(angle)\n            ? {\n                min: 0,\n                max: (angle * Math.PI) / 180,\n            }\n            : { min: (angle.min * Math.PI) / 180, max: (angle.max * Math.PI) / 180 };\n    }\n}\n","import { CircleDrawer } from \"./CircleDrawer\";\nexport async function loadCircleShape(engine, refresh = true) {\n    await engine.addShape(\"circle\", new CircleDrawer(), refresh);\n}\n","import { randomInRange, } from \"tsparticles-engine\";\nfunction updateColorValue(delta, colorValue, valueAnimation, max, decrease) {\n    if (!colorValue ||\n        !valueAnimation.enable ||\n        ((colorValue.maxLoops ?? 0) > 0 && (colorValue.loops ?? 0) > (colorValue.maxLoops ?? 0))) {\n        return;\n    }\n    if (!colorValue.time) {\n        colorValue.time = 0;\n    }\n    if ((colorValue.delayTime ?? 0) > 0 && colorValue.time < (colorValue.delayTime ?? 0)) {\n        colorValue.time += delta.value;\n    }\n    if ((colorValue.delayTime ?? 0) > 0 && colorValue.time < (colorValue.delayTime ?? 0)) {\n        return;\n    }\n    const offset = randomInRange(valueAnimation.offset), velocity = (colorValue.velocity ?? 0) * delta.factor + offset * 3.6, decay = colorValue.decay ?? 1;\n    if (!decrease || colorValue.status === \"increasing\") {\n        colorValue.value += velocity;\n        if (colorValue.value > max) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            if (decrease) {\n                colorValue.status = \"decreasing\";\n                colorValue.value -= colorValue.value % max;\n            }\n        }\n    }\n    else {\n        colorValue.value -= velocity;\n        if (colorValue.value < 0) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            colorValue.status = \"increasing\";\n            colorValue.value += colorValue.value;\n        }\n    }\n    if (colorValue.velocity && decay !== 1) {\n        colorValue.velocity *= decay;\n    }\n    if (colorValue.value > max) {\n        colorValue.value %= max;\n    }\n}\nexport function updateColor(particle, delta) {\n    const { h: hAnimation, s: sAnimation, l: lAnimation } = particle.options.color.animation, { color } = particle;\n    if (!color) {\n        return;\n    }\n    const { h, s, l } = color;\n    if (h) {\n        updateColorValue(delta, h, hAnimation, 360, false);\n    }\n    if (s) {\n        updateColorValue(delta, s, sAnimation, 100, true);\n    }\n    if (l) {\n        updateColorValue(delta, l, lAnimation, 100, true);\n    }\n}\n","import { getHslAnimationFromHsl, rangeColorToHsl, } from \"tsparticles-engine\";\nimport { updateColor } from \"./Utils\";\nexport class ColorUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const hslColor = rangeColorToHsl(particle.options.color, particle.id, particle.options.reduceDuplicates);\n        if (hslColor) {\n            particle.color = getHslAnimationFromHsl(hslColor, particle.options.color.animation, this.container.retina.reduceFactor);\n        }\n    }\n    isEnabled(particle) {\n        const { h: hAnimation, s: sAnimation, l: lAnimation } = particle.options.color.animation, { color } = particle;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            ((color?.h.value !== undefined && hAnimation.enable) ||\n                (color?.s.value !== undefined && sAnimation.enable) ||\n                (color?.l.value !== undefined && lAnimation.enable)));\n    }\n    update(particle, delta) {\n        updateColor(particle, delta);\n    }\n}\n","import { ColorUpdater } from \"./ColorUpdater\";\nexport async function loadColorUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"color\", (container) => new ColorUpdater(container), refresh);\n}\n","import { getRandom, getRangeValue, initParticleNumericAnimationValue, } from \"tsparticles-engine\";\nimport { updateOpacity } from \"./Utils\";\nexport class OpacityUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const opacityOptions = particle.options.opacity;\n        particle.opacity = initParticleNumericAnimationValue(opacityOptions, 1);\n        const opacityAnimation = opacityOptions.animation;\n        if (opacityAnimation.enable) {\n            particle.opacity.velocity =\n                (getRangeValue(opacityAnimation.speed) / 100) * this.container.retina.reduceFactor;\n            if (!opacityAnimation.sync) {\n                particle.opacity.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            !!particle.opacity &&\n            particle.opacity.enable &&\n            ((particle.opacity.maxLoops ?? 0) <= 0 ||\n                ((particle.opacity.maxLoops ?? 0) > 0 &&\n                    (particle.opacity.loops ?? 0) < (particle.opacity.maxLoops ?? 0))));\n    }\n    reset(particle) {\n        if (particle.opacity) {\n            particle.opacity.time = 0;\n            particle.opacity.loops = 0;\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateOpacity(particle, delta);\n    }\n}\n","import { clamp } from \"tsparticles-engine\";\nfunction checkDestroy(particle, value, minValue, maxValue) {\n    switch (particle.options.opacity.animation.destroy) {\n        case \"max\":\n            if (value >= maxValue) {\n                particle.destroy();\n            }\n            break;\n        case \"min\":\n            if (value <= minValue) {\n                particle.destroy();\n            }\n            break;\n    }\n}\nexport function updateOpacity(particle, delta) {\n    const data = particle.opacity;\n    if (particle.destroyed || !data?.enable || ((data.maxLoops ?? 0) > 0 && (data.loops ?? 0) > (data.maxLoops ?? 0))) {\n        return;\n    }\n    const minValue = data.min, maxValue = data.max, decay = data.decay ?? 1;\n    if (!data.time) {\n        data.time = 0;\n    }\n    if ((data.delayTime ?? 0) > 0 && data.time < (data.delayTime ?? 0)) {\n        data.time += delta.value;\n    }\n    if ((data.delayTime ?? 0) > 0 && data.time < (data.delayTime ?? 0)) {\n        return;\n    }\n    switch (data.status) {\n        case \"increasing\":\n            if (data.value >= maxValue) {\n                data.status = \"decreasing\";\n                if (!data.loops) {\n                    data.loops = 0;\n                }\n                data.loops++;\n            }\n            else {\n                data.value += (data.velocity ?? 0) * delta.factor;\n            }\n            break;\n        case \"decreasing\":\n            if (data.value <= minValue) {\n                data.status = \"increasing\";\n                if (!data.loops) {\n                    data.loops = 0;\n                }\n                data.loops++;\n            }\n            else {\n                data.value -= (data.velocity ?? 0) * delta.factor;\n            }\n            break;\n    }\n    if (data.velocity && data.decay !== 1) {\n        data.velocity *= decay;\n    }\n    checkDestroy(particle, data.value, minValue, maxValue);\n    if (!particle.destroyed) {\n        data.value = clamp(data.value, minValue, maxValue);\n    }\n}\n","import { OpacityUpdater } from \"./OpacityUpdater\";\nexport async function loadOpacityUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"opacity\", (container) => new OpacityUpdater(container), refresh);\n}\n","import { calculateBounds, } from \"tsparticles-engine\";\nimport { bounceHorizontal, bounceVertical } from \"./Utils\";\nexport class BounceOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\n            \"bounce\",\n            \"bounce-vertical\",\n            \"bounce-horizontal\",\n            \"bounceVertical\",\n            \"bounceHorizontal\",\n            \"split\",\n        ];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        let handled = false;\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particleBounce !== undefined) {\n                handled = plugin.particleBounce(particle, delta, direction);\n            }\n            if (handled) {\n                break;\n            }\n        }\n        if (handled) {\n            return;\n        }\n        const pos = particle.getPosition(), offset = particle.offset, size = particle.getRadius(), bounds = calculateBounds(pos, size), canvasSize = container.canvas.size;\n        bounceHorizontal({ particle, outMode, direction, bounds, canvasSize, offset, size });\n        bounceVertical({ particle, outMode, direction, bounds, canvasSize, offset, size });\n    }\n}\n","import { getValue } from \"tsparticles-engine\";\nexport function bounceHorizontal(data) {\n    if ((data.outMode !== \"bounce\" &&\n        data.outMode !== \"bounce-horizontal\" &&\n        data.outMode !== \"bounceHorizontal\" &&\n        data.outMode !== \"split\") ||\n        (data.direction !== \"left\" && data.direction !== \"right\")) {\n        return;\n    }\n    if (data.bounds.right < 0 && data.direction === \"left\") {\n        data.particle.position.x = data.size + data.offset.x;\n    }\n    else if (data.bounds.left > data.canvasSize.width && data.direction === \"right\") {\n        data.particle.position.x = data.canvasSize.width - data.size - data.offset.x;\n    }\n    const velocity = data.particle.velocity.x;\n    let bounced = false;\n    if ((data.direction === \"right\" && data.bounds.right >= data.canvasSize.width && velocity > 0) ||\n        (data.direction === \"left\" && data.bounds.left <= 0 && velocity < 0)) {\n        const newVelocity = getValue(data.particle.options.bounce.horizontal);\n        data.particle.velocity.x *= -newVelocity;\n        bounced = true;\n    }\n    if (!bounced) {\n        return;\n    }\n    const minPos = data.offset.x + data.size;\n    if (data.bounds.right >= data.canvasSize.width && data.direction === \"right\") {\n        data.particle.position.x = data.canvasSize.width - minPos;\n    }\n    else if (data.bounds.left <= 0 && data.direction === \"left\") {\n        data.particle.position.x = minPos;\n    }\n    if (data.outMode === \"split\") {\n        data.particle.destroy();\n    }\n}\nexport function bounceVertical(data) {\n    if ((data.outMode !== \"bounce\" &&\n        data.outMode !== \"bounce-vertical\" &&\n        data.outMode !== \"bounceVertical\" &&\n        data.outMode !== \"split\") ||\n        (data.direction !== \"bottom\" && data.direction !== \"top\")) {\n        return;\n    }\n    if (data.bounds.bottom < 0 && data.direction === \"top\") {\n        data.particle.position.y = data.size + data.offset.y;\n    }\n    else if (data.bounds.top > data.canvasSize.height && data.direction === \"bottom\") {\n        data.particle.position.y = data.canvasSize.height - data.size - data.offset.y;\n    }\n    const velocity = data.particle.velocity.y;\n    let bounced = false;\n    if ((data.direction === \"bottom\" && data.bounds.bottom >= data.canvasSize.height && velocity > 0) ||\n        (data.direction === \"top\" && data.bounds.top <= 0 && velocity < 0)) {\n        const newVelocity = getValue(data.particle.options.bounce.vertical);\n        data.particle.velocity.y *= -newVelocity;\n        bounced = true;\n    }\n    if (!bounced) {\n        return;\n    }\n    const minPos = data.offset.y + data.size;\n    if (data.bounds.bottom >= data.canvasSize.height && data.direction === \"bottom\") {\n        data.particle.position.y = data.canvasSize.height - minPos;\n    }\n    else if (data.bounds.top <= 0 && data.direction === \"top\") {\n        data.particle.position.y = minPos;\n    }\n    if (data.outMode === \"split\") {\n        data.particle.destroy();\n    }\n}\n","import { Vector, getDistances, isPointInside, } from \"tsparticles-engine\";\nexport class DestroyOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\"destroy\"];\n    }\n    update(particle, direction, _delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        switch (particle.outType) {\n            case \"normal\":\n            case \"outside\":\n                if (isPointInside(particle.position, container.canvas.size, Vector.origin, particle.getRadius(), direction)) {\n                    return;\n                }\n                break;\n            case \"inside\": {\n                const { dx, dy } = getDistances(particle.position, particle.moveCenter);\n                const { x: vx, y: vy } = particle.velocity;\n                if ((vx < 0 && dx > particle.moveCenter.radius) ||\n                    (vy < 0 && dy > particle.moveCenter.radius) ||\n                    (vx >= 0 && dx < -particle.moveCenter.radius) ||\n                    (vy >= 0 && dy < -particle.moveCenter.radius)) {\n                    return;\n                }\n                break;\n            }\n        }\n        container.particles.remove(particle, undefined, true);\n    }\n}\n","import { Vector, isPointInside, } from \"tsparticles-engine\";\nexport class NoneOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\"none\"];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        if ((particle.options.move.distance.horizontal &&\n            (direction === \"left\" || direction === \"right\")) ||\n            (particle.options.move.distance.vertical &&\n                (direction === \"top\" || direction === \"bottom\"))) {\n            return;\n        }\n        const gravityOptions = particle.options.move.gravity, container = this.container;\n        const canvasSize = container.canvas.size;\n        const pRadius = particle.getRadius();\n        if (!gravityOptions.enable) {\n            if ((particle.velocity.y > 0 && particle.position.y <= canvasSize.height + pRadius) ||\n                (particle.velocity.y < 0 && particle.position.y >= -pRadius) ||\n                (particle.velocity.x > 0 && particle.position.x <= canvasSize.width + pRadius) ||\n                (particle.velocity.x < 0 && particle.position.x >= -pRadius)) {\n                return;\n            }\n            if (!isPointInside(particle.position, container.canvas.size, Vector.origin, pRadius, direction)) {\n                container.particles.remove(particle);\n            }\n        }\n        else {\n            const position = particle.position;\n            if ((!gravityOptions.inverse &&\n                position.y > canvasSize.height + pRadius &&\n                direction === \"bottom\") ||\n                (gravityOptions.inverse && position.y < -pRadius && direction === \"top\")) {\n                container.particles.remove(particle);\n            }\n        }\n    }\n}\n","import { Vector, calculateBounds, getDistances, getRandom, isPointInside, randomInRange, } from \"tsparticles-engine\";\nexport class OutOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\"out\"];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        switch (particle.outType) {\n            case \"inside\": {\n                const { x: vx, y: vy } = particle.velocity;\n                const circVec = Vector.origin;\n                circVec.length = particle.moveCenter.radius;\n                circVec.angle = particle.velocity.angle + Math.PI;\n                circVec.addTo(Vector.create(particle.moveCenter));\n                const { dx, dy } = getDistances(particle.position, circVec);\n                if ((vx <= 0 && dx >= 0) || (vy <= 0 && dy >= 0) || (vx >= 0 && dx <= 0) || (vy >= 0 && dy <= 0)) {\n                    return;\n                }\n                particle.position.x = Math.floor(randomInRange({\n                    min: 0,\n                    max: container.canvas.size.width,\n                }));\n                particle.position.y = Math.floor(randomInRange({\n                    min: 0,\n                    max: container.canvas.size.height,\n                }));\n                const { dx: newDx, dy: newDy } = getDistances(particle.position, particle.moveCenter);\n                particle.direction = Math.atan2(-newDy, -newDx);\n                particle.velocity.angle = particle.direction;\n                break;\n            }\n            default: {\n                if (isPointInside(particle.position, container.canvas.size, Vector.origin, particle.getRadius(), direction)) {\n                    return;\n                }\n                switch (particle.outType) {\n                    case \"outside\": {\n                        particle.position.x =\n                            Math.floor(randomInRange({\n                                min: -particle.moveCenter.radius,\n                                max: particle.moveCenter.radius,\n                            })) + particle.moveCenter.x;\n                        particle.position.y =\n                            Math.floor(randomInRange({\n                                min: -particle.moveCenter.radius,\n                                max: particle.moveCenter.radius,\n                            })) + particle.moveCenter.y;\n                        const { dx, dy } = getDistances(particle.position, particle.moveCenter);\n                        if (particle.moveCenter.radius) {\n                            particle.direction = Math.atan2(dy, dx);\n                            particle.velocity.angle = particle.direction;\n                        }\n                        break;\n                    }\n                    case \"normal\": {\n                        const wrap = particle.options.move.warp, canvasSize = container.canvas.size, newPos = {\n                            bottom: canvasSize.height + particle.getRadius() + particle.offset.y,\n                            left: -particle.getRadius() - particle.offset.x,\n                            right: canvasSize.width + particle.getRadius() + particle.offset.x,\n                            top: -particle.getRadius() - particle.offset.y,\n                        }, sizeValue = particle.getRadius(), nextBounds = calculateBounds(particle.position, sizeValue);\n                        if (direction === \"right\" &&\n                            nextBounds.left > canvasSize.width + particle.offset.x) {\n                            particle.position.x = newPos.left;\n                            particle.initialPosition.x = particle.position.x;\n                            if (!wrap) {\n                                particle.position.y = getRandom() * canvasSize.height;\n                                particle.initialPosition.y = particle.position.y;\n                            }\n                        }\n                        else if (direction === \"left\" && nextBounds.right < -particle.offset.x) {\n                            particle.position.x = newPos.right;\n                            particle.initialPosition.x = particle.position.x;\n                            if (!wrap) {\n                                particle.position.y = getRandom() * canvasSize.height;\n                                particle.initialPosition.y = particle.position.y;\n                            }\n                        }\n                        if (direction === \"bottom\" &&\n                            nextBounds.top > canvasSize.height + particle.offset.y) {\n                            if (!wrap) {\n                                particle.position.x = getRandom() * canvasSize.width;\n                                particle.initialPosition.x = particle.position.x;\n                            }\n                            particle.position.y = newPos.top;\n                            particle.initialPosition.y = particle.position.y;\n                        }\n                        else if (direction === \"top\" && nextBounds.bottom < -particle.offset.y) {\n                            if (!wrap) {\n                                particle.position.x = getRandom() * canvasSize.width;\n                                particle.initialPosition.x = particle.position.x;\n                            }\n                            particle.position.y = newPos.bottom;\n                            particle.initialPosition.y = particle.position.y;\n                        }\n                        break;\n                    }\n                }\n                break;\n            }\n        }\n    }\n}\n","import { BounceOutMode } from \"./BounceOutMode\";\nimport { DestroyOutMode } from \"./DestroyOutMode\";\nimport { NoneOutMode } from \"./NoneOutMode\";\nimport { OutOutMode } from \"./OutOutMode\";\nexport class OutOfCanvasUpdater {\n    constructor(container) {\n        this.container = container;\n        this._updateOutMode = (particle, delta, outMode, direction) => {\n            for (const updater of this.updaters) {\n                updater.update(particle, direction, delta, outMode);\n            }\n        };\n        this.updaters = [\n            new BounceOutMode(container),\n            new DestroyOutMode(container),\n            new OutOutMode(container),\n            new NoneOutMode(container),\n        ];\n    }\n    init() {\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && !particle.spawning;\n    }\n    update(particle, delta) {\n        const outModes = particle.options.move.outModes;\n        this._updateOutMode(particle, delta, outModes.bottom ?? outModes.default, \"bottom\");\n        this._updateOutMode(particle, delta, outModes.left ?? outModes.default, \"left\");\n        this._updateOutMode(particle, delta, outModes.right ?? outModes.default, \"right\");\n        this._updateOutMode(particle, delta, outModes.top ?? outModes.default, \"top\");\n    }\n}\n","import { OutOfCanvasUpdater } from \"./OutOfCanvasUpdater\";\nexport async function loadOutModesUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"outModes\", (container) => new OutOfCanvasUpdater(container), refresh);\n}\n","import { getRandom } from \"tsparticles-engine\";\nimport { updateSize } from \"./Utils\";\nexport class SizeUpdater {\n    init(particle) {\n        const container = particle.container, sizeOptions = particle.options.size, sizeAnimation = sizeOptions.animation;\n        if (sizeAnimation.enable) {\n            particle.size.velocity =\n                ((particle.retina.sizeAnimationSpeed ?? container.retina.sizeAnimationSpeed) / 100) *\n                    container.retina.reduceFactor;\n            if (!sizeAnimation.sync) {\n                particle.size.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            particle.size.enable &&\n            ((particle.size.maxLoops ?? 0) <= 0 ||\n                ((particle.size.maxLoops ?? 0) > 0 && (particle.size.loops ?? 0) < (particle.size.maxLoops ?? 0))));\n    }\n    reset(particle) {\n        particle.size.loops = 0;\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateSize(particle, delta);\n    }\n}\n","import { clamp } from \"tsparticles-engine\";\nfunction checkDestroy(particle, value, minValue, maxValue) {\n    switch (particle.options.size.animation.destroy) {\n        case \"max\":\n            if (value >= maxValue) {\n                particle.destroy();\n            }\n            break;\n        case \"min\":\n            if (value <= minValue) {\n                particle.destroy();\n            }\n            break;\n    }\n}\nexport function updateSize(particle, delta) {\n    const data = particle.size;\n    if (particle.destroyed ||\n        !data ||\n        !data.enable ||\n        ((data.maxLoops ?? 0) > 0 && (data.loops ?? 0) > (data.maxLoops ?? 0))) {\n        return;\n    }\n    const sizeVelocity = (data.velocity ?? 0) * delta.factor, minValue = data.min, maxValue = data.max, decay = data.decay ?? 1;\n    if (!data.time) {\n        data.time = 0;\n    }\n    if ((data.delayTime ?? 0) > 0 && data.time < (data.delayTime ?? 0)) {\n        data.time += delta.value;\n    }\n    if ((data.delayTime ?? 0) > 0 && data.time < (data.delayTime ?? 0)) {\n        return;\n    }\n    switch (data.status) {\n        case \"increasing\":\n            if (data.value >= maxValue) {\n                data.status = \"decreasing\";\n                if (!data.loops) {\n                    data.loops = 0;\n                }\n                data.loops++;\n            }\n            else {\n                data.value += sizeVelocity;\n            }\n            break;\n        case \"decreasing\":\n            if (data.value <= minValue) {\n                data.status = \"increasing\";\n                if (!data.loops) {\n                    data.loops = 0;\n                }\n                data.loops++;\n            }\n            else {\n                data.value -= sizeVelocity;\n            }\n    }\n    if (data.velocity && decay !== 1) {\n        data.velocity *= decay;\n    }\n    checkDestroy(particle, data.value, minValue, maxValue);\n    if (!particle.destroyed) {\n        data.value = clamp(data.value, minValue, maxValue);\n    }\n}\n","import { SizeUpdater } from \"./SizeUpdater\";\nexport async function loadSizeUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"size\", () => new SizeUpdater(), refresh);\n}\n","import { loadBaseMover } from \"tsparticles-move-base\";\nimport { loadCircleShape } from \"tsparticles-shape-circle\";\nimport { loadColorUpdater } from \"tsparticles-updater-color\";\nimport { loadOpacityUpdater } from \"tsparticles-updater-opacity\";\nimport { loadOutModesUpdater } from \"tsparticles-updater-out-modes\";\nimport { loadSizeUpdater } from \"tsparticles-updater-size\";\nexport async function loadBasic(engine, refresh = true) {\n    await loadBaseMover(engine, false);\n    await loadCircleShape(engine, false);\n    await loadColorUpdater(engine, false);\n    await loadOpacityUpdater(engine, false);\n    await loadOutModesUpdater(engine, false);\n    await loadSizeUpdater(engine, false);\n    await engine.refresh(refresh);\n}\n","import { addEasing } from \"tsparticles-engine\";\nexport async function loadEasingQuadPlugin() {\n    addEasing(\"ease-in-quad\", (value) => value ** 2);\n    addEasing(\"ease-out-quad\", (value) => 1 - (1 - value) ** 2);\n    addEasing(\"ease-in-out-quad\", (value) => (value < 0.5 ? 2 * value ** 2 : 1 - (-2 * value + 2) ** 2 / 2));\n}\n","export class Attract {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.easing = \"ease-out-quad\";\n        this.factor = 1;\n        this.maxSpeed = 50;\n        this.speed = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.easing !== undefined) {\n            this.easing = data.easing;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = data.maxSpeed;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n    }\n}\n","import { Circle, ExternalInteractorBase, Vector, clamp, getDistances, getEasing, isInArray, mouseMoveEvent, } from \"tsparticles-engine\";\nimport { Attract } from \"./Options/Classes/Attract\";\nexport class Attractor extends ExternalInteractorBase {\n    constructor(engine, container) {\n        super(container);\n        this._clickAttract = () => {\n            const container = this.container;\n            if (!container.attract) {\n                container.attract = { particles: [] };\n            }\n            const { attract } = container;\n            if (!attract.finish) {\n                if (!attract.count) {\n                    attract.count = 0;\n                }\n                attract.count++;\n                if (attract.count === container.particles.count) {\n                    attract.finish = true;\n                }\n            }\n            if (attract.clicking) {\n                const mousePos = container.interactivity.mouse.clickPosition, attractRadius = container.retina.attractModeDistance;\n                if (!attractRadius || attractRadius < 0 || !mousePos) {\n                    return;\n                }\n                this._processAttract(mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius));\n            }\n            else if (attract.clicking === false) {\n                attract.particles = [];\n            }\n            return;\n        };\n        this._hoverAttract = () => {\n            const container = this.container, mousePos = container.interactivity.mouse.position, attractRadius = container.retina.attractModeDistance;\n            if (!attractRadius || attractRadius < 0 || !mousePos) {\n                return;\n            }\n            this._processAttract(mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius));\n        };\n        this._processAttract = (position, attractRadius, area) => {\n            const container = this.container, attractOptions = container.actualOptions.interactivity.modes.attract;\n            if (!attractOptions) {\n                return;\n            }\n            const query = container.particles.quadTree.query(area, (p) => this.isEnabled(p));\n            for (const particle of query) {\n                const { dx, dy, distance } = getDistances(particle.position, position);\n                const velocity = attractOptions.speed * attractOptions.factor;\n                const attractFactor = clamp(getEasing(attractOptions.easing)(1 - distance / attractRadius) * velocity, 0, attractOptions.maxSpeed);\n                const normVec = Vector.create(distance === 0 ? velocity : (dx / distance) * attractFactor, distance === 0 ? velocity : (dy / distance) * attractFactor);\n                particle.position.subFrom(normVec);\n            }\n        };\n        this._engine = engine;\n        if (!container.attract) {\n            container.attract = { particles: [] };\n        }\n        this.handleClickMode = (mode) => {\n            const options = this.container.actualOptions, attract = options.interactivity.modes.attract;\n            if (!attract || mode !== \"attract\") {\n                return;\n            }\n            if (!container.attract) {\n                container.attract = { particles: [] };\n            }\n            container.attract.clicking = true;\n            container.attract.count = 0;\n            for (const particle of container.attract.particles) {\n                if (!this.isEnabled(particle)) {\n                    continue;\n                }\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            container.attract.particles = [];\n            container.attract.finish = false;\n            setTimeout(() => {\n                if (container.destroyed) {\n                    return;\n                }\n                if (!container.attract) {\n                    container.attract = { particles: [] };\n                }\n                container.attract.clicking = false;\n            }, attract.duration * 1000);\n        };\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, attract = container.actualOptions.interactivity.modes.attract;\n        if (!attract) {\n            return;\n        }\n        container.retina.attractModeDistance = attract.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, events = options.interactivity.events, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, clickEnabled = events.onClick.enable, clickMode = events.onClick.mode;\n        if (mouseMoveStatus && hoverEnabled && isInArray(\"attract\", hoverMode)) {\n            this._hoverAttract();\n        }\n        else if (clickEnabled && isInArray(\"attract\", clickMode)) {\n            this._clickAttract();\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events;\n        if ((!mouse.position || !events.onHover.enable) && (!mouse.clickPosition || !events.onClick.enable)) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode, clickMode = events.onClick.mode;\n        return isInArray(\"attract\", hoverMode) || isInArray(\"attract\", clickMode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.attract) {\n            options.attract = new Attract();\n        }\n        for (const source of sources) {\n            options.attract.load(source?.attract);\n        }\n    }\n    reset() {\n    }\n}\n","import { Attractor } from \"./Attractor\";\nexport async function loadExternalAttractInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalAttract\", (container) => new Attractor(engine, container), refresh);\n}\nexport * from \"./Options/Classes/Attract\";\nexport * from \"./Options/Interfaces/IAttract\";\n","export class Bounce {\n    constructor() {\n        this.distance = 200;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n    }\n}\n","import { Circle, ExternalInteractorBase, Rectangle, Vector, calculateBounds, circleBounce, circleBounceDataFromParticle, divModeExecute, isDivModeEnabled, isInArray, mouseMoveEvent, rectBounce, } from \"tsparticles-engine\";\nimport { Bounce } from \"./Options/Classes/Bounce\";\nexport class Bouncer extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this._processBounce = (position, radius, area) => {\n            const query = this.container.particles.quadTree.query(area, (p) => this.isEnabled(p));\n            for (const particle of query) {\n                if (area instanceof Circle) {\n                    circleBounce(circleBounceDataFromParticle(particle), {\n                        position,\n                        radius,\n                        mass: (radius ** 2 * Math.PI) / 2,\n                        velocity: Vector.origin,\n                        factor: Vector.origin,\n                    });\n                }\n                else if (area instanceof Rectangle) {\n                    rectBounce(particle, calculateBounds(position, radius));\n                }\n            }\n        };\n        this._processMouseBounce = () => {\n            const container = this.container, pxRatio = container.retina.pixelRatio, tolerance = 10 * pxRatio, mousePos = container.interactivity.mouse.position, radius = container.retina.bounceModeDistance;\n            if (!radius || radius < 0 || !mousePos) {\n                return;\n            }\n            this._processBounce(mousePos, radius, new Circle(mousePos.x, mousePos.y, radius + tolerance));\n        };\n        this._singleSelectorBounce = (selector, div) => {\n            const container = this.container, query = document.querySelectorAll(selector);\n            if (!query.length) {\n                return;\n            }\n            query.forEach((item) => {\n                const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                    x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                    y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n                }, radius = (elem.offsetWidth / 2) * pxRatio, tolerance = 10 * pxRatio, area = div.type === \"circle\"\n                    ? new Circle(pos.x, pos.y, radius + tolerance)\n                    : new Rectangle(elem.offsetLeft * pxRatio - tolerance, elem.offsetTop * pxRatio - tolerance, elem.offsetWidth * pxRatio + tolerance * 2, elem.offsetHeight * pxRatio + tolerance * 2);\n                this._processBounce(pos, radius, area);\n            });\n        };\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, bounce = container.actualOptions.interactivity.modes.bounce;\n        if (!bounce) {\n            return;\n        }\n        container.retina.bounceModeDistance = bounce.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, events = options.interactivity.events, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, divs = events.onDiv;\n        if (mouseMoveStatus && hoverEnabled && isInArray(\"bounce\", hoverMode)) {\n            this._processMouseBounce();\n        }\n        else {\n            divModeExecute(\"bounce\", divs, (selector, div) => this._singleSelectorBounce(selector, div));\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events, divs = events.onDiv;\n        return ((mouse.position && events.onHover.enable && isInArray(\"bounce\", events.onHover.mode)) ||\n            isDivModeEnabled(\"bounce\", divs));\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.bounce) {\n            options.bounce = new Bounce();\n        }\n        for (const source of sources) {\n            options.bounce.load(source?.bounce);\n        }\n    }\n    reset() {\n    }\n}\n","import { Bouncer } from \"./Bouncer\";\nexport async function loadExternalBounceInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalBounce\", (container) => new Bouncer(container), refresh);\n}\nexport * from \"./Options/Classes/Bounce\";\nexport * from \"./Options/Interfaces/IBounce\";\n","import { OptionsColor, executeOnSingleOrMultiple, isArray, } from \"tsparticles-engine\";\nexport class BubbleBase {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.mix = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.mix !== undefined) {\n            this.mix = data.mix;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        if (data.color !== undefined) {\n            const sourceColor = isArray(this.color) ? undefined : this.color;\n            this.color = executeOnSingleOrMultiple(data.color, (color) => {\n                return OptionsColor.create(sourceColor, color);\n            });\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, } from \"tsparticles-engine\";\nimport { BubbleBase } from \"./BubbleBase\";\nexport class BubbleDiv extends BubbleBase {\n    constructor() {\n        super();\n        this.selectors = [];\n    }\n    get ids() {\n        return executeOnSingleOrMultiple(this.selectors, (t) => t.replace(\"#\", \"\"));\n    }\n    set ids(value) {\n        this.selectors = executeOnSingleOrMultiple(value, (t) => `#${t}`);\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.ids !== undefined) {\n            this.ids = data.ids;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, } from \"tsparticles-engine\";\nimport { BubbleBase } from \"./BubbleBase\";\nimport { BubbleDiv } from \"./BubbleDiv\";\nexport class Bubble extends BubbleBase {\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        this.divs = executeOnSingleOrMultiple(data.divs, (div) => {\n            const tmp = new BubbleDiv();\n            tmp.load(div);\n            return tmp;\n        });\n    }\n}\n","import { clamp } from \"tsparticles-engine\";\nexport function calculateBubbleValue(particleValue, modeValue, optionsValue, ratio) {\n    if (modeValue >= optionsValue) {\n        const value = particleValue + (modeValue - optionsValue) * ratio;\n        return clamp(value, particleValue, modeValue);\n    }\n    else if (modeValue < optionsValue) {\n        const value = particleValue - (optionsValue - modeValue) * ratio;\n        return clamp(value, modeValue, particleValue);\n    }\n}\n","import { Circle, ExternalInteractorBase, Rectangle, colorMix, divMode, divModeExecute, getDistance, getRangeMax, isDivModeEnabled, isInArray, itemFromSingleOrMultiple, mouseLeaveEvent, mouseMoveEvent, rangeColorToHsl, rgbToHsl, } from \"tsparticles-engine\";\nimport { Bubble } from \"./Options/Classes/Bubble\";\nimport { calculateBubbleValue } from \"./Utils\";\nexport class Bubbler extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this._clickBubble = () => {\n            const container = this.container, options = container.actualOptions, mouseClickPos = container.interactivity.mouse.clickPosition, bubbleOptions = options.interactivity.modes.bubble;\n            if (!bubbleOptions || !mouseClickPos) {\n                return;\n            }\n            if (!container.bubble) {\n                container.bubble = {};\n            }\n            const distance = container.retina.bubbleModeDistance;\n            if (!distance || distance < 0) {\n                return;\n            }\n            const query = container.particles.quadTree.queryCircle(mouseClickPos, distance, (p) => this.isEnabled(p)), { bubble } = container;\n            for (const particle of query) {\n                if (!bubble.clicking) {\n                    continue;\n                }\n                particle.bubble.inRange = !bubble.durationEnd;\n                const pos = particle.getPosition(), distMouse = getDistance(pos, mouseClickPos), timeSpent = (new Date().getTime() - (container.interactivity.mouse.clickTime || 0)) / 1000;\n                if (timeSpent > bubbleOptions.duration) {\n                    bubble.durationEnd = true;\n                }\n                if (timeSpent > bubbleOptions.duration * 2) {\n                    bubble.clicking = false;\n                    bubble.durationEnd = false;\n                }\n                const sizeData = {\n                    bubbleObj: {\n                        optValue: container.retina.bubbleModeSize,\n                        value: particle.bubble.radius,\n                    },\n                    particlesObj: {\n                        optValue: getRangeMax(particle.options.size.value) * container.retina.pixelRatio,\n                        value: particle.size.value,\n                    },\n                    type: \"size\",\n                };\n                this._process(particle, distMouse, timeSpent, sizeData);\n                const opacityData = {\n                    bubbleObj: {\n                        optValue: bubbleOptions.opacity,\n                        value: particle.bubble.opacity,\n                    },\n                    particlesObj: {\n                        optValue: getRangeMax(particle.options.opacity.value),\n                        value: particle.opacity?.value ?? 1,\n                    },\n                    type: \"opacity\",\n                };\n                this._process(particle, distMouse, timeSpent, opacityData);\n                if (!bubble.durationEnd && distMouse <= distance) {\n                    this._hoverBubbleColor(particle, distMouse);\n                }\n                else {\n                    delete particle.bubble.color;\n                }\n            }\n        };\n        this._hoverBubble = () => {\n            const container = this.container, mousePos = container.interactivity.mouse.position, distance = container.retina.bubbleModeDistance;\n            if (!distance || distance < 0 || mousePos === undefined) {\n                return;\n            }\n            const query = container.particles.quadTree.queryCircle(mousePos, distance, (p) => this.isEnabled(p));\n            for (const particle of query) {\n                particle.bubble.inRange = true;\n                const pos = particle.getPosition(), pointDistance = getDistance(pos, mousePos), ratio = 1 - pointDistance / distance;\n                if (pointDistance <= distance) {\n                    if (ratio >= 0 && container.interactivity.status === mouseMoveEvent) {\n                        this._hoverBubbleSize(particle, ratio);\n                        this._hoverBubbleOpacity(particle, ratio);\n                        this._hoverBubbleColor(particle, ratio);\n                    }\n                }\n                else {\n                    this.reset(particle);\n                }\n                if (container.interactivity.status === mouseLeaveEvent) {\n                    this.reset(particle);\n                }\n            }\n        };\n        this._hoverBubbleColor = (particle, ratio, divBubble) => {\n            const options = this.container.actualOptions, bubbleOptions = divBubble ?? options.interactivity.modes.bubble;\n            if (!bubbleOptions) {\n                return;\n            }\n            if (!particle.bubble.finalColor) {\n                const modeColor = bubbleOptions.color;\n                if (!modeColor) {\n                    return;\n                }\n                const bubbleColor = itemFromSingleOrMultiple(modeColor);\n                particle.bubble.finalColor = rangeColorToHsl(bubbleColor);\n            }\n            if (!particle.bubble.finalColor) {\n                return;\n            }\n            if (bubbleOptions.mix) {\n                particle.bubble.color = undefined;\n                const pColor = particle.getFillColor();\n                particle.bubble.color = pColor\n                    ? rgbToHsl(colorMix(pColor, particle.bubble.finalColor, 1 - ratio, ratio))\n                    : particle.bubble.finalColor;\n            }\n            else {\n                particle.bubble.color = particle.bubble.finalColor;\n            }\n        };\n        this._hoverBubbleOpacity = (particle, ratio, divBubble) => {\n            const container = this.container, options = container.actualOptions, modeOpacity = divBubble?.opacity ?? options.interactivity.modes.bubble?.opacity;\n            if (!modeOpacity) {\n                return;\n            }\n            const optOpacity = particle.options.opacity.value, pOpacity = particle.opacity?.value ?? 1, opacity = calculateBubbleValue(pOpacity, modeOpacity, getRangeMax(optOpacity), ratio);\n            if (opacity !== undefined) {\n                particle.bubble.opacity = opacity;\n            }\n        };\n        this._hoverBubbleSize = (particle, ratio, divBubble) => {\n            const container = this.container, modeSize = divBubble?.size ? divBubble.size * container.retina.pixelRatio : container.retina.bubbleModeSize;\n            if (modeSize === undefined) {\n                return;\n            }\n            const optSize = getRangeMax(particle.options.size.value) * container.retina.pixelRatio, pSize = particle.size.value, size = calculateBubbleValue(pSize, modeSize, optSize, ratio);\n            if (size !== undefined) {\n                particle.bubble.radius = size;\n            }\n        };\n        this._process = (particle, distMouse, timeSpent, data) => {\n            const container = this.container, bubbleParam = data.bubbleObj.optValue, options = container.actualOptions, bubbleOptions = options.interactivity.modes.bubble;\n            if (!bubbleOptions || bubbleParam === undefined) {\n                return;\n            }\n            const bubbleDuration = bubbleOptions.duration, bubbleDistance = container.retina.bubbleModeDistance, particlesParam = data.particlesObj.optValue, pObjBubble = data.bubbleObj.value, pObj = data.particlesObj.value || 0, type = data.type;\n            if (!bubbleDistance || bubbleDistance < 0 || bubbleParam === particlesParam) {\n                return;\n            }\n            if (!container.bubble) {\n                container.bubble = {};\n            }\n            if (container.bubble.durationEnd) {\n                if (pObjBubble) {\n                    if (type === \"size\") {\n                        delete particle.bubble.radius;\n                    }\n                    if (type === \"opacity\") {\n                        delete particle.bubble.opacity;\n                    }\n                }\n            }\n            else {\n                if (distMouse <= bubbleDistance) {\n                    const obj = pObjBubble ?? pObj;\n                    if (obj !== bubbleParam) {\n                        const value = pObj - (timeSpent * (pObj - bubbleParam)) / bubbleDuration;\n                        if (type === \"size\") {\n                            particle.bubble.radius = value;\n                        }\n                        if (type === \"opacity\") {\n                            particle.bubble.opacity = value;\n                        }\n                    }\n                }\n                else {\n                    if (type === \"size\") {\n                        delete particle.bubble.radius;\n                    }\n                    if (type === \"opacity\") {\n                        delete particle.bubble.opacity;\n                    }\n                }\n            }\n        };\n        this._singleSelectorHover = (delta, selector, div) => {\n            const container = this.container, selectors = document.querySelectorAll(selector), bubble = container.actualOptions.interactivity.modes.bubble;\n            if (!bubble || !selectors.length) {\n                return;\n            }\n            selectors.forEach((item) => {\n                const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                    x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                    y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n                }, repulseRadius = (elem.offsetWidth / 2) * pxRatio, area = div.type === \"circle\"\n                    ? new Circle(pos.x, pos.y, repulseRadius)\n                    : new Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio), query = container.particles.quadTree.query(area, (p) => this.isEnabled(p));\n                for (const particle of query) {\n                    if (!area.contains(particle.getPosition())) {\n                        continue;\n                    }\n                    particle.bubble.inRange = true;\n                    const divs = bubble.divs, divBubble = divMode(divs, elem);\n                    if (!particle.bubble.div || particle.bubble.div !== elem) {\n                        this.clear(particle, delta, true);\n                        particle.bubble.div = elem;\n                    }\n                    this._hoverBubbleSize(particle, 1, divBubble);\n                    this._hoverBubbleOpacity(particle, 1, divBubble);\n                    this._hoverBubbleColor(particle, 1, divBubble);\n                }\n            });\n        };\n        if (!container.bubble) {\n            container.bubble = {};\n        }\n        this.handleClickMode = (mode) => {\n            if (mode !== \"bubble\") {\n                return;\n            }\n            if (!container.bubble) {\n                container.bubble = {};\n            }\n            container.bubble.clicking = true;\n        };\n    }\n    clear(particle, delta, force) {\n        if (particle.bubble.inRange && !force) {\n            return;\n        }\n        delete particle.bubble.div;\n        delete particle.bubble.opacity;\n        delete particle.bubble.radius;\n        delete particle.bubble.color;\n    }\n    init() {\n        const container = this.container, bubble = container.actualOptions.interactivity.modes.bubble;\n        if (!bubble) {\n            return;\n        }\n        container.retina.bubbleModeDistance = bubble.distance * container.retina.pixelRatio;\n        if (bubble.size !== undefined) {\n            container.retina.bubbleModeSize = bubble.size * container.retina.pixelRatio;\n        }\n    }\n    async interact(delta) {\n        const options = this.container.actualOptions, events = options.interactivity.events, onHover = events.onHover, onClick = events.onClick, hoverEnabled = onHover.enable, hoverMode = onHover.mode, clickEnabled = onClick.enable, clickMode = onClick.mode, divs = events.onDiv;\n        if (hoverEnabled && isInArray(\"bubble\", hoverMode)) {\n            this._hoverBubble();\n        }\n        else if (clickEnabled && isInArray(\"bubble\", clickMode)) {\n            this._clickBubble();\n        }\n        else {\n            divModeExecute(\"bubble\", divs, (selector, div) => this._singleSelectorHover(delta, selector, div));\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events, { onClick, onDiv, onHover } = events, divBubble = isDivModeEnabled(\"bubble\", onDiv);\n        if (!(divBubble || (onHover.enable && mouse.position) || (onClick.enable && mouse.clickPosition))) {\n            return false;\n        }\n        return isInArray(\"bubble\", onHover.mode) || isInArray(\"bubble\", onClick.mode) || divBubble;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.bubble) {\n            options.bubble = new Bubble();\n        }\n        for (const source of sources) {\n            options.bubble.load(source?.bubble);\n        }\n    }\n    reset(particle) {\n        particle.bubble.inRange = false;\n    }\n}\n","import { Bubbler } from \"./Bubbler\";\nexport async function loadExternalBubbleInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalBubble\", (container) => new Bubbler(container), refresh);\n}\nexport * from \"./Options/Classes/BubbleBase\";\nexport * from \"./Options/Classes/BubbleDiv\";\nexport * from \"./Options/Classes/Bubble\";\nexport * from \"./Options/Interfaces/IBubbleBase\";\nexport * from \"./Options/Interfaces/IBubbleDiv\";\nexport * from \"./Options/Interfaces/IBubble\";\n","export class ConnectLinks {\n    constructor() {\n        this.opacity = 0.5;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { ConnectLinks } from \"./ConnectLinks\";\nexport class Connect {\n    constructor() {\n        this.distance = 80;\n        this.links = new ConnectLinks();\n        this.radius = 60;\n    }\n    get lineLinked() {\n        return this.links;\n    }\n    set lineLinked(value) {\n        this.links = value;\n    }\n    get line_linked() {\n        return this.links;\n    }\n    set line_linked(value) {\n        this.links = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        this.links.load(data.links ?? data.lineLinked ?? data.line_linked);\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { colorMix, drawLine, getStyleFromHsl, getStyleFromRgb, } from \"tsparticles-engine\";\nexport function gradient(context, p1, p2, opacity) {\n    const gradStop = Math.floor(p2.getRadius() / p1.getRadius()), color1 = p1.getFillColor(), color2 = p2.getFillColor();\n    if (!color1 || !color2) {\n        return;\n    }\n    const sourcePos = p1.getPosition(), destPos = p2.getPosition(), midRgb = colorMix(color1, color2, p1.getRadius(), p2.getRadius()), grad = context.createLinearGradient(sourcePos.x, sourcePos.y, destPos.x, destPos.y);\n    grad.addColorStop(0, getStyleFromHsl(color1, opacity));\n    grad.addColorStop(gradStop > 1 ? 1 : gradStop, getStyleFromRgb(midRgb, opacity));\n    grad.addColorStop(1, getStyleFromHsl(color2, opacity));\n    return grad;\n}\nexport function drawConnectLine(context, width, lineStyle, begin, end) {\n    drawLine(context, begin, end);\n    context.lineWidth = width;\n    context.strokeStyle = lineStyle;\n    context.stroke();\n}\nexport function lineStyle(container, ctx, p1, p2) {\n    const options = container.actualOptions, connectOptions = options.interactivity.modes.connect;\n    if (!connectOptions) {\n        return;\n    }\n    return gradient(ctx, p1, p2, connectOptions.links.opacity);\n}\nexport function drawConnection(container, p1, p2) {\n    container.canvas.draw((ctx) => {\n        const ls = lineStyle(container, ctx, p1, p2);\n        if (!ls) {\n            return;\n        }\n        const pos1 = p1.getPosition(), pos2 = p2.getPosition();\n        drawConnectLine(ctx, p1.retina.linksWidth ?? 0, ls, pos1, pos2);\n    });\n}\n","import { ExternalInteractorBase, isInArray, } from \"tsparticles-engine\";\nimport { Connect } from \"./Options/Classes/Connect\";\nimport { drawConnection } from \"./Utils\";\nexport class Connector extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, connect = container.actualOptions.interactivity.modes.connect;\n        if (!connect) {\n            return;\n        }\n        container.retina.connectModeDistance = connect.distance * container.retina.pixelRatio;\n        container.retina.connectModeRadius = connect.radius * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions;\n        if (options.interactivity.events.onHover.enable && container.interactivity.status === \"pointermove\") {\n            const mousePos = container.interactivity.mouse.position;\n            if (!container.retina.connectModeDistance ||\n                container.retina.connectModeDistance < 0 ||\n                !container.retina.connectModeRadius ||\n                container.retina.connectModeRadius < 0 ||\n                !mousePos) {\n                return;\n            }\n            const distance = Math.abs(container.retina.connectModeRadius), query = container.particles.quadTree.queryCircle(mousePos, distance, (p) => this.isEnabled(p));\n            let i = 0;\n            for (const p1 of query) {\n                const pos1 = p1.getPosition();\n                for (const p2 of query.slice(i + 1)) {\n                    const pos2 = p2.getPosition(), distMax = Math.abs(container.retina.connectModeDistance), xDiff = Math.abs(pos1.x - pos2.x), yDiff = Math.abs(pos1.y - pos2.y);\n                    if (xDiff < distMax && yDiff < distMax) {\n                        drawConnection(container, p1, p2);\n                    }\n                }\n                ++i;\n            }\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? container.actualOptions.interactivity).events;\n        if (!(events.onHover.enable && mouse.position)) {\n            return false;\n        }\n        return isInArray(\"connect\", events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.connect) {\n            options.connect = new Connect();\n        }\n        for (const source of sources) {\n            options.connect.load(source?.connect);\n        }\n    }\n    reset() {\n    }\n}\n","import { Connector } from \"./Connector\";\nexport async function loadExternalConnectInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalConnect\", (container) => new Connector(container), refresh);\n}\nexport * from \"./Options/Classes/Connect\";\nexport * from \"./Options/Classes/ConnectLinks\";\nexport * from \"./Options/Interfaces/IConnect\";\nexport * from \"./Options/Interfaces/IConnectLinks\";\n","import { OptionsColor } from \"tsparticles-engine\";\nexport class GrabLinks {\n    constructor() {\n        this.blink = false;\n        this.consent = false;\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.blink !== undefined) {\n            this.blink = data.blink;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.consent !== undefined) {\n            this.consent = data.consent;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { GrabLinks } from \"./GrabLinks\";\nexport class Grab {\n    constructor() {\n        this.distance = 100;\n        this.links = new GrabLinks();\n    }\n    get lineLinked() {\n        return this.links;\n    }\n    set lineLinked(value) {\n        this.links = value;\n    }\n    get line_linked() {\n        return this.links;\n    }\n    set line_linked(value) {\n        this.links = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        this.links.load(data.links ?? data.lineLinked ?? data.line_linked);\n    }\n}\n","import { drawLine, getStyleFromRgb } from \"tsparticles-engine\";\nexport function drawGrabLine(context, width, begin, end, colorLine, opacity) {\n    drawLine(context, begin, end);\n    context.strokeStyle = getStyleFromRgb(colorLine, opacity);\n    context.lineWidth = width;\n    context.stroke();\n}\nexport function drawGrab(container, particle, lineColor, opacity, mousePos) {\n    container.canvas.draw((ctx) => {\n        const beginPos = particle.getPosition();\n        drawGrabLine(ctx, particle.retina.linksWidth ?? 0, beginPos, mousePos, lineColor, opacity);\n    });\n}\n","import { ExternalInteractorBase, getDistance, getLinkColor, getLinkRandomColor, isInArray, mouseMoveEvent, } from \"tsparticles-engine\";\nimport { Grab } from \"./Options/Classes/Grab\";\nimport { drawGrab } from \"./Utils\";\nexport class Grabber extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, grab = container.actualOptions.interactivity.modes.grab;\n        if (!grab) {\n            return;\n        }\n        container.retina.grabModeDistance = grab.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, interactivity = options.interactivity;\n        if (!interactivity.modes.grab ||\n            !interactivity.events.onHover.enable ||\n            container.interactivity.status !== mouseMoveEvent) {\n            return;\n        }\n        const mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const distance = container.retina.grabModeDistance;\n        if (!distance || distance < 0) {\n            return;\n        }\n        const query = container.particles.quadTree.queryCircle(mousePos, distance, (p) => this.isEnabled(p));\n        for (const particle of query) {\n            const pos = particle.getPosition(), pointDistance = getDistance(pos, mousePos);\n            if (pointDistance > distance) {\n                continue;\n            }\n            const grabLineOptions = interactivity.modes.grab.links, lineOpacity = grabLineOptions.opacity, opacityLine = lineOpacity - (pointDistance * lineOpacity) / distance;\n            if (opacityLine <= 0) {\n                continue;\n            }\n            const optColor = grabLineOptions.color ?? particle.options.links?.color;\n            if (!container.particles.grabLineColor && optColor) {\n                const linksOptions = interactivity.modes.grab.links;\n                container.particles.grabLineColor = getLinkRandomColor(optColor, linksOptions.blink, linksOptions.consent);\n            }\n            const colorLine = getLinkColor(particle, undefined, container.particles.grabLineColor);\n            if (!colorLine) {\n                continue;\n            }\n            drawGrab(container, particle, colorLine, opacityLine, mousePos);\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? container.actualOptions.interactivity).events;\n        return events.onHover.enable && !!mouse.position && isInArray(\"grab\", events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.grab) {\n            options.grab = new Grab();\n        }\n        for (const source of sources) {\n            options.grab.load(source?.grab);\n        }\n    }\n    reset() {\n    }\n}\n","import { Grabber } from \"./Grabber\";\nexport async function loadExternalGrabInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalGrab\", (container) => new Grabber(container), refresh);\n}\nexport * from \"./Options/Classes/Grab\";\nexport * from \"./Options/Classes/GrabLinks\";\nexport * from \"./Options/Interfaces/IGrab\";\nexport * from \"./Options/Interfaces/IGrabLinks\";\n","import { ExternalInteractorBase } from \"tsparticles-engine\";\nexport class Pauser extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            if (mode !== \"pause\") {\n                return;\n            }\n            const container = this.container;\n            if (container.getAnimationStatus()) {\n                container.pause();\n            }\n            else {\n                container.play();\n            }\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    reset() {\n    }\n}\n","import { Pauser } from \"./Pauser\";\nexport async function loadExternalPauseInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalPause\", (container) => new Pauser(container), refresh);\n}\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class Push {\n    constructor() {\n        this.default = true;\n        this.groups = [];\n        this.quantity = 4;\n    }\n    get particles_nb() {\n        return this.quantity;\n    }\n    set particles_nb(value) {\n        this.quantity = setRangeValue(value);\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.default !== undefined) {\n            this.default = data.default;\n        }\n        if (data.groups !== undefined) {\n            this.groups = data.groups.map((t) => t);\n        }\n        if (!this.groups.length) {\n            this.default = true;\n        }\n        const quantity = data.quantity ?? data.particles_nb;\n        if (quantity !== undefined) {\n            this.quantity = setRangeValue(quantity);\n        }\n    }\n}\n","import { ExternalInteractorBase, getRangeValue, itemFromArray, } from \"tsparticles-engine\";\nimport { Push } from \"./Options/Classes/Push\";\nexport class Pusher extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            if (mode !== \"push\") {\n                return;\n            }\n            const container = this.container, options = container.actualOptions, pushOptions = options.interactivity.modes.push;\n            if (!pushOptions) {\n                return;\n            }\n            const quantity = getRangeValue(pushOptions.quantity);\n            if (quantity <= 0) {\n                return;\n            }\n            const group = itemFromArray([undefined, ...pushOptions.groups]), groupOptions = group !== undefined ? container.actualOptions.particles.groups[group] : undefined;\n            container.particles.push(quantity, container.interactivity.mouse, groupOptions, group);\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.push) {\n            options.push = new Push();\n        }\n        for (const source of sources) {\n            options.push.load(source?.push);\n        }\n    }\n    reset() {\n    }\n}\n","import { Pusher } from \"./Pusher\";\nexport async function loadExternalPushInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalPush\", (container) => new Pusher(container), refresh);\n}\nexport * from \"./Options/Classes/Push\";\nexport * from \"./Options/Interfaces/IPush\";\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class Remove {\n    constructor() {\n        this.quantity = 2;\n    }\n    get particles_nb() {\n        return this.quantity;\n    }\n    set particles_nb(value) {\n        this.quantity = setRangeValue(value);\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        const quantity = data.quantity ?? data.particles_nb;\n        if (quantity !== undefined) {\n            this.quantity = setRangeValue(quantity);\n        }\n    }\n}\n","import { ExternalInteractorBase, getRangeValue, } from \"tsparticles-engine\";\nimport { Remove } from \"./Options/Classes/Remove\";\nexport class Remover extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            const container = this.container, options = container.actualOptions;\n            if (!options.interactivity.modes.remove || mode !== \"remove\") {\n                return;\n            }\n            const removeNb = getRangeValue(options.interactivity.modes.remove.quantity);\n            container.particles.removeQuantity(removeNb);\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.remove) {\n            options.remove = new Remove();\n        }\n        for (const source of sources) {\n            options.remove.load(source?.remove);\n        }\n    }\n    reset() {\n    }\n}\n","import { Remover } from \"./Remover\";\nexport async function loadExternalRemoveInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalRemove\", (container) => new Remover(container), refresh);\n}\nexport * from \"./Options/Classes/Remove\";\nexport * from \"./Options/Interfaces/IRemove\";\n","export class RepulseBase {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.factor = 100;\n        this.speed = 1;\n        this.maxSpeed = 50;\n        this.easing = \"ease-out-quad\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.easing !== undefined) {\n            this.easing = data.easing;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = data.maxSpeed;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, } from \"tsparticles-engine\";\nimport { RepulseBase } from \"./RepulseBase\";\nexport class RepulseDiv extends RepulseBase {\n    constructor() {\n        super();\n        this.selectors = [];\n    }\n    get ids() {\n        return executeOnSingleOrMultiple(this.selectors, (t) => t.replace(\"#\", \"\"));\n    }\n    set ids(value) {\n        this.selectors = executeOnSingleOrMultiple(value, (t) => `#${t}`);\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.ids !== undefined) {\n            this.ids = data.ids;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, } from \"tsparticles-engine\";\nimport { RepulseBase } from \"./RepulseBase\";\nimport { RepulseDiv } from \"./RepulseDiv\";\nexport class Repulse extends RepulseBase {\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        this.divs = executeOnSingleOrMultiple(data.divs, (div) => {\n            const tmp = new RepulseDiv();\n            tmp.load(div);\n            return tmp;\n        });\n    }\n}\n","import { Circle, ExternalInteractorBase, Rectangle, Vector, clamp, divMode, divModeExecute, getDistances, getEasing, isDivModeEnabled, isInArray, mouseMoveEvent, } from \"tsparticles-engine\";\nimport { Repulse } from \"./Options/Classes/Repulse\";\nexport class Repulser extends ExternalInteractorBase {\n    constructor(engine, container) {\n        super(container);\n        this._clickRepulse = () => {\n            const container = this.container, repulseOptions = container.actualOptions.interactivity.modes.repulse;\n            if (!repulseOptions) {\n                return;\n            }\n            const repulse = container.repulse || { particles: [] };\n            if (!repulse.finish) {\n                if (!repulse.count) {\n                    repulse.count = 0;\n                }\n                repulse.count++;\n                if (repulse.count === container.particles.count) {\n                    repulse.finish = true;\n                }\n            }\n            if (repulse.clicking) {\n                const repulseDistance = container.retina.repulseModeDistance;\n                if (!repulseDistance || repulseDistance < 0) {\n                    return;\n                }\n                const repulseRadius = Math.pow(repulseDistance / 6, 3), mouseClickPos = container.interactivity.mouse.clickPosition;\n                if (mouseClickPos === undefined) {\n                    return;\n                }\n                const range = new Circle(mouseClickPos.x, mouseClickPos.y, repulseRadius), query = container.particles.quadTree.query(range, (p) => this.isEnabled(p));\n                for (const particle of query) {\n                    const { dx, dy, distance } = getDistances(mouseClickPos, particle.position), d = distance ** 2, velocity = repulseOptions.speed, force = (-repulseRadius * velocity) / d;\n                    if (d <= repulseRadius) {\n                        repulse.particles.push(particle);\n                        const vect = Vector.create(dx, dy);\n                        vect.length = force;\n                        particle.velocity.setTo(vect);\n                    }\n                }\n            }\n            else if (repulse.clicking === false) {\n                for (const particle of repulse.particles) {\n                    particle.velocity.setTo(particle.initialVelocity);\n                }\n                repulse.particles = [];\n            }\n        };\n        this._hoverRepulse = () => {\n            const container = this.container, mousePos = container.interactivity.mouse.position, repulseRadius = container.retina.repulseModeDistance;\n            if (!repulseRadius || repulseRadius < 0 || !mousePos) {\n                return;\n            }\n            this._processRepulse(mousePos, repulseRadius, new Circle(mousePos.x, mousePos.y, repulseRadius));\n        };\n        this._processRepulse = (position, repulseRadius, area, divRepulse) => {\n            const container = this.container, query = container.particles.quadTree.query(area, (p) => this.isEnabled(p)), repulseOptions = container.actualOptions.interactivity.modes.repulse;\n            if (!repulseOptions) {\n                return;\n            }\n            for (const particle of query) {\n                const { dx, dy, distance } = getDistances(particle.position, position), velocity = (divRepulse?.speed ?? repulseOptions.speed) * repulseOptions.factor, repulseFactor = clamp(getEasing(repulseOptions.easing)(1 - distance / repulseRadius) * velocity, 0, repulseOptions.maxSpeed), normVec = Vector.create(distance === 0 ? velocity : (dx / distance) * repulseFactor, distance === 0 ? velocity : (dy / distance) * repulseFactor);\n                particle.position.addTo(normVec);\n            }\n        };\n        this._singleSelectorRepulse = (selector, div) => {\n            const container = this.container, repulse = container.actualOptions.interactivity.modes.repulse;\n            if (!repulse) {\n                return;\n            }\n            const query = document.querySelectorAll(selector);\n            if (!query.length) {\n                return;\n            }\n            query.forEach((item) => {\n                const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                    x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                    y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n                }, repulseRadius = (elem.offsetWidth / 2) * pxRatio, area = div.type === \"circle\"\n                    ? new Circle(pos.x, pos.y, repulseRadius)\n                    : new Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio), divs = repulse.divs, divRepulse = divMode(divs, elem);\n                this._processRepulse(pos, repulseRadius, area, divRepulse);\n            });\n        };\n        this._engine = engine;\n        if (!container.repulse) {\n            container.repulse = { particles: [] };\n        }\n        this.handleClickMode = (mode) => {\n            const options = this.container.actualOptions, repulseOpts = options.interactivity.modes.repulse;\n            if (!repulseOpts || mode !== \"repulse\") {\n                return;\n            }\n            if (!container.repulse) {\n                container.repulse = { particles: [] };\n            }\n            const repulse = container.repulse;\n            repulse.clicking = true;\n            repulse.count = 0;\n            for (const particle of container.repulse.particles) {\n                if (!this.isEnabled(particle)) {\n                    continue;\n                }\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            repulse.particles = [];\n            repulse.finish = false;\n            setTimeout(() => {\n                if (container.destroyed) {\n                    return;\n                }\n                repulse.clicking = false;\n            }, repulseOpts.duration * 1000);\n        };\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, repulse = container.actualOptions.interactivity.modes.repulse;\n        if (!repulse) {\n            return;\n        }\n        container.retina.repulseModeDistance = repulse.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, events = options.interactivity.events, hover = events.onHover, hoverEnabled = hover.enable, hoverMode = hover.mode, click = events.onClick, clickEnabled = click.enable, clickMode = click.mode, divs = events.onDiv;\n        if (mouseMoveStatus && hoverEnabled && isInArray(\"repulse\", hoverMode)) {\n            this._hoverRepulse();\n        }\n        else if (clickEnabled && isInArray(\"repulse\", clickMode)) {\n            this._clickRepulse();\n        }\n        else {\n            divModeExecute(\"repulse\", divs, (selector, div) => this._singleSelectorRepulse(selector, div));\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events, divs = events.onDiv, hover = events.onHover, click = events.onClick, divRepulse = isDivModeEnabled(\"repulse\", divs);\n        if (!(divRepulse || (hover.enable && mouse.position) || (click.enable && mouse.clickPosition))) {\n            return false;\n        }\n        const hoverMode = hover.mode, clickMode = click.mode;\n        return isInArray(\"repulse\", hoverMode) || isInArray(\"repulse\", clickMode) || divRepulse;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.repulse) {\n            options.repulse = new Repulse();\n        }\n        for (const source of sources) {\n            options.repulse.load(source?.repulse);\n        }\n    }\n    reset() {\n    }\n}\n","import { Repulser } from \"./Repulser\";\nexport async function loadExternalRepulseInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalRepulse\", (container) => new Repulser(engine, container), refresh);\n}\nexport * from \"./Options/Classes/RepulseBase\";\nexport * from \"./Options/Classes/RepulseDiv\";\nexport * from \"./Options/Classes/Repulse\";\nexport * from \"./Options/Interfaces/IRepulseBase\";\nexport * from \"./Options/Interfaces/IRepulseDiv\";\nexport * from \"./Options/Interfaces/IRepulse\";\n","export class Slow {\n    constructor() {\n        this.factor = 3;\n        this.radius = 200;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { ExternalInteractorBase, getDistance, isInArray, } from \"tsparticles-engine\";\nimport { Slow } from \"./Options/Classes/Slow\";\nexport class Slower extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear(particle, delta, force) {\n        if (particle.slow.inRange && !force) {\n            return;\n        }\n        particle.slow.factor = 1;\n    }\n    init() {\n        const container = this.container, slow = container.actualOptions.interactivity.modes.slow;\n        if (!slow) {\n            return;\n        }\n        container.retina.slowModeRadius = slow.radius * container.retina.pixelRatio;\n    }\n    async interact() {\n    }\n    isEnabled(particle) {\n        const container = this.container, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? container.actualOptions.interactivity).events;\n        return events.onHover.enable && !!mouse.position && isInArray(\"slow\", events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.slow) {\n            options.slow = new Slow();\n        }\n        for (const source of sources) {\n            options.slow.load(source?.slow);\n        }\n    }\n    reset(particle) {\n        particle.slow.inRange = false;\n        const container = this.container, options = container.actualOptions, mousePos = container.interactivity.mouse.position, radius = container.retina.slowModeRadius, slowOptions = options.interactivity.modes.slow;\n        if (!slowOptions || !radius || radius < 0 || !mousePos) {\n            return;\n        }\n        const particlePos = particle.getPosition(), dist = getDistance(mousePos, particlePos), proximityFactor = dist / radius, slowFactor = slowOptions.factor, { slow } = particle;\n        if (dist > radius) {\n            return;\n        }\n        slow.inRange = true;\n        slow.factor = proximityFactor / slowFactor;\n    }\n}\n","import { Slower } from \"./Slower\";\nexport async function loadExternalSlowInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalSlow\", (container) => new Slower(container), refresh);\n}\nexport * from \"./Options/Classes/Slow\";\nexport * from \"./Options/Interfaces/ISlow\";\n","export const InterlaceOffsets = [0, 4, 2, 1];\nexport const InterlaceSteps = [8, 8, 4, 2];\n","export class ByteStream {\n    constructor(bytes) {\n        this.pos = 0;\n        this.data = new Uint8ClampedArray(bytes);\n    }\n    getString(count) {\n        const slice = this.data.slice(this.pos, this.pos + count);\n        this.pos += slice.length;\n        return slice.reduce((acc, curr) => acc + String.fromCharCode(curr), \"\");\n    }\n    nextByte() {\n        return this.data[this.pos++];\n    }\n    nextTwoBytes() {\n        this.pos += 2;\n        return this.data[this.pos - 2] + (this.data[this.pos - 1] << 8);\n    }\n    readSubBlocks() {\n        let blockString = \"\", size = 0;\n        do {\n            size = this.data[this.pos++];\n            for (let count = size; --count >= 0; blockString += String.fromCharCode(this.data[this.pos++])) {\n            }\n        } while (size !== 0);\n        return blockString;\n    }\n    readSubBlocksBin() {\n        let size = 0, len = 0;\n        for (let offset = 0; (size = this.data[this.pos + offset]) !== 0; offset += size + 1) {\n            len += size;\n        }\n        const blockData = new Uint8Array(len);\n        for (let i = 0; (size = this.data[this.pos++]) !== 0;) {\n            for (let count = size; --count >= 0; blockData[i++] = this.data[this.pos++]) {\n            }\n        }\n        return blockData;\n    }\n    skipSubBlocks() {\n        for (; this.data[this.pos] !== 0; this.pos += this.data[this.pos] + 1) {\n        }\n        this.pos++;\n    }\n}\n","import { InterlaceOffsets, InterlaceSteps } from \"./Constants\";\nimport { ByteStream } from \"./ByteStream\";\nfunction parseColorTable(byteStream, count) {\n    const colors = [];\n    for (let i = 0; i < count; i++) {\n        colors.push({\n            r: byteStream.data[byteStream.pos],\n            g: byteStream.data[byteStream.pos + 1],\n            b: byteStream.data[byteStream.pos + 2],\n        });\n        byteStream.pos += 3;\n    }\n    return colors;\n}\nasync function parseExtensionBlock(byteStream, gif, getFrameIndex, getTransparencyIndex) {\n    switch (byteStream.nextByte()) {\n        case 249: {\n            const frame = gif.frames[getFrameIndex(false)];\n            byteStream.pos++;\n            const packedByte = byteStream.nextByte();\n            frame.GCreserved = (packedByte & 0xe0) >>> 5;\n            frame.disposalMethod = (packedByte & 0x1c) >>> 2;\n            frame.userInputDelayFlag = (packedByte & 2) === 2;\n            const transparencyFlag = (packedByte & 1) === 1;\n            frame.delayTime = byteStream.nextTwoBytes() * 0xa;\n            const transparencyIndex = byteStream.nextByte();\n            if (transparencyFlag) {\n                getTransparencyIndex(transparencyIndex);\n            }\n            byteStream.pos++;\n            break;\n        }\n        case 255: {\n            byteStream.pos++;\n            const applicationExtension = {\n                identifier: byteStream.getString(8),\n                authenticationCode: byteStream.getString(3),\n                data: byteStream.readSubBlocksBin(),\n            };\n            gif.applicationExtensions.push(applicationExtension);\n            break;\n        }\n        case 254: {\n            gif.comments.push([getFrameIndex(false), byteStream.readSubBlocks()]);\n            break;\n        }\n        case 1: {\n            if (gif.globalColorTable.length === 0) {\n                throw new EvalError(\"plain text extension without global color table\");\n            }\n            byteStream.pos++;\n            gif.frames[getFrameIndex(false)].plainTextData = {\n                left: byteStream.nextTwoBytes(),\n                top: byteStream.nextTwoBytes(),\n                width: byteStream.nextTwoBytes(),\n                height: byteStream.nextTwoBytes(),\n                charSize: {\n                    width: byteStream.nextTwoBytes(),\n                    height: byteStream.nextTwoBytes(),\n                },\n                foregroundColor: byteStream.nextByte(),\n                backgroundColor: byteStream.nextByte(),\n                text: byteStream.readSubBlocks(),\n            };\n            break;\n        }\n        default:\n            byteStream.skipSubBlocks();\n            break;\n    }\n}\nasync function parseImageBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback) {\n    const frame = gif.frames[getFrameIndex(true)];\n    frame.left = byteStream.nextTwoBytes();\n    frame.top = byteStream.nextTwoBytes();\n    frame.width = byteStream.nextTwoBytes();\n    frame.height = byteStream.nextTwoBytes();\n    const packedByte = byteStream.nextByte(), localColorTableFlag = (packedByte & 0x80) === 0x80, interlacedFlag = (packedByte & 0x40) === 0x40;\n    frame.sortFlag = (packedByte & 0x20) === 0x20;\n    frame.reserved = (packedByte & 0x18) >>> 3;\n    const localColorCount = 1 << ((packedByte & 7) + 1);\n    if (localColorTableFlag) {\n        frame.localColorTable = parseColorTable(byteStream, localColorCount);\n    }\n    const getColor = (index) => {\n        const { r, g, b } = (localColorTableFlag ? frame.localColorTable : gif.globalColorTable)[index];\n        return { r, g, b, a: index === getTransparencyIndex(null) ? (avgAlpha ? ~~((r + g + b) / 3) : 0) : 255 };\n    };\n    const image = (() => {\n        try {\n            return new ImageData(frame.width, frame.height, { colorSpace: \"srgb\" });\n        }\n        catch (error) {\n            if (error instanceof DOMException && error.name === \"IndexSizeError\") {\n                return null;\n            }\n            throw error;\n        }\n    })();\n    if (image == null) {\n        throw new EvalError(\"GIF frame size is to large\");\n    }\n    const minCodeSize = byteStream.nextByte(), imageData = byteStream.readSubBlocksBin(), clearCode = 1 << minCodeSize;\n    const readBits = (pos, len) => {\n        const bytePos = pos >>> 3, bitPos = pos & 7;\n        return (((imageData[bytePos] + (imageData[bytePos + 1] << 8) + (imageData[bytePos + 2] << 16)) &\n            (((1 << len) - 1) << bitPos)) >>>\n            bitPos);\n    };\n    if (interlacedFlag) {\n        for (let code = 0, size = minCodeSize + 1, pos = 0, dic = [[0]], pass = 0; pass < 4; pass++) {\n            if (InterlaceOffsets[pass] < frame.height) {\n                for (let pixelPos = 0, lineIndex = 0;;) {\n                    const last = code;\n                    code = readBits(pos, size);\n                    pos += size + 1;\n                    if (code === clearCode) {\n                        size = minCodeSize + 1;\n                        dic.length = clearCode + 2;\n                        for (let i = 0; i < dic.length; i++) {\n                            dic[i] = i < clearCode ? [i] : [];\n                        }\n                    }\n                    else {\n                        if (code >= dic.length) {\n                            dic.push(dic[last].concat(dic[last][0]));\n                        }\n                        else if (last !== clearCode) {\n                            dic.push(dic[last].concat(dic[code][0]));\n                        }\n                        for (let i = 0; i < dic[code].length; i++) {\n                            const { r, g, b, a } = getColor(dic[code][i]);\n                            image.data.set([r, g, b, a], InterlaceOffsets[pass] * frame.width +\n                                InterlaceSteps[pass] * lineIndex +\n                                (pixelPos % (frame.width * 4)));\n                            pixelPos += 4;\n                        }\n                        if (dic.length === 1 << size && size < 0xc) {\n                            size++;\n                        }\n                    }\n                    if (pixelPos === frame.width * 4 * (lineIndex + 1)) {\n                        lineIndex++;\n                        if (InterlaceOffsets[pass] + InterlaceSteps[pass] * lineIndex >= frame.height) {\n                            break;\n                        }\n                    }\n                }\n            }\n            progressCallback?.(byteStream.pos / (byteStream.data.length - 1), getFrameIndex(false) + 1, image, { x: frame.left, y: frame.top }, { width: gif.width, height: gif.height });\n        }\n        frame.image = image;\n        frame.bitmap = await createImageBitmap(image);\n    }\n    else {\n        for (let code = 0, size = minCodeSize + 1, pos = 0, dic = [[0]], pixelPos = -4;;) {\n            const last = code;\n            code = readBits(pos, size);\n            pos += size;\n            if (code === clearCode) {\n                size = minCodeSize + 1;\n                dic.length = clearCode + 2;\n                for (let i = 0; i < dic.length; i++) {\n                    dic[i] = i < clearCode ? [i] : [];\n                }\n            }\n            else {\n                if (code === clearCode + 1) {\n                    break;\n                }\n                if (code >= dic.length) {\n                    dic.push(dic[last].concat(dic[last][0]));\n                }\n                else if (last !== clearCode) {\n                    dic.push(dic[last].concat(dic[code][0]));\n                }\n                for (let i = 0; i < dic[code].length; i++) {\n                    const { r, g, b, a } = getColor(dic[code][i]);\n                    image.data.set([r, g, b, a], (pixelPos += 4));\n                }\n                if (dic.length >= 1 << size && size < 0xc) {\n                    size++;\n                }\n            }\n        }\n        frame.image = image;\n        frame.bitmap = await createImageBitmap(image);\n        progressCallback?.((byteStream.pos + 1) / byteStream.data.length, getFrameIndex(false) + 1, frame.image, { x: frame.left, y: frame.top }, { width: gif.width, height: gif.height });\n    }\n}\nasync function parseBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback) {\n    switch (byteStream.nextByte()) {\n        case 59:\n            return true;\n        case 44:\n            await parseImageBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback);\n            break;\n        case 33:\n            await parseExtensionBlock(byteStream, gif, getFrameIndex, getTransparencyIndex);\n            break;\n        default:\n            throw new EvalError(\"undefined block found\");\n    }\n    return false;\n}\nexport function getGIFLoopAmount(gif) {\n    for (const extension of gif.applicationExtensions) {\n        if (extension.identifier + extension.authenticationCode !== \"NETSCAPE2.0\") {\n            continue;\n        }\n        return extension.data[1] + (extension.data[2] << 8);\n    }\n    return NaN;\n}\nexport async function decodeGIF(gifURL, progressCallback, avgAlpha) {\n    if (!avgAlpha)\n        avgAlpha = false;\n    const res = await fetch(gifURL);\n    if (!res.ok && res.status === 404) {\n        throw new EvalError(\"file not found\");\n    }\n    const buffer = await res.arrayBuffer();\n    const gif = {\n        width: 0,\n        height: 0,\n        totalTime: 0,\n        colorRes: 0,\n        pixelAspectRatio: 0,\n        frames: [],\n        sortFlag: false,\n        globalColorTable: [],\n        backgroundImage: new ImageData(1, 1, { colorSpace: \"srgb\" }),\n        comments: [],\n        applicationExtensions: [],\n    }, byteStream = new ByteStream(new Uint8ClampedArray(buffer));\n    if (byteStream.getString(6) !== \"GIF89a\") {\n        throw new Error(\"not a supported GIF file\");\n    }\n    gif.width = byteStream.nextTwoBytes();\n    gif.height = byteStream.nextTwoBytes();\n    const packedByte = byteStream.nextByte(), globalColorTableFlag = (packedByte & 0x80) === 0x80;\n    gif.colorRes = (packedByte & 0x70) >>> 4;\n    gif.sortFlag = (packedByte & 8) === 8;\n    const globalColorCount = 1 << ((packedByte & 7) + 1), backgroundColorIndex = byteStream.nextByte();\n    gif.pixelAspectRatio = byteStream.nextByte();\n    if (gif.pixelAspectRatio !== 0) {\n        gif.pixelAspectRatio = (gif.pixelAspectRatio + 0xf) / 0x40;\n    }\n    if (globalColorTableFlag) {\n        gif.globalColorTable = parseColorTable(byteStream, globalColorCount);\n    }\n    const backgroundImage = (() => {\n        try {\n            return new ImageData(gif.width, gif.height, { colorSpace: \"srgb\" });\n        }\n        catch (error) {\n            if (error instanceof DOMException && error.name === \"IndexSizeError\") {\n                return null;\n            }\n            throw error;\n        }\n    })();\n    if (backgroundImage == null) {\n        throw new Error(\"GIF frame size is to large\");\n    }\n    const { r, g, b } = gif.globalColorTable[backgroundColorIndex];\n    backgroundImage.data.set(globalColorTableFlag ? [r, g, b, 255] : [0, 0, 0, 0]);\n    for (let i = 4; i < backgroundImage.data.length; i *= 2) {\n        backgroundImage.data.copyWithin(i, 0, i);\n    }\n    gif.backgroundImage = backgroundImage;\n    let frameIndex = -1, incrementFrameIndex = true, transparencyIndex = -1;\n    const getframeIndex = (increment) => {\n        if (increment) {\n            incrementFrameIndex = true;\n        }\n        return frameIndex;\n    };\n    const getTransparencyIndex = (newValue) => {\n        if (newValue != null) {\n            transparencyIndex = newValue;\n        }\n        return transparencyIndex;\n    };\n    try {\n        do {\n            if (incrementFrameIndex) {\n                gif.frames.push({\n                    left: 0,\n                    top: 0,\n                    width: 0,\n                    height: 0,\n                    disposalMethod: 0,\n                    image: new ImageData(1, 1, { colorSpace: \"srgb\" }),\n                    plainTextData: null,\n                    userInputDelayFlag: false,\n                    delayTime: 0,\n                    sortFlag: false,\n                    localColorTable: [],\n                    reserved: 0,\n                    GCreserved: 0,\n                });\n                frameIndex++;\n                transparencyIndex = -1;\n                incrementFrameIndex = false;\n            }\n        } while (!(await parseBlock(byteStream, gif, avgAlpha, getframeIndex, getTransparencyIndex, progressCallback)));\n        gif.frames.length--;\n        for (const frame of gif.frames) {\n            if (frame.userInputDelayFlag && frame.delayTime === 0) {\n                gif.totalTime = Infinity;\n                break;\n            }\n            gif.totalTime += frame.delayTime;\n        }\n        return gif;\n    }\n    catch (error) {\n        if (error instanceof EvalError) {\n            throw new Error(`error while parsing frame ${frameIndex} \"${error.message}\"`);\n        }\n        throw error;\n    }\n}\n","import { errorPrefix, getLogger, getStyleFromHsl } from \"tsparticles-engine\";\nimport { decodeGIF, getGIFLoopAmount } from \"./GifUtils/Utils\";\nconst currentColorRegex = /(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d.]+%?\\))|currentcolor/gi;\nfunction replaceColorSvg(imageShape, color, opacity) {\n    const { svgData } = imageShape;\n    if (!svgData) {\n        return \"\";\n    }\n    const colorStyle = getStyleFromHsl(color, opacity);\n    if (svgData.includes(\"fill\")) {\n        return svgData.replace(currentColorRegex, () => colorStyle);\n    }\n    const preFillIndex = svgData.indexOf(\">\");\n    return `${svgData.substring(0, preFillIndex)} fill=\"${colorStyle}\"${svgData.substring(preFillIndex)}`;\n}\nexport async function loadImage(image) {\n    return new Promise((resolve) => {\n        image.loading = true;\n        const img = new Image();\n        image.element = img;\n        img.addEventListener(\"load\", () => {\n            image.loading = false;\n            resolve();\n        });\n        img.addEventListener(\"error\", () => {\n            image.element = undefined;\n            image.error = true;\n            image.loading = false;\n            getLogger().error(`${errorPrefix} loading image: ${image.source}`);\n            resolve();\n        });\n        img.src = image.source;\n    });\n}\nexport async function loadGifImage(image) {\n    if (image.type !== \"gif\") {\n        await loadImage(image);\n        return;\n    }\n    image.loading = true;\n    try {\n        image.gifData = await decodeGIF(image.source);\n        image.gifLoopCount = getGIFLoopAmount(image.gifData) ?? 0;\n        if (image.gifLoopCount === 0) {\n            image.gifLoopCount = Infinity;\n        }\n    }\n    catch {\n        image.error = true;\n    }\n    image.loading = false;\n}\nexport async function downloadSvgImage(image) {\n    if (image.type !== \"svg\") {\n        await loadImage(image);\n        return;\n    }\n    image.loading = true;\n    const response = await fetch(image.source);\n    if (!response.ok) {\n        getLogger().error(`${errorPrefix} Image not found`);\n        image.error = true;\n    }\n    else {\n        image.svgData = await response.text();\n    }\n    image.loading = false;\n}\nexport function replaceImageColor(image, imageData, color, particle) {\n    const svgColoredData = replaceColorSvg(image, color, particle.opacity?.value ?? 1), imageRes = {\n        color,\n        gif: imageData.gif,\n        data: {\n            ...image,\n            svgData: svgColoredData,\n        },\n        loaded: false,\n        ratio: imageData.width / imageData.height,\n        replaceColor: imageData.replaceColor ?? imageData.replace_color,\n        source: imageData.src,\n    };\n    return new Promise((resolve) => {\n        const svg = new Blob([svgColoredData], { type: \"image/svg+xml\" }), domUrl = URL || window.URL || window.webkitURL || window, url = domUrl.createObjectURL(svg), img = new Image();\n        img.addEventListener(\"load\", () => {\n            imageRes.loaded = true;\n            imageRes.element = img;\n            resolve(imageRes);\n            domUrl.revokeObjectURL(url);\n        });\n        img.addEventListener(\"error\", async () => {\n            domUrl.revokeObjectURL(url);\n            const img2 = {\n                ...image,\n                error: false,\n                loading: true,\n            };\n            await loadImage(img2);\n            imageRes.loaded = true;\n            imageRes.element = img2.element;\n            resolve(imageRes);\n        });\n        img.src = url;\n    });\n}\n","import { errorPrefix } from \"tsparticles-engine\";\nimport { replaceImageColor } from \"./Utils\";\nexport class ImageDrawer {\n    constructor(engine) {\n        this.loadImageShape = async (imageShape) => {\n            if (!this._engine.loadImage) {\n                throw new Error(`${errorPrefix} image shape not initialized`);\n            }\n            await this._engine.loadImage({\n                gif: imageShape.gif,\n                name: imageShape.name,\n                replaceColor: imageShape.replaceColor ?? imageShape.replace_color ?? false,\n                src: imageShape.src,\n            });\n        };\n        this._engine = engine;\n    }\n    addImage(image) {\n        if (!this._engine.images) {\n            this._engine.images = [];\n        }\n        this._engine.images.push(image);\n    }\n    draw(context, particle, radius, opacity, delta) {\n        const image = particle.image, element = image?.element;\n        if (!image) {\n            return;\n        }\n        context.globalAlpha = opacity;\n        if (image.gif && image.gifData) {\n            const offscreenCanvas = new OffscreenCanvas(image.gifData.width, image.gifData.height), offscreenContext = offscreenCanvas.getContext(\"2d\");\n            if (!offscreenContext) {\n                throw new Error(\"could not create offscreen canvas context\");\n            }\n            offscreenContext.imageSmoothingQuality = \"low\";\n            offscreenContext.imageSmoothingEnabled = false;\n            offscreenContext.clearRect(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n            if (particle.gifLoopCount === undefined) {\n                particle.gifLoopCount = image.gifLoopCount ?? 0;\n            }\n            let frameIndex = particle.gifFrame ?? 0;\n            const pos = { x: -image.gifData.width * 0.5, y: -image.gifData.height * 0.5 }, frame = image.gifData.frames[frameIndex];\n            if (particle.gifTime === undefined) {\n                particle.gifTime = 0;\n            }\n            if (!frame.bitmap) {\n                return;\n            }\n            context.scale(radius / image.gifData.width, radius / image.gifData.height);\n            switch (frame.disposalMethod) {\n                case 4:\n                case 5:\n                case 6:\n                case 7:\n                case 0:\n                    offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n                    context.drawImage(offscreenCanvas, pos.x, pos.y);\n                    offscreenContext.clearRect(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n                    break;\n                case 1:\n                    offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n                    context.drawImage(offscreenCanvas, pos.x, pos.y);\n                    break;\n                case 2:\n                    offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n                    context.drawImage(offscreenCanvas, pos.x, pos.y);\n                    offscreenContext.clearRect(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n                    if (image.gifData.globalColorTable.length === 0) {\n                        offscreenContext.putImageData(image.gifData.frames[0].image, pos.x + frame.left, pos.y + frame.top);\n                    }\n                    else {\n                        offscreenContext.putImageData(image.gifData.backgroundImage, pos.x, pos.y);\n                    }\n                    break;\n                case 3:\n                    {\n                        const previousImageData = offscreenContext.getImageData(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n                        offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n                        context.drawImage(offscreenCanvas, pos.x, pos.y);\n                        offscreenContext.clearRect(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n                        offscreenContext.putImageData(previousImageData, 0, 0);\n                    }\n                    break;\n            }\n            particle.gifTime += delta.value;\n            if (particle.gifTime > frame.delayTime) {\n                particle.gifTime -= frame.delayTime;\n                if (++frameIndex >= image.gifData.frames.length) {\n                    if (--particle.gifLoopCount <= 0) {\n                        return;\n                    }\n                    frameIndex = 0;\n                    offscreenContext.clearRect(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n                }\n                particle.gifFrame = frameIndex;\n            }\n            context.scale(image.gifData.width / radius, image.gifData.height / radius);\n        }\n        else if (element) {\n            const ratio = image.ratio, pos = {\n                x: -radius,\n                y: -radius,\n            };\n            context.drawImage(element, pos.x, pos.y, radius * 2, (radius * 2) / ratio);\n        }\n        context.globalAlpha = 1;\n    }\n    getSidesCount() {\n        return 12;\n    }\n    async init(container) {\n        const options = container.actualOptions;\n        if (!options.preload || !this._engine.loadImage) {\n            return;\n        }\n        for (const imageData of options.preload) {\n            await this._engine.loadImage(imageData);\n        }\n    }\n    loadShape(particle) {\n        if (particle.shape !== \"image\" && particle.shape !== \"images\") {\n            return;\n        }\n        if (!this._engine.images) {\n            this._engine.images = [];\n        }\n        const imageData = particle.shapeData, image = this._engine.images.find((t) => t.name === imageData.name || t.source === imageData.src);\n        if (!image) {\n            this.loadImageShape(imageData).then(() => {\n                this.loadShape(particle);\n            });\n        }\n    }\n    particleInit(container, particle) {\n        if (particle.shape !== \"image\" && particle.shape !== \"images\") {\n            return;\n        }\n        if (!this._engine.images) {\n            this._engine.images = [];\n        }\n        const images = this._engine.images, imageData = particle.shapeData, color = particle.getFillColor(), image = images.find((t) => t.name === imageData.name || t.source === imageData.src);\n        if (!image) {\n            return;\n        }\n        const replaceColor = imageData.replaceColor ?? imageData.replace_color ?? image.replaceColor;\n        if (image.loading) {\n            setTimeout(() => {\n                this.particleInit(container, particle);\n            });\n            return;\n        }\n        (async () => {\n            let imageRes;\n            if (image.svgData && color) {\n                imageRes = await replaceImageColor(image, imageData, color, particle);\n            }\n            else {\n                imageRes = {\n                    color,\n                    data: image,\n                    element: image.element,\n                    gif: image.gif,\n                    gifData: image.gifData,\n                    gifLoopCount: image.gifLoopCount,\n                    loaded: true,\n                    ratio: imageData.width && imageData.height ? imageData.width / imageData.height : image.ratio ?? 1,\n                    replaceColor: replaceColor,\n                    source: imageData.src,\n                };\n            }\n            if (!imageRes.ratio) {\n                imageRes.ratio = 1;\n            }\n            const fill = imageData.fill ?? particle.fill, close = imageData.close ?? particle.close, imageShape = {\n                image: imageRes,\n                fill,\n                close,\n            };\n            particle.image = imageShape.image;\n            particle.fill = imageShape.fill;\n            particle.close = imageShape.close;\n        })();\n    }\n}\n","export class Preload {\n    constructor() {\n        this.src = \"\";\n        this.gif = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.gif !== undefined) {\n            this.gif = data.gif;\n        }\n        if (data.height !== undefined) {\n            this.height = data.height;\n        }\n        if (data.name !== undefined) {\n            this.name = data.name;\n        }\n        if (data.replaceColor !== undefined) {\n            this.replaceColor = data.replaceColor;\n        }\n        if (data.src !== undefined) {\n            this.src = data.src;\n        }\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n    }\n}\n","import { Preload } from \"./Options/Classes/Preload\";\nexport class ImagePreloaderPlugin {\n    constructor(engine) {\n        this.id = \"imagePreloader\";\n        this._engine = engine;\n    }\n    getPlugin() {\n        return {};\n    }\n    loadOptions(options, source) {\n        if (!source || !source.preload) {\n            return;\n        }\n        if (!options.preload) {\n            options.preload = [];\n        }\n        const preloadOptions = options.preload;\n        for (const item of source.preload) {\n            const existing = preloadOptions.find((t) => t.name === item.name || t.src === item.src);\n            if (existing) {\n                existing.load(item);\n            }\n            else {\n                const preload = new Preload();\n                preload.load(item);\n                preloadOptions.push(preload);\n            }\n        }\n    }\n    needsPlugin() {\n        return true;\n    }\n}\n","import { downloadSvgImage, loadGifImage, loadImage } from \"./Utils\";\nimport { ImageDrawer } from \"./ImageDrawer\";\nimport { ImagePreloaderPlugin } from \"./ImagePreloader\";\nimport { errorPrefix } from \"tsparticles-engine\";\nfunction addLoadImageToEngine(engine) {\n    if (engine.loadImage) {\n        return;\n    }\n    engine.loadImage = async (data) => {\n        if (!data.name && !data.src) {\n            throw new Error(`${errorPrefix} no image source provided`);\n        }\n        if (!engine.images) {\n            engine.images = [];\n        }\n        if (engine.images.find((t) => t.name === data.name || t.source === data.src)) {\n            return;\n        }\n        try {\n            const image = {\n                gif: data.gif ?? false,\n                name: data.name ?? data.src,\n                source: data.src,\n                type: data.src.substring(data.src.length - 3),\n                error: false,\n                loading: true,\n                replaceColor: data.replaceColor,\n                ratio: data.width && data.height ? data.width / data.height : undefined,\n            };\n            engine.images.push(image);\n            const imageFunc = data.gif ? loadGifImage : data.replaceColor ? downloadSvgImage : loadImage;\n            await imageFunc(image);\n        }\n        catch {\n            throw new Error(`${errorPrefix} ${data.name ?? data.src} not found`);\n        }\n    };\n}\nexport async function loadImageShape(engine, refresh = true) {\n    addLoadImageToEngine(engine);\n    const preloader = new ImagePreloaderPlugin(engine);\n    await engine.addPlugin(preloader, refresh);\n    await engine.addShape([\"image\", \"images\"], new ImageDrawer(engine), refresh);\n}\n","import { ValueWithRandom } from \"tsparticles-engine\";\nexport class LifeDelay extends ValueWithRandom {\n    constructor() {\n        super();\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { ValueWithRandom } from \"tsparticles-engine\";\nexport class LifeDuration extends ValueWithRandom {\n    constructor() {\n        super();\n        this.random.minimumValue = 0.0001;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { LifeDelay } from \"./LifeDelay\";\nimport { LifeDuration } from \"./LifeDuration\";\nexport class Life {\n    constructor() {\n        this.count = 0;\n        this.delay = new LifeDelay();\n        this.duration = new LifeDuration();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = data.count;\n        }\n        this.delay.load(data.delay);\n        this.duration.load(data.duration);\n    }\n}\n","import { getRandom, getRangeValue, randomInRange, setRangeValue, } from \"tsparticles-engine\";\nimport { Life } from \"./Options/Classes/Life\";\nexport class LifeUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const container = this.container, particlesOptions = particle.options, lifeOptions = particlesOptions.life;\n        if (!lifeOptions) {\n            return;\n        }\n        particle.life = {\n            delay: container.retina.reduceFactor\n                ? ((getRangeValue(lifeOptions.delay.value) * (lifeOptions.delay.sync ? 1 : getRandom())) /\n                    container.retina.reduceFactor) *\n                    1000\n                : 0,\n            delayTime: 0,\n            duration: container.retina.reduceFactor\n                ? ((getRangeValue(lifeOptions.duration.value) * (lifeOptions.duration.sync ? 1 : getRandom())) /\n                    container.retina.reduceFactor) *\n                    1000\n                : 0,\n            time: 0,\n            count: lifeOptions.count,\n        };\n        if (particle.life.duration <= 0) {\n            particle.life.duration = -1;\n        }\n        if (particle.life.count <= 0) {\n            particle.life.count = -1;\n        }\n        if (particle.life) {\n            particle.spawning = particle.life.delay > 0;\n        }\n    }\n    isEnabled(particle) {\n        return !particle.destroyed;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.life) {\n            options.life = new Life();\n        }\n        for (const source of sources) {\n            options.life.load(source?.life);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle) || !particle.life) {\n            return;\n        }\n        const life = particle.life;\n        let justSpawned = false;\n        if (particle.spawning) {\n            life.delayTime += delta.value;\n            if (life.delayTime >= particle.life.delay) {\n                justSpawned = true;\n                particle.spawning = false;\n                life.delayTime = 0;\n                life.time = 0;\n            }\n            else {\n                return;\n            }\n        }\n        if (life.duration === -1) {\n            return;\n        }\n        if (particle.spawning) {\n            return;\n        }\n        if (justSpawned) {\n            life.time = 0;\n        }\n        else {\n            life.time += delta.value;\n        }\n        if (life.time < life.duration) {\n            return;\n        }\n        life.time = 0;\n        if (particle.life.count > 0) {\n            particle.life.count--;\n        }\n        if (particle.life.count === 0) {\n            particle.destroy();\n            return;\n        }\n        const canvasSize = this.container.canvas.size, widthRange = setRangeValue(0, canvasSize.width), heightRange = setRangeValue(0, canvasSize.width);\n        particle.position.x = randomInRange(widthRange);\n        particle.position.y = randomInRange(heightRange);\n        particle.spawning = true;\n        life.delayTime = 0;\n        life.time = 0;\n        particle.reset();\n        const lifeOptions = particle.options.life;\n        if (lifeOptions) {\n            life.delay = getRangeValue(lifeOptions.delay.value) * 1000;\n            life.duration = getRangeValue(lifeOptions.duration.value) * 1000;\n        }\n    }\n}\n","import { LifeUpdater } from \"./LifeUpdater\";\nexport async function loadLifeUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"life\", (container) => new LifeUpdater(container), refresh);\n}\n","export class LineDrawer {\n    draw(context, particle, radius) {\n        const shapeData = particle.shapeData;\n        context.moveTo(-radius / 2, 0);\n        context.lineTo(radius / 2, 0);\n        context.lineCap = shapeData?.cap ?? \"butt\";\n    }\n    getSidesCount() {\n        return 1;\n    }\n}\n","import { LineDrawer } from \"./LineDrawer\";\nexport async function loadLineShape(engine, refresh = true) {\n    await engine.addShape(\"line\", new LineDrawer(), refresh);\n}\n","import { isSsr } from \"tsparticles-engine\";\nexport class ParallaxMover {\n    init() {\n    }\n    isEnabled(particle) {\n        return (!isSsr() &&\n            !particle.destroyed &&\n            particle.container.actualOptions.interactivity.events.onHover.parallax.enable);\n    }\n    move(particle) {\n        const container = particle.container, options = container.actualOptions, parallaxOptions = options.interactivity.events.onHover.parallax;\n        if (isSsr() || !parallaxOptions.enable) {\n            return;\n        }\n        const parallaxForce = parallaxOptions.force, mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const canvasSize = container.canvas.size, canvasCenter = {\n            x: canvasSize.width / 2,\n            y: canvasSize.height / 2,\n        }, parallaxSmooth = parallaxOptions.smooth, factor = particle.getRadius() / parallaxForce, centerDistance = {\n            x: (mousePos.x - canvasCenter.x) * factor,\n            y: (mousePos.y - canvasCenter.y) * factor,\n        }, { offset } = particle;\n        offset.x += (centerDistance.x - offset.x) / parallaxSmooth;\n        offset.y += (centerDistance.y - offset.y) / parallaxSmooth;\n    }\n}\n","import { ParallaxMover } from \"./ParallaxMover\";\nexport async function loadParallaxMover(engine, refresh = true) {\n    await engine.addMover(\"parallax\", () => new ParallaxMover(), refresh);\n}\n","export class ParticlesInteractorBase {\n    constructor(container) {\n        this.container = container;\n        this.type = \"particles\";\n    }\n}\n","import { ParticlesInteractorBase, getDistances, } from \"tsparticles-engine\";\nexport class Attractor extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact(p1) {\n        const container = this.container, distance = p1.retina.attractDistance ?? container.retina.attractDistance, pos1 = p1.getPosition(), query = container.particles.quadTree.queryCircle(pos1, distance);\n        for (const p2 of query) {\n            if (p1 === p2 || !p2.options.move.attract.enable || p2.destroyed || p2.spawning) {\n                continue;\n            }\n            const pos2 = p2.getPosition(), { dx, dy } = getDistances(pos1, pos2), rotate = p1.options.move.attract.rotate, ax = dx / (rotate.x * 1000), ay = dy / (rotate.y * 1000), p1Factor = p2.size.value / p1.size.value, p2Factor = 1 / p1Factor;\n            p1.velocity.x -= ax * p1Factor;\n            p1.velocity.y -= ay * p1Factor;\n            p2.velocity.x += ax * p2Factor;\n            p2.velocity.y += ay * p2Factor;\n        }\n    }\n    isEnabled(particle) {\n        return particle.options.move.attract.enable;\n    }\n    reset() {\n    }\n}\n","import { Attractor } from \"./Attractor\";\nexport async function loadParticlesAttractInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"particlesAttract\", (container) => new Attractor(container), refresh);\n}\n","import { clamp } from \"tsparticles-engine\";\nfunction updateAbsorb(p1, r1, p2, r2, delta, pixelRatio) {\n    const factor = clamp((p1.options.collisions.absorb.speed * delta.factor) / 10, 0, r2);\n    p1.size.value += factor / 2;\n    p2.size.value -= factor;\n    if (r2 <= pixelRatio) {\n        p2.size.value = 0;\n        p2.destroy();\n    }\n}\nexport function absorb(p1, p2, delta, pixelRatio) {\n    const r1 = p1.getRadius(), r2 = p2.getRadius();\n    if (r1 === undefined && r2 !== undefined) {\n        p1.destroy();\n    }\n    else if (r1 !== undefined && r2 === undefined) {\n        p2.destroy();\n    }\n    else if (r1 !== undefined && r2 !== undefined) {\n        if (r1 >= r2) {\n            updateAbsorb(p1, r1, p2, r2, delta, pixelRatio);\n        }\n        else {\n            updateAbsorb(p2, r2, p1, r1, delta, pixelRatio);\n        }\n    }\n}\n","import { circleBounce, circleBounceDataFromParticle, getRangeValue } from \"tsparticles-engine\";\nconst fixBounceSpeed = (p) => {\n    if (p.collisionMaxSpeed === undefined) {\n        p.collisionMaxSpeed = getRangeValue(p.options.collisions.maxSpeed);\n    }\n    if (p.velocity.length > p.collisionMaxSpeed) {\n        p.velocity.length = p.collisionMaxSpeed;\n    }\n};\nexport function bounce(p1, p2) {\n    circleBounce(circleBounceDataFromParticle(p1), circleBounceDataFromParticle(p2));\n    fixBounceSpeed(p1);\n    fixBounceSpeed(p2);\n}\n","import { absorb } from \"./Absorb\";\nimport { bounce } from \"./Bounce\";\nimport { destroy } from \"./Destroy\";\nexport function resolveCollision(p1, p2, delta, pixelRatio) {\n    switch (p1.options.collisions.mode) {\n        case \"absorb\": {\n            absorb(p1, p2, delta, pixelRatio);\n            break;\n        }\n        case \"bounce\": {\n            bounce(p1, p2);\n            break;\n        }\n        case \"destroy\": {\n            destroy(p1, p2);\n            break;\n        }\n    }\n}\n","import { bounce } from \"./Bounce\";\nexport function destroy(p1, p2) {\n    if (!p1.unbreakable && !p2.unbreakable) {\n        bounce(p1, p2);\n    }\n    if (p1.getRadius() === undefined && p2.getRadius() !== undefined) {\n        p1.destroy();\n    }\n    else if (p1.getRadius() !== undefined && p2.getRadius() === undefined) {\n        p2.destroy();\n    }\n    else if (p1.getRadius() !== undefined && p2.getRadius() !== undefined) {\n        const deleteP = p1.getRadius() >= p2.getRadius() ? p2 : p1;\n        deleteP.destroy();\n    }\n}\n","import { ParticlesInteractorBase, getDistance } from \"tsparticles-engine\";\nimport { resolveCollision } from \"./ResolveCollision\";\nexport class Collider extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact(p1, delta) {\n        if (p1.destroyed || p1.spawning) {\n            return;\n        }\n        const container = this.container, pos1 = p1.getPosition(), radius1 = p1.getRadius(), query = container.particles.quadTree.queryCircle(pos1, radius1 * 2);\n        for (const p2 of query) {\n            if (p1 === p2 ||\n                !p2.options.collisions.enable ||\n                p1.options.collisions.mode !== p2.options.collisions.mode ||\n                p2.destroyed ||\n                p2.spawning) {\n                continue;\n            }\n            const pos2 = p2.getPosition(), radius2 = p2.getRadius();\n            if (Math.abs(Math.round(pos1.z) - Math.round(pos2.z)) > radius1 + radius2) {\n                continue;\n            }\n            const dist = getDistance(pos1, pos2), distP = radius1 + radius2;\n            if (dist > distP) {\n                continue;\n            }\n            resolveCollision(p1, p2, delta, container.retina.pixelRatio);\n        }\n    }\n    isEnabled(particle) {\n        return particle.options.collisions.enable;\n    }\n    reset() {\n    }\n}\n","import { Collider } from \"./Collider\";\nexport async function loadParticlesCollisionsInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"particlesCollisions\", (container) => new Collider(container), refresh);\n}\n","import { Circle, Rectangle } from \"tsparticles-engine\";\nexport class CircleWarp extends Circle {\n    constructor(x, y, radius, canvasSize) {\n        super(x, y, radius);\n        this.canvasSize = canvasSize;\n        this.canvasSize = { ...canvasSize };\n    }\n    contains(point) {\n        const { width, height } = this.canvasSize;\n        const { x, y } = point;\n        return (super.contains(point) ||\n            super.contains({ x: x - width, y }) ||\n            super.contains({ x: x - width, y: y - height }) ||\n            super.contains({ x, y: y - height }));\n    }\n    intersects(range) {\n        if (super.intersects(range)) {\n            return true;\n        }\n        const rect = range, circle = range, newPos = {\n            x: range.position.x - this.canvasSize.width,\n            y: range.position.y - this.canvasSize.height,\n        };\n        if (circle.radius !== undefined) {\n            const biggerCircle = new Circle(newPos.x, newPos.y, circle.radius * 2);\n            return super.intersects(biggerCircle);\n        }\n        else if (rect.size !== undefined) {\n            const rectSW = new Rectangle(newPos.x, newPos.y, rect.size.width * 2, rect.size.height * 2);\n            return super.intersects(rectSW);\n        }\n        return false;\n    }\n}\n","import { OptionsColor } from \"tsparticles-engine\";\nexport class LinksShadow {\n    constructor() {\n        this.blur = 5;\n        this.color = new OptionsColor();\n        this.color.value = \"#000\";\n        this.enable = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.blur !== undefined) {\n            this.blur = data.blur;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","import { OptionsColor } from \"tsparticles-engine\";\nexport class LinksTriangle {\n    constructor() {\n        this.enable = false;\n        this.frequency = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { OptionsColor } from \"tsparticles-engine\";\nimport { LinksShadow } from \"./LinksShadow\";\nimport { LinksTriangle } from \"./LinksTriangle\";\nexport class Links {\n    constructor() {\n        this.blink = false;\n        this.color = new OptionsColor();\n        this.color.value = \"#fff\";\n        this.consent = false;\n        this.distance = 100;\n        this.enable = false;\n        this.frequency = 1;\n        this.opacity = 1;\n        this.shadow = new LinksShadow();\n        this.triangles = new LinksTriangle();\n        this.width = 1;\n        this.warp = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.id !== undefined) {\n            this.id = data.id;\n        }\n        if (data.blink !== undefined) {\n            this.blink = data.blink;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.consent !== undefined) {\n            this.consent = data.consent;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        this.shadow.load(data.shadow);\n        this.triangles.load(data.triangles);\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n        if (data.warp !== undefined) {\n            this.warp = data.warp;\n        }\n    }\n}\n","import { Circle, ParticlesInteractorBase, getDistances, getLinkRandomColor, } from \"tsparticles-engine\";\nimport { CircleWarp } from \"./CircleWarp\";\nimport { Links } from \"./Options/Classes/Links\";\nfunction getLinkDistance(pos1, pos2, optDistance, canvasSize, warp) {\n    const { dx, dy, distance } = getDistances(pos1, pos2);\n    if (!warp || distance <= optDistance) {\n        return distance;\n    }\n    const absDiffs = {\n        x: Math.abs(dx),\n        y: Math.abs(dy),\n    }, warpDistances = {\n        x: Math.min(absDiffs.x, canvasSize.width - absDiffs.x),\n        y: Math.min(absDiffs.y, canvasSize.height - absDiffs.y),\n    };\n    return Math.sqrt(warpDistances.x ** 2 + warpDistances.y ** 2);\n}\nexport class Linker extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n        this._setColor = (p1) => {\n            if (!p1.options.links) {\n                return;\n            }\n            const container = this.linkContainer, linksOptions = p1.options.links;\n            let linkColor = linksOptions.id === undefined\n                ? container.particles.linksColor\n                : container.particles.linksColors.get(linksOptions.id);\n            if (linkColor) {\n                return;\n            }\n            const optColor = linksOptions.color;\n            linkColor = getLinkRandomColor(optColor, linksOptions.blink, linksOptions.consent);\n            if (linksOptions.id === undefined) {\n                container.particles.linksColor = linkColor;\n            }\n            else {\n                container.particles.linksColors.set(linksOptions.id, linkColor);\n            }\n        };\n        this.linkContainer = container;\n    }\n    clear() {\n    }\n    init() {\n        this.linkContainer.particles.linksColor = undefined;\n        this.linkContainer.particles.linksColors = new Map();\n    }\n    async interact(p1) {\n        if (!p1.options.links) {\n            return;\n        }\n        p1.links = [];\n        const pos1 = p1.getPosition(), container = this.container, canvasSize = container.canvas.size;\n        if (pos1.x < 0 || pos1.y < 0 || pos1.x > canvasSize.width || pos1.y > canvasSize.height) {\n            return;\n        }\n        const linkOpt1 = p1.options.links, optOpacity = linkOpt1.opacity, optDistance = p1.retina.linksDistance ?? 0, warp = linkOpt1.warp, range = warp\n            ? new CircleWarp(pos1.x, pos1.y, optDistance, canvasSize)\n            : new Circle(pos1.x, pos1.y, optDistance), query = container.particles.quadTree.query(range);\n        for (const p2 of query) {\n            const linkOpt2 = p2.options.links;\n            if (p1 === p2 ||\n                !linkOpt2?.enable ||\n                linkOpt1.id !== linkOpt2.id ||\n                p2.spawning ||\n                p2.destroyed ||\n                !p2.links ||\n                p1.links.some((t) => t.destination === p2) ||\n                p2.links.some((t) => t.destination === p1)) {\n                continue;\n            }\n            const pos2 = p2.getPosition();\n            if (pos2.x < 0 || pos2.y < 0 || pos2.x > canvasSize.width || pos2.y > canvasSize.height) {\n                continue;\n            }\n            const distance = getLinkDistance(pos1, pos2, optDistance, canvasSize, warp && linkOpt2.warp);\n            if (distance > optDistance) {\n                continue;\n            }\n            const opacityLine = (1 - distance / optDistance) * optOpacity;\n            this._setColor(p1);\n            p1.links.push({\n                destination: p2,\n                opacity: opacityLine,\n            });\n        }\n    }\n    isEnabled(particle) {\n        return !!particle.options.links?.enable;\n    }\n    loadParticlesOptions(options, ...sources) {\n        if (!options.links) {\n            options.links = new Links();\n        }\n        for (const source of sources) {\n            options.links.load(source?.links ?? source?.lineLinked ?? source?.line_linked);\n        }\n    }\n    reset() {\n    }\n}\n","import { Linker } from \"./Linker\";\nexport async function loadLinksInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"particlesLinks\", (container) => new Linker(container), refresh);\n}\n","import { drawLine, drawTriangle, getDistance, getDistances, getRandom, getStyleFromRgb, rangeColorToRgb, } from \"tsparticles-engine\";\nexport function drawLinkLine(params) {\n    let drawn = false;\n    const { begin, end, maxDistance, context, canvasSize, width, backgroundMask, colorLine, opacity, links } = params;\n    if (getDistance(begin, end) <= maxDistance) {\n        drawLine(context, begin, end);\n        drawn = true;\n    }\n    else if (links.warp) {\n        let pi1;\n        let pi2;\n        const endNE = {\n            x: end.x - canvasSize.width,\n            y: end.y,\n        };\n        const d1 = getDistances(begin, endNE);\n        if (d1.distance <= maxDistance) {\n            const yi = begin.y - (d1.dy / d1.dx) * begin.x;\n            pi1 = { x: 0, y: yi };\n            pi2 = { x: canvasSize.width, y: yi };\n        }\n        else {\n            const endSW = {\n                x: end.x,\n                y: end.y - canvasSize.height,\n            };\n            const d2 = getDistances(begin, endSW);\n            if (d2.distance <= maxDistance) {\n                const yi = begin.y - (d2.dy / d2.dx) * begin.x;\n                const xi = -yi / (d2.dy / d2.dx);\n                pi1 = { x: xi, y: 0 };\n                pi2 = { x: xi, y: canvasSize.height };\n            }\n            else {\n                const endSE = {\n                    x: end.x - canvasSize.width,\n                    y: end.y - canvasSize.height,\n                };\n                const d3 = getDistances(begin, endSE);\n                if (d3.distance <= maxDistance) {\n                    const yi = begin.y - (d3.dy / d3.dx) * begin.x;\n                    const xi = -yi / (d3.dy / d3.dx);\n                    pi1 = { x: xi, y: yi };\n                    pi2 = { x: pi1.x + canvasSize.width, y: pi1.y + canvasSize.height };\n                }\n            }\n        }\n        if (pi1 && pi2) {\n            drawLine(context, begin, pi1);\n            drawLine(context, end, pi2);\n            drawn = true;\n        }\n    }\n    if (!drawn) {\n        return;\n    }\n    context.lineWidth = width;\n    if (backgroundMask.enable) {\n        context.globalCompositeOperation = backgroundMask.composite;\n    }\n    context.strokeStyle = getStyleFromRgb(colorLine, opacity);\n    const { shadow } = links;\n    if (shadow.enable) {\n        const shadowColor = rangeColorToRgb(shadow.color);\n        if (shadowColor) {\n            context.shadowBlur = shadow.blur;\n            context.shadowColor = getStyleFromRgb(shadowColor);\n        }\n    }\n    context.stroke();\n}\nexport function drawLinkTriangle(params) {\n    const { context, pos1, pos2, pos3, backgroundMask, colorTriangle, opacityTriangle } = params;\n    drawTriangle(context, pos1, pos2, pos3);\n    if (backgroundMask.enable) {\n        context.globalCompositeOperation = backgroundMask.composite;\n    }\n    context.fillStyle = getStyleFromRgb(colorTriangle, opacityTriangle);\n    context.fill();\n}\nexport function getLinkKey(ids) {\n    ids.sort((a, b) => a - b);\n    return ids.join(\"_\");\n}\nexport function setLinkFrequency(particles, dictionary) {\n    const key = getLinkKey(particles.map((t) => t.id));\n    let res = dictionary.get(key);\n    if (res === undefined) {\n        res = getRandom();\n        dictionary.set(key, res);\n    }\n    return res;\n}\n","import { getDistance, getLinkColor, getRandom, getRangeValue, rangeColorToRgb, } from \"tsparticles-engine\";\nimport { drawLinkLine, drawLinkTriangle, setLinkFrequency } from \"./Utils\";\nexport class LinkInstance {\n    constructor(container) {\n        this.container = container;\n        this._drawLinkLine = (p1, link) => {\n            const p1LinksOptions = p1.options.links;\n            if (!p1LinksOptions?.enable) {\n                return;\n            }\n            const container = this.container, options = container.actualOptions, p2 = link.destination, pos1 = p1.getPosition(), pos2 = p2.getPosition();\n            let opacity = link.opacity;\n            container.canvas.draw((ctx) => {\n                let colorLine;\n                const twinkle = p1.options.twinkle?.lines;\n                if (twinkle?.enable) {\n                    const twinkleFreq = twinkle.frequency, twinkleRgb = rangeColorToRgb(twinkle.color), twinkling = getRandom() < twinkleFreq;\n                    if (twinkling && twinkleRgb) {\n                        colorLine = twinkleRgb;\n                        opacity = getRangeValue(twinkle.opacity);\n                    }\n                }\n                if (!colorLine) {\n                    const linkColor = p1LinksOptions.id !== undefined\n                        ? container.particles.linksColors.get(p1LinksOptions.id)\n                        : container.particles.linksColor;\n                    colorLine = getLinkColor(p1, p2, linkColor);\n                }\n                if (!colorLine) {\n                    return;\n                }\n                const width = p1.retina.linksWidth ?? 0, maxDistance = p1.retina.linksDistance ?? 0, { backgroundMask } = options;\n                drawLinkLine({\n                    context: ctx,\n                    width,\n                    begin: pos1,\n                    end: pos2,\n                    maxDistance,\n                    canvasSize: container.canvas.size,\n                    links: p1LinksOptions,\n                    backgroundMask: backgroundMask,\n                    colorLine,\n                    opacity,\n                });\n            });\n        };\n        this._drawLinkTriangle = (p1, link1, link2) => {\n            const linksOptions = p1.options.links;\n            if (!linksOptions?.enable) {\n                return;\n            }\n            const triangleOptions = linksOptions.triangles;\n            if (!triangleOptions.enable) {\n                return;\n            }\n            const container = this.container, options = container.actualOptions, p2 = link1.destination, p3 = link2.destination, opacityTriangle = triangleOptions.opacity ?? (link1.opacity + link2.opacity) / 2;\n            if (opacityTriangle <= 0) {\n                return;\n            }\n            container.canvas.draw((ctx) => {\n                const pos1 = p1.getPosition(), pos2 = p2.getPosition(), pos3 = p3.getPosition(), linksDistance = p1.retina.linksDistance ?? 0;\n                if (getDistance(pos1, pos2) > linksDistance ||\n                    getDistance(pos3, pos2) > linksDistance ||\n                    getDistance(pos3, pos1) > linksDistance) {\n                    return;\n                }\n                let colorTriangle = rangeColorToRgb(triangleOptions.color);\n                if (!colorTriangle) {\n                    const linkColor = linksOptions.id !== undefined\n                        ? container.particles.linksColors.get(linksOptions.id)\n                        : container.particles.linksColor;\n                    colorTriangle = getLinkColor(p1, p2, linkColor);\n                }\n                if (!colorTriangle) {\n                    return;\n                }\n                drawLinkTriangle({\n                    context: ctx,\n                    pos1,\n                    pos2,\n                    pos3,\n                    backgroundMask: options.backgroundMask,\n                    colorTriangle,\n                    opacityTriangle,\n                });\n            });\n        };\n        this._drawTriangles = (options, p1, link, p1Links) => {\n            const p2 = link.destination;\n            if (!(options.links?.triangles.enable && p2.options.links?.triangles.enable)) {\n                return;\n            }\n            const vertices = p2.links?.filter((t) => {\n                const linkFreq = this._getLinkFrequency(p2, t.destination);\n                return (p2.options.links &&\n                    linkFreq <= p2.options.links.frequency &&\n                    p1Links.findIndex((l) => l.destination === t.destination) >= 0);\n            });\n            if (!vertices?.length) {\n                return;\n            }\n            for (const vertex of vertices) {\n                const p3 = vertex.destination, triangleFreq = this._getTriangleFrequency(p1, p2, p3);\n                if (triangleFreq > options.links.triangles.frequency) {\n                    continue;\n                }\n                this._drawLinkTriangle(p1, link, vertex);\n            }\n        };\n        this._getLinkFrequency = (p1, p2) => {\n            return setLinkFrequency([p1, p2], this._freqs.links);\n        };\n        this._getTriangleFrequency = (p1, p2, p3) => {\n            return setLinkFrequency([p1, p2, p3], this._freqs.triangles);\n        };\n        this._freqs = {\n            links: new Map(),\n            triangles: new Map(),\n        };\n    }\n    drawParticle(context, particle) {\n        const { links, options } = particle;\n        if (!links || links.length <= 0) {\n            return;\n        }\n        const p1Links = links.filter((l) => options.links && this._getLinkFrequency(particle, l.destination) <= options.links.frequency);\n        for (const link of p1Links) {\n            this._drawTriangles(options, particle, link, p1Links);\n            if (link.opacity > 0 && (particle.retina.linksWidth ?? 0) > 0) {\n                this._drawLinkLine(particle, link);\n            }\n        }\n    }\n    async init() {\n        this._freqs.links = new Map();\n        this._freqs.triangles = new Map();\n    }\n    particleCreated(particle) {\n        particle.links = [];\n        if (!particle.options.links) {\n            return;\n        }\n        const ratio = this.container.retina.pixelRatio, { retina } = particle, { distance, width } = particle.options.links;\n        retina.linksDistance = distance * ratio;\n        retina.linksWidth = width * ratio;\n    }\n    particleDestroyed(particle) {\n        particle.links = [];\n    }\n}\n","import { LinkInstance } from \"./LinkInstance\";\nclass LinksPlugin {\n    constructor() {\n        this.id = \"links\";\n    }\n    getPlugin(container) {\n        return new LinkInstance(container);\n    }\n    loadOptions() {\n    }\n    needsPlugin() {\n        return true;\n    }\n}\nexport async function loadLinksPlugin(engine, refresh = true) {\n    const plugin = new LinksPlugin();\n    await engine.addPlugin(plugin, refresh);\n}\n","import { loadLinksInteraction } from \"./interaction\";\nimport { loadLinksPlugin } from \"./plugin\";\nexport async function loadParticlesLinksInteraction(engine, refresh = true) {\n    await loadLinksInteraction(engine, refresh);\n    await loadLinksPlugin(engine, refresh);\n}\nexport * from \"./Options/Classes/Links\";\nexport * from \"./Options/Classes/LinksShadow\";\nexport * from \"./Options/Classes/LinksTriangle\";\nexport * from \"./Options/Interfaces/ILinks\";\nexport * from \"./Options/Interfaces/ILinksShadow\";\nexport * from \"./Options/Interfaces/ILinksTriangle\";\n","import { getRangeValue } from \"tsparticles-engine\";\nexport class PolygonDrawerBase {\n    draw(context, particle, radius) {\n        const start = this.getCenter(particle, radius), side = this.getSidesData(particle, radius), sideCount = side.count.numerator * side.count.denominator, decimalSides = side.count.numerator / side.count.denominator, interiorAngleDegrees = (180 * (decimalSides - 2)) / decimalSides, interiorAngle = Math.PI - (Math.PI * interiorAngleDegrees) / 180;\n        if (!context) {\n            return;\n        }\n        context.beginPath();\n        context.translate(start.x, start.y);\n        context.moveTo(0, 0);\n        for (let i = 0; i < sideCount; i++) {\n            context.lineTo(side.length, 0);\n            context.translate(side.length, 0);\n            context.rotate(interiorAngle);\n        }\n    }\n    getSidesCount(particle) {\n        const polygon = particle.shapeData;\n        return Math.round(getRangeValue(polygon?.sides ?? polygon?.nb_sides ?? 5));\n    }\n}\n","import { PolygonDrawerBase } from \"./PolygonDrawerBase\";\nexport class PolygonDrawer extends PolygonDrawerBase {\n    getCenter(particle, radius) {\n        return {\n            x: -radius / (particle.sides / 3.5),\n            y: -radius / (2.66 / 3.5),\n        };\n    }\n    getSidesData(particle, radius) {\n        const sides = particle.sides;\n        return {\n            count: {\n                denominator: 1,\n                numerator: sides,\n            },\n            length: (radius * 2.66) / (sides / 3),\n        };\n    }\n}\n","import { PolygonDrawerBase } from \"./PolygonDrawerBase\";\nexport class TriangleDrawer extends PolygonDrawerBase {\n    getCenter(particle, radius) {\n        return {\n            x: -radius,\n            y: radius / 1.66,\n        };\n    }\n    getSidesCount() {\n        return 3;\n    }\n    getSidesData(particle, radius) {\n        return {\n            count: {\n                denominator: 2,\n                numerator: 3,\n            },\n            length: radius * 2,\n        };\n    }\n}\n","import { PolygonDrawer } from \"./PolygonDrawer\";\nimport { TriangleDrawer } from \"./TriangleDrawer\";\nexport async function loadGenericPolygonShape(engine, refresh = true) {\n    await engine.addShape(\"polygon\", new PolygonDrawer(), refresh);\n}\nexport async function loadTriangleShape(engine, refresh = true) {\n    await engine.addShape(\"triangle\", new TriangleDrawer(), refresh);\n}\nexport async function loadPolygonShape(engine, refresh = true) {\n    await loadGenericPolygonShape(engine, refresh);\n    await loadTriangleShape(engine, refresh);\n}\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class RotateAnimation {\n    constructor() {\n        this.enable = false;\n        this.speed = 0;\n        this.decay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { ValueWithRandom, } from \"tsparticles-engine\";\nimport { RotateAnimation } from \"./RotateAnimation\";\nexport class Rotate extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new RotateAnimation();\n        this.direction = \"clockwise\";\n        this.path = false;\n        this.value = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        this.animation.load(data.animation);\n        if (data.path !== undefined) {\n            this.path = data.path;\n        }\n    }\n}\n","import { getRandom, getRangeValue, } from \"tsparticles-engine\";\nimport { Rotate } from \"./Options/Classes/Rotate\";\nfunction updateRotate(particle, delta) {\n    const rotate = particle.rotate, rotateOptions = particle.options.rotate;\n    if (!rotate || !rotateOptions) {\n        return;\n    }\n    const rotateAnimation = rotateOptions.animation, speed = (rotate.velocity ?? 0) * delta.factor, max = 2 * Math.PI, decay = rotate.decay ?? 1;\n    if (!rotateAnimation.enable) {\n        return;\n    }\n    switch (rotate.status) {\n        case \"increasing\":\n            rotate.value += speed;\n            if (rotate.value > max) {\n                rotate.value -= max;\n            }\n            break;\n        case \"decreasing\":\n        default:\n            rotate.value -= speed;\n            if (rotate.value < 0) {\n                rotate.value += max;\n            }\n            break;\n    }\n    if (rotate.velocity && decay !== 1) {\n        rotate.velocity *= decay;\n    }\n}\nexport class RotateUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const rotateOptions = particle.options.rotate;\n        if (!rotateOptions) {\n            return;\n        }\n        particle.rotate = {\n            enable: rotateOptions.animation.enable,\n            value: (getRangeValue(rotateOptions.value) * Math.PI) / 180,\n        };\n        particle.pathRotation = rotateOptions.path;\n        let rotateDirection = rotateOptions.direction;\n        if (rotateDirection === \"random\") {\n            const index = Math.floor(getRandom() * 2);\n            rotateDirection = index > 0 ? \"counter-clockwise\" : \"clockwise\";\n        }\n        switch (rotateDirection) {\n            case \"counter-clockwise\":\n            case \"counterClockwise\":\n                particle.rotate.status = \"decreasing\";\n                break;\n            case \"clockwise\":\n                particle.rotate.status = \"increasing\";\n                break;\n        }\n        const rotateAnimation = rotateOptions.animation;\n        if (rotateAnimation.enable) {\n            particle.rotate.decay = 1 - getRangeValue(rotateAnimation.decay);\n            particle.rotate.velocity =\n                (getRangeValue(rotateAnimation.speed) / 360) * this.container.retina.reduceFactor;\n            if (!rotateAnimation.sync) {\n                particle.rotate.velocity *= getRandom();\n            }\n        }\n        particle.rotation = particle.rotate.value;\n    }\n    isEnabled(particle) {\n        const rotate = particle.options.rotate;\n        if (!rotate) {\n            return false;\n        }\n        return !particle.destroyed && !particle.spawning && rotate.animation.enable && !rotate.path;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.rotate) {\n            options.rotate = new Rotate();\n        }\n        for (const source of sources) {\n            options.rotate.load(source?.rotate);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateRotate(particle, delta);\n        particle.rotation = particle.rotate?.value ?? 0;\n    }\n}\n","import { RotateUpdater } from \"./RotateUpdater\";\nexport async function loadRotateUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"rotate\", (container) => new RotateUpdater(container), refresh);\n}\n","const fixFactor = Math.sqrt(2);\nexport class SquareDrawer {\n    draw(context, particle, radius) {\n        const fixedRadius = radius / fixFactor, fixedDiameter = fixedRadius * 2;\n        context.rect(-fixedRadius, -fixedRadius, fixedDiameter, fixedDiameter);\n    }\n    getSidesCount() {\n        return 4;\n    }\n}\n","import { SquareDrawer } from \"./SquareDrawer\";\nexport async function loadSquareShape(engine, refresh = true) {\n    await engine.addShape([\"edge\", \"square\"], new SquareDrawer(), refresh);\n}\n","import { getRangeValue } from \"tsparticles-engine\";\nexport class StarDrawer {\n    draw(context, particle, radius) {\n        const sides = particle.sides, inset = particle.starInset ?? 2;\n        context.moveTo(0, 0 - radius);\n        for (let i = 0; i < sides; i++) {\n            context.rotate(Math.PI / sides);\n            context.lineTo(0, 0 - radius * inset);\n            context.rotate(Math.PI / sides);\n            context.lineTo(0, 0 - radius);\n        }\n    }\n    getSidesCount(particle) {\n        const star = particle.shapeData;\n        return Math.round(getRangeValue(star?.sides ?? star?.nb_sides ?? 5));\n    }\n    particleInit(container, particle) {\n        const star = particle.shapeData, inset = getRangeValue(star?.inset ?? 2);\n        particle.starInset = inset;\n    }\n}\n","import { StarDrawer } from \"./StarDrawer\";\nexport async function loadStarShape(engine, refresh = true) {\n    await engine.addShape(\"star\", new StarDrawer(), refresh);\n}\n","import { randomInRange, } from \"tsparticles-engine\";\nfunction updateColorValue(delta, colorValue, valueAnimation, max, decrease) {\n    if (!colorValue ||\n        !valueAnimation.enable ||\n        ((colorValue.maxLoops ?? 0) > 0 && (colorValue.loops ?? 0) > (colorValue.maxLoops ?? 0))) {\n        return;\n    }\n    if (!colorValue.time) {\n        colorValue.time = 0;\n    }\n    if ((colorValue.delayTime ?? 0) > 0 && colorValue.time < (colorValue.delayTime ?? 0)) {\n        colorValue.time += delta.value;\n    }\n    if ((colorValue.delayTime ?? 0) > 0 && colorValue.time < (colorValue.delayTime ?? 0)) {\n        return;\n    }\n    const offset = randomInRange(valueAnimation.offset), velocity = (colorValue.velocity ?? 0) * delta.factor + offset * 3.6, decay = colorValue.decay ?? 1;\n    if (!decrease || colorValue.status === \"increasing\") {\n        colorValue.value += velocity;\n        if (colorValue.value > max) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            if (decrease) {\n                colorValue.status = \"decreasing\";\n                colorValue.value -= colorValue.value % max;\n            }\n        }\n    }\n    else {\n        colorValue.value -= velocity;\n        if (colorValue.value < 0) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            colorValue.status = \"increasing\";\n            colorValue.value += colorValue.value;\n        }\n    }\n    if (colorValue.velocity && decay !== 1) {\n        colorValue.velocity *= decay;\n    }\n    if (colorValue.value > max) {\n        colorValue.value %= max;\n    }\n}\nexport function updateStrokeColor(particle, delta) {\n    if (!particle.strokeColor || !particle.strokeAnimation) {\n        return;\n    }\n    const { h, s, l } = particle.strokeColor, { h: hAnimation, s: sAnimation, l: lAnimation } = particle.strokeAnimation;\n    if (h) {\n        updateColorValue(delta, h, hAnimation, 360, false);\n    }\n    if (s) {\n        updateColorValue(delta, s, sAnimation, 100, true);\n    }\n    if (l) {\n        updateColorValue(delta, l, lAnimation, 100, true);\n    }\n}\n","import { getHslAnimationFromHsl, getRangeValue, itemFromSingleOrMultiple, rangeColorToHsl, } from \"tsparticles-engine\";\nimport { updateStrokeColor } from \"./Utils\";\nexport class StrokeColorUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const container = this.container, options = particle.options;\n        const stroke = itemFromSingleOrMultiple(options.stroke, particle.id, options.reduceDuplicates);\n        particle.strokeWidth = getRangeValue(stroke.width) * container.retina.pixelRatio;\n        particle.strokeOpacity = getRangeValue(stroke.opacity ?? 1);\n        particle.strokeAnimation = stroke.color?.animation;\n        const strokeHslColor = rangeColorToHsl(stroke.color) ?? particle.getFillColor();\n        if (strokeHslColor) {\n            particle.strokeColor = getHslAnimationFromHsl(strokeHslColor, particle.strokeAnimation, container.retina.reduceFactor);\n        }\n    }\n    isEnabled(particle) {\n        const color = particle.strokeAnimation, { strokeColor } = particle;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            !!color &&\n            ((strokeColor?.h.value !== undefined && strokeColor.h.enable) ||\n                (strokeColor?.s.value !== undefined && strokeColor.s.enable) ||\n                (strokeColor?.l.value !== undefined && strokeColor.l.enable)));\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateStrokeColor(particle, delta);\n    }\n}\n","import { StrokeColorUpdater } from \"./StrokeColorUpdater\";\nexport async function loadStrokeColorUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"strokeColor\", (container) => new StrokeColorUpdater(container), refresh);\n}\n","import { executeOnSingleOrMultiple, isInArray, itemFromSingleOrMultiple, loadFont, } from \"tsparticles-engine\";\nexport const validTypes = [\"text\", \"character\", \"char\"];\nexport class TextDrawer {\n    draw(context, particle, radius, opacity) {\n        const character = particle.shapeData;\n        if (character === undefined) {\n            return;\n        }\n        const textData = character.value;\n        if (textData === undefined) {\n            return;\n        }\n        if (particle.text === undefined) {\n            particle.text = itemFromSingleOrMultiple(textData, particle.randomIndexData);\n        }\n        const text = particle.text, style = character.style ?? \"\", weight = character.weight ?? \"400\", size = Math.round(radius) * 2, font = character.font ?? \"Verdana\", fill = particle.fill, offsetX = (text.length * radius) / 2;\n        context.font = `${style} ${weight} ${size}px \"${font}\"`;\n        const pos = {\n            x: -offsetX,\n            y: radius / 2,\n        };\n        context.globalAlpha = opacity;\n        if (fill) {\n            context.fillText(text, pos.x, pos.y);\n        }\n        else {\n            context.strokeText(text, pos.x, pos.y);\n        }\n        context.globalAlpha = 1;\n    }\n    getSidesCount() {\n        return 12;\n    }\n    async init(container) {\n        const options = container.actualOptions;\n        if (validTypes.find((t) => isInArray(t, options.particles.shape.type))) {\n            const shapeOptions = validTypes\n                .map((t) => options.particles.shape.options[t])\n                .find((t) => !!t), promises = [];\n            executeOnSingleOrMultiple(shapeOptions, (shape) => {\n                promises.push(loadFont(shape.font, shape.weight));\n            });\n            await Promise.all(promises);\n        }\n    }\n    particleInit(container, particle) {\n        if (!particle.shape || !validTypes.includes(particle.shape)) {\n            return;\n        }\n        const character = particle.shapeData;\n        if (character === undefined) {\n            return;\n        }\n        const textData = character.value;\n        if (textData === undefined) {\n            return;\n        }\n        particle.text = itemFromSingleOrMultiple(textData, particle.randomIndexData);\n    }\n}\n","import { TextDrawer, validTypes } from \"./TextDrawer\";\nexport async function loadTextShape(engine, refresh = true) {\n    await engine.addShape(validTypes, new TextDrawer(), refresh);\n}\n","import { initPjs } from \"tsparticles-particles.js\";\nimport { loadBasic } from \"tsparticles-basic\";\nimport { loadEasingQuadPlugin } from \"tsparticles-plugin-easing-quad\";\nimport { loadExternalAttractInteraction } from \"tsparticles-interaction-external-attract\";\nimport { loadExternalBounceInteraction } from \"tsparticles-interaction-external-bounce\";\nimport { loadExternalBubbleInteraction } from \"tsparticles-interaction-external-bubble\";\nimport { loadExternalConnectInteraction } from \"tsparticles-interaction-external-connect\";\nimport { loadExternalGrabInteraction } from \"tsparticles-interaction-external-grab\";\nimport { loadExternalPauseInteraction } from \"tsparticles-interaction-external-pause\";\nimport { loadExternalPushInteraction } from \"tsparticles-interaction-external-push\";\nimport { loadExternalRemoveInteraction } from \"tsparticles-interaction-external-remove\";\nimport { loadExternalRepulseInteraction } from \"tsparticles-interaction-external-repulse\";\nimport { loadExternalSlowInteraction } from \"tsparticles-interaction-external-slow\";\nimport { loadImageShape } from \"tsparticles-shape-image\";\nimport { loadLifeUpdater } from \"tsparticles-updater-life\";\nimport { loadLineShape } from \"tsparticles-shape-line\";\nimport { loadParallaxMover } from \"tsparticles-move-parallax\";\nimport { loadParticlesAttractInteraction } from \"tsparticles-interaction-particles-attract\";\nimport { loadParticlesCollisionsInteraction } from \"tsparticles-interaction-particles-collisions\";\nimport { loadParticlesLinksInteraction } from \"tsparticles-interaction-particles-links\";\nimport { loadPolygonShape } from \"tsparticles-shape-polygon\";\nimport { loadRotateUpdater } from \"tsparticles-updater-rotate\";\nimport { loadSquareShape } from \"tsparticles-shape-square\";\nimport { loadStarShape } from \"tsparticles-shape-star\";\nimport { loadStrokeColorUpdater } from \"tsparticles-updater-stroke-color\";\nimport { loadTextShape } from \"tsparticles-shape-text\";\nexport async function loadSlim(engine, refresh = true) {\n    initPjs(engine);\n    await loadParallaxMover(engine, false);\n    await loadExternalAttractInteraction(engine, false);\n    await loadExternalBounceInteraction(engine, false);\n    await loadExternalBubbleInteraction(engine, false);\n    await loadExternalConnectInteraction(engine, false);\n    await loadExternalGrabInteraction(engine, false);\n    await loadExternalPauseInteraction(engine, false);\n    await loadExternalPushInteraction(engine, false);\n    await loadExternalRemoveInteraction(engine, false);\n    await loadExternalRepulseInteraction(engine, false);\n    await loadExternalSlowInteraction(engine, false);\n    await loadParticlesAttractInteraction(engine, false);\n    await loadParticlesCollisionsInteraction(engine, false);\n    await loadParticlesLinksInteraction(engine, false);\n    await loadEasingQuadPlugin();\n    await loadImageShape(engine, false);\n    await loadLineShape(engine, false);\n    await loadPolygonShape(engine, false);\n    await loadSquareShape(engine, false);\n    await loadStarShape(engine, false);\n    await loadTextShape(engine, false);\n    await loadLifeUpdater(engine, false);\n    await loadRotateUpdater(engine, false);\n    await loadStrokeColorUpdater(engine, false);\n    await loadBasic(engine, refresh);\n}\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class TiltAnimation {\n    constructor() {\n        this.enable = false;\n        this.speed = 0;\n        this.decay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { ValueWithRandom } from \"tsparticles-engine\";\nimport { TiltAnimation } from \"./TiltAnimation\";\nexport class Tilt extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new TiltAnimation();\n        this.direction = \"clockwise\";\n        this.enable = false;\n        this.value = 0;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        this.animation.load(data.animation);\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","import { getRandom, getRangeValue, } from \"tsparticles-engine\";\nimport { Tilt } from \"./Options/Classes/Tilt\";\nimport { updateTilt } from \"./Utils\";\nexport class TiltUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    getTransformValues(particle) {\n        const tilt = particle.tilt?.enable && particle.tilt;\n        return {\n            b: tilt ? Math.cos(tilt.value) * tilt.cosDirection : undefined,\n            c: tilt ? Math.sin(tilt.value) * tilt.sinDirection : undefined,\n        };\n    }\n    init(particle) {\n        const tiltOptions = particle.options.tilt;\n        if (!tiltOptions) {\n            return;\n        }\n        particle.tilt = {\n            enable: tiltOptions.enable,\n            value: (getRangeValue(tiltOptions.value) * Math.PI) / 180,\n            sinDirection: getRandom() >= 0.5 ? 1 : -1,\n            cosDirection: getRandom() >= 0.5 ? 1 : -1,\n        };\n        let tiltDirection = tiltOptions.direction;\n        if (tiltDirection === \"random\") {\n            const index = Math.floor(getRandom() * 2);\n            tiltDirection = index > 0 ? \"counter-clockwise\" : \"clockwise\";\n        }\n        switch (tiltDirection) {\n            case \"counter-clockwise\":\n            case \"counterClockwise\":\n                particle.tilt.status = \"decreasing\";\n                break;\n            case \"clockwise\":\n                particle.tilt.status = \"increasing\";\n                break;\n        }\n        const tiltAnimation = particle.options.tilt?.animation;\n        if (tiltAnimation?.enable) {\n            particle.tilt.decay = 1 - getRangeValue(tiltAnimation.decay);\n            particle.tilt.velocity = (getRangeValue(tiltAnimation.speed) / 360) * this.container.retina.reduceFactor;\n            if (!tiltAnimation.sync) {\n                particle.tilt.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        const tiltAnimation = particle.options.tilt?.animation;\n        return !particle.destroyed && !particle.spawning && !!tiltAnimation?.enable;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.tilt) {\n            options.tilt = new Tilt();\n        }\n        for (const source of sources) {\n            options.tilt.load(source?.tilt);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateTilt(particle, delta);\n    }\n}\n","export function updateTilt(particle, delta) {\n    if (!particle.tilt || !particle.options.tilt) {\n        return;\n    }\n    const tilt = particle.options.tilt, tiltAnimation = tilt.animation, speed = (particle.tilt.velocity ?? 0) * delta.factor, max = 2 * Math.PI, decay = particle.tilt.decay ?? 1;\n    if (!tiltAnimation.enable) {\n        return;\n    }\n    switch (particle.tilt.status) {\n        case \"increasing\":\n            particle.tilt.value += speed;\n            if (particle.tilt.value > max) {\n                particle.tilt.value -= max;\n            }\n            break;\n        case \"decreasing\":\n        default:\n            particle.tilt.value -= speed;\n            if (particle.tilt.value < 0) {\n                particle.tilt.value += max;\n            }\n            break;\n    }\n    if (particle.tilt.velocity && decay !== 1) {\n        particle.tilt.velocity *= decay;\n    }\n}\n","import { TiltUpdater } from \"./TiltUpdater\";\nexport async function loadTiltUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"tilt\", (container) => new TiltUpdater(container), refresh);\n}\n","import { OptionsColor, setRangeValue, } from \"tsparticles-engine\";\nexport class TwinkleValues {\n    constructor() {\n        this.enable = false;\n        this.frequency = 0.05;\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = setRangeValue(data.opacity);\n        }\n    }\n}\n","import { TwinkleValues } from \"./TwinkleValues\";\nexport class Twinkle {\n    constructor() {\n        this.lines = new TwinkleValues();\n        this.particles = new TwinkleValues();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.lines.load(data.lines);\n        this.particles.load(data.particles);\n    }\n}\n","import { getRandom, getRangeValue, getStyleFromHsl, rangeColorToHsl, } from \"tsparticles-engine\";\nimport { Twinkle } from \"./Options/Classes/Twinkle\";\nexport class TwinkleUpdater {\n    getColorStyles(particle, context, radius, opacity) {\n        const pOptions = particle.options, twinkleOptions = pOptions.twinkle;\n        if (!twinkleOptions) {\n            return {};\n        }\n        const twinkle = twinkleOptions.particles, twinkling = twinkle.enable && getRandom() < twinkle.frequency, zIndexOptions = particle.options.zIndex, zOpacityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.opacityRate, twinklingOpacity = twinkling ? getRangeValue(twinkle.opacity) * zOpacityFactor : opacity, twinkleRgb = rangeColorToHsl(twinkle.color), twinkleStyle = twinkleRgb ? getStyleFromHsl(twinkleRgb, twinklingOpacity) : undefined, res = {}, needsTwinkle = twinkling && twinkleStyle;\n        res.fill = needsTwinkle ? twinkleStyle : undefined;\n        res.stroke = needsTwinkle ? twinkleStyle : undefined;\n        return res;\n    }\n    init() {\n    }\n    isEnabled(particle) {\n        const pOptions = particle.options, twinkleOptions = pOptions.twinkle;\n        if (!twinkleOptions) {\n            return false;\n        }\n        return twinkleOptions.particles.enable;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.twinkle) {\n            options.twinkle = new Twinkle();\n        }\n        for (const source of sources) {\n            options.twinkle.load(source?.twinkle);\n        }\n    }\n    update() {\n    }\n}\n","import { TwinkleUpdater } from \"./TwinkleUpdater\";\nexport async function loadTwinkleUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"twinkle\", () => new TwinkleUpdater(), refresh);\n}\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class WobbleSpeed {\n    constructor() {\n        this.angle = 50;\n        this.move = 10;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.angle !== undefined) {\n            this.angle = setRangeValue(data.angle);\n        }\n        if (data.move !== undefined) {\n            this.move = setRangeValue(data.move);\n        }\n    }\n}\n","import { isNumber, setRangeValue, } from \"tsparticles-engine\";\nimport { WobbleSpeed } from \"./WobbleSpeed\";\nexport class Wobble {\n    constructor() {\n        this.distance = 5;\n        this.enable = false;\n        this.speed = new WobbleSpeed();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = setRangeValue(data.distance);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            if (isNumber(data.speed)) {\n                this.speed.load({ angle: data.speed });\n            }\n            else {\n                const rangeSpeed = data.speed;\n                if (rangeSpeed.min !== undefined) {\n                    this.speed.load({ angle: rangeSpeed });\n                }\n                else {\n                    this.speed.load(data.speed);\n                }\n            }\n        }\n    }\n}\n","import { getRandom, getRangeValue, } from \"tsparticles-engine\";\nimport { Wobble } from \"./Options/Classes/Wobble\";\nimport { updateWobble } from \"./Utils\";\nexport class WobbleUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const wobbleOpt = particle.options.wobble;\n        if (wobbleOpt?.enable) {\n            particle.wobble = {\n                angle: getRandom() * Math.PI * 2,\n                angleSpeed: getRangeValue(wobbleOpt.speed.angle) / 360,\n                moveSpeed: getRangeValue(wobbleOpt.speed.move) / 10,\n            };\n        }\n        else {\n            particle.wobble = {\n                angle: 0,\n                angleSpeed: 0,\n                moveSpeed: 0,\n            };\n        }\n        particle.retina.wobbleDistance = getRangeValue(wobbleOpt?.distance ?? 0) * this.container.retina.pixelRatio;\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && !particle.spawning && !!particle.options.wobble?.enable;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.wobble) {\n            options.wobble = new Wobble();\n        }\n        for (const source of sources) {\n            options.wobble.load(source?.wobble);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateWobble(particle, delta);\n    }\n}\n","export function updateWobble(particle, delta) {\n    const { wobble: wobbleOptions } = particle.options, { wobble } = particle;\n    if (!wobbleOptions?.enable || !wobble) {\n        return;\n    }\n    const angleSpeed = wobble.angleSpeed * delta.factor, moveSpeed = wobble.moveSpeed * delta.factor, distance = (moveSpeed * ((particle.retina.wobbleDistance ?? 0) * delta.factor)) / (1000 / 60), max = 2 * Math.PI, { position } = particle;\n    wobble.angle += angleSpeed;\n    if (wobble.angle > max) {\n        wobble.angle -= max;\n    }\n    position.x += distance * Math.cos(wobble.angle);\n    position.y += distance * Math.abs(Math.sin(wobble.angle));\n}\n","import { WobbleUpdater } from \"./WobbleUpdater\";\nexport async function loadWobbleUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"wobble\", (container) => new WobbleUpdater(container), refresh);\n}\n","import { loadAbsorbersPlugin } from \"tsparticles-plugin-absorbers\";\nimport { loadDestroyUpdater } from \"tsparticles-updater-destroy\";\nimport { loadEmittersPlugin } from \"tsparticles-plugin-emitters\";\nimport { loadExternalTrailInteraction } from \"tsparticles-interaction-external-trail\";\nimport { loadRollUpdater } from \"tsparticles-updater-roll\";\nimport { loadSlim } from \"tsparticles-slim\";\nimport { loadTiltUpdater } from \"tsparticles-updater-tilt\";\nimport { loadTwinkleUpdater } from \"tsparticles-updater-twinkle\";\nimport { loadWobbleUpdater } from \"tsparticles-updater-wobble\";\nexport async function loadFull(engine, refresh = true) {\n    await loadDestroyUpdater(engine, false);\n    await loadRollUpdater(engine, false);\n    await loadTiltUpdater(engine, false);\n    await loadTwinkleUpdater(engine, false);\n    await loadWobbleUpdater(engine, false);\n    await loadExternalTrailInteraction(engine, false);\n    await loadAbsorbersPlugin(engine, false);\n    await loadEmittersPlugin(engine, false);\n    await loadSlim(engine, refresh);\n}\n"],"names":["isObject","val","deepCompare","obj1","obj2","excludeKeyFn","arguments","length","undefined","keys1","Object","keys","filter","key","keys2","_step","_iterator","_createForOfIteratorHelper","s","n","done","value","value1","value2","Array","isArray","deepCompareArrays","err","e","f","arr1","arr2","i","val1","val2","defaultId","Particles","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","state","init","library","_createClass","this","destroy","setState","nextProps","_nextProps$options","_this$props$options","nextOptions","options","params","currentOptions","url","id","canvasClassName","className","height","width","style","loaded","startsWith","refresh","_this2","then","_get","_getPrototypeOf","prototype","_this3","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","wrap","_context2","prev","next","tsParticles","_callee","_context","loadParticles","stop","_this$props","React","_objectSpread","_refresh","_callee3","_context3","apply","_loadParticles","_callee4","_ref3","_this$props$id","_this$props$options2","container","_context4","abrupt","defaultProps","load","sent","current","Component","Circle","_Range","x","y","radius","point","getDistance","position","range","pos1","pos2","distPos","Math","abs","r","sqrt","pow","Rectangle","_range$size","size","Range","generatedAttribute","mouseDownEvent","mouseUpEvent","mouseLeaveEvent","mouseOutEvent","mouseMoveEvent","touchStartEvent","touchEndEvent","touchMoveEvent","touchCancelEvent","resizeEvent","visibilityChangeEvent","errorPrefix","w","h","pos","intersects","size2","w2","h2","Vector","_Vector3d","xOrCoords","get","create","source","Vector3d","z","_updateFromAngle","angle","cos","sin","isNumber","coords3d","Error","concat","atan2","set","getLengthSq","v","clone","sub","multTo","c","v3d","ColorAnimation","count","enable","offset","speed","delay","decay","sync","data","setRangeValue","HslAnimation","l","AnimatableColor","_OptionsColor","animation","colorAnimation","color","isString","OptionsColor","Random","minimumValue","ValueWithRandom","random","isBoolean","drawLine","context","begin","end","beginPath","moveTo","lineTo","closePath","drawTriangle","p1","p2","p3","paintBase","dimension","baseColor","fillStyle","fillRect","paintImage","image","opacity","globalAlpha","drawImage","clear","clearRect","drawParticle","_transform$a","_transform$b","_transform$c","_transform$d","_particle$strokeWidth","particle","delta","colorStyles","backgroundMask","composite","shadow","transform","getPosition","rotation","pathRotation","velocity","rotateData","transformData","a","b","d","setTransform","globalCompositeOperation","shadowColor","shadowBlur","blur","getStyleFromRgb","shadowOffsetX","shadowOffsetY","fill","strokeWidth","lineWidth","stroke","strokeStyle","shape","drawer","drawers","draw","retina","pixelRatio","drawShape","close","afterEffect","drawShapeAfterEffect","drawPlugin","plugin","drawParticlePlugin","alterHsl","type","randomColorValue","midColorValue","colorManagers","Map","addColorManager","manager","hue2rgb","p","q","t","stringToRgba","input","_slicedToArray","stringPrefix","parseString","hexFixed","replace","_","g","result","exec","parseInt","rangeColorToRgb","index","useIndex","colorToRgb","itemFromArray","_step2","_iterator2","res","handleRangeColor","getRandomRgbColor","stringToRgb","_step3","_iterator3","handleColor","rangeColorToHsl","rgb","rgbToHsl","r1","g1","b1","max","min","hslToRgb","hsl","hslPercent","floor","hslaToRgba","hsla","rgbResult","fixedMin","randomInRange","getStyleFromHsl","colorMix","color1","color2","size1","rgb1","rgb2","mix","getLinkColor","linkColor","_p1$getFillColor","_p2$getFillColor","sourceColor","getFillColor","getStrokeColor","destColor","getRadius","hslColor","getLinkRandomColor","optColor","blink","consent","getHslFromAnimation","getHslAnimationFromHsl","animationOptions","reduceFactor","resColor","setColorAnimation","colorValue","getRangeValue","status","loops","maxLoops","time","delayTime","getRandom","initialValue","_random","easings","addEasing","name","easing","getEasing","clamp","num","comp1","comp2","weight1","weight2","getRangeMax","getRangeMin","getValue","_ref","getDistances","pointA","pointB","dx","dy","distance","getParticleDirectionAngle","direction","center","PI","getParticleBaseVelocity","baseVelocity","origin","collisionVelocity","v1","v2","m1","m2","calcPositionOrRandomFromSize","_data$position$x","_data$position","_data$position$y","_data$position2","calcPositionOrRandomFromSizeRanged","_data$position3","_data$position4","calcExactPositionOrRandomFromSize","_data$position$x2","_data$position5","_data$position$y2","_data$position6","parseAlpha","endsWith","parseFloat","CollisionsAbsorb","CollisionsOverlap","retries","ParticlesBounceFactor","_ValueWithRandom","ParticlesBounce","horizontal","vertical","Collisions","absorb","bounce","maxSpeed","mode","overlap","MoveAngle","MoveAttract","rotate","_data$rotate$x","_data$rotate","_data$rotate$y","_data$rotate2","rotateX","rotateY","MoveCenter","MoveGravity","acceleration","inverse","MovePath","generator","deepExtend","MoveTrailFill","MoveTrail","fillColor","OutModes","default","_data$bottom","_data$left","_data$right","_data$top","bottom","left","right","top","Spin","Move","attract","drift","gravity","path","outModes","spin","straight","trail","vibrate","warp","collisions","outMode","_data$outModes","_data$path","out_mode","noise","RangedAnimationOptions","_AnimationOptions","startValue","AnimationOptions","OpacityAnimation","_RangedAnimationOptio","opacity_min","Opacity","_data$animation","anim","ParticlesDensity","area","_data$width","_data$height","value_area","factor","ParticlesNumber","density","limit","_data$limit","Shadow","charKey","charAltKey","imageKey","imageAltKey","polygonKey","polygonAltKey","Shape","loadShape","item","mainKey","altKey","altOverride","_this$options$mainKey","_this$options$altKey","itemIsArray","emptyValue","mainDifferentValues","altDifferentValues","_this$options$charKey","_this$options$imageKe","_this$options$polygon","_value","_data$options","_data$image","custom","_this$options$shape","character","polygon","images","SizeAnimation","size_min","Size","Stroke","ZIndex","opacityRate","sizeRate","velocityRate","ParticlesOptions","engine","_engine","_container","groups","move","number","reduceDuplicates","zIndex","_data$move$collisions","_data$move","_data$move2","_data$stroke","_data$shape","group","_this$groups$group","interactivity","strokeToLoad","executeOnSingleOrMultiple","tmp","updaters","plugins","updater","loadOptions","interactors","interactor","loadParticlesOptions","_len","sourceOptionsArr","_key","_i","_sourceOptionsArr","sourceOptions","_len2","_key2","_logger","debug","console","error","info","log","verbose","warning","warn","getLogger","rectSideBounce","bounced","pSide","pOtherSide","rectSide","rectOtherSide","isSsr","window","document","safeMatchMedia","query","matchMedia","safeMutationObserver","callback","MutationObserver","isInArray","array","indexOf","loadFont","_x","_x2","_loadFont","font","weight","fonts","t0","arrayRandomIndex","isPointInside","bounds","inside","areBoundsInside","calculateBounds","destination","sources","_sources","sourceIsArray","_loop","destDict","map","isDivModeEnabled","divs","findItemFromSingleOrMultiple","divModeExecute","div","divMode","selectors","selector","singleDivModeExecute","element","matches","some","checkSelector","circleBounceDataFromParticle","mass","getMass","circleBounce","_p1$velocity$sub","xVelocityDiff","yVelocityDiff","_getDistances","xDist","yDist","u1","u2","vFinal1","vFinal2","rectBounce","divBounds","resH","resV","obj","itemFromSingleOrMultiple","find","initParticleNumericAnimationValue","pxRatio","valueRange","autoStatus","getPositionOrSize","positionOrSize","canvasSize","_objectWithoutProperties","_excluded","getSize","arg","isFunction","setTransformValue","newFactor","_factor$key","newValue","Canvas","_applyPostDrawUpdaters","_postDrawUpdaters","afterDraw","_applyPreDrawUpdaters","ctx","zOpacity","_preDrawUpdaters","getColorStyles","_updater$getColorStyl","getTransformValues","updaterTransform","beforeDraw","_applyResizePlugins","_resizePlugins","resize","_getPluginParticleColors","fColor","sColor","_step4","_iterator4","_colorPlugins","particleFillColor","particleStrokeColor","_initCover","cover","actualOptions","coverRgb","coverColor","_coverColorStyle","_initStyle","_fullScreen","_originalStyle","_setFullScreenStyle","_resetOriginalStyle","setProperty","_initTrail","trailFill","_trail","particles","_trailFill","Promise","resolve","reject","img","createElement","addEventListener","evt","src","_paintBase","_paintImage","_repairStyle","_safeMutationObserver","observer","disconnect","initBackground","observe","attributes","originalStyle","_mutationObserver","priority","fullScreen","toString","_generated","paint","remove","cb","_particle$getStrokeCo","spawning","destroyed","pfColor","psColor","_this$_getPluginParti","_this$_getPluginParti2","_ref2","_particle$bubble$opac","_particle$opacity","_particle$strokeOpaci","zIndexOptions","zOpacityFactor","zIndexFactor","bubble","zStrokeOpacity","strokeOpacity","_init","_this4","obs","records","_step5","_iterator5","record","attributeName","initUpdaters","initPlugins","background","elementStyle","backgroundColor","backgroundImage","backgroundPosition","backgroundRepeat","repeat","backgroundSize","_step6","_iterator6","push","_step7","_iterator7","canvas","_this5","dataset","ariaHidden","offsetHeight","offsetWidth","getContext","_this6","newSize","oldSize","started","resizeFactor","_this7","_windowResize","needsRefresh","updateActualOptions","setDensity","manageListener","event","handler","add","addOptions","passive","capture","removeOptions","removeEventListener","EventListeners","_doMouseTouchClick","_canPush","mouseInteractivity","mouse","mousePos","clickPosition","clickTime","Date","getTime","onClick","events","handleClickMode","setTimeout","_mouseTouchFinish","_handleThemeChange","mediaEvent","defaultThemes","themeName","dark","light","theme","themes","auto","loadTheme","_handleVisibilityChange","pauseOnBlur","hidden","pageHidden","pause","getAnimationStatus","play","_handleWindowResize","_resizeTimeout","clearTimeout","windowResize","_manageInteractivityListeners","mouseLeaveTmpEvent","handlers","_handlers","interactivityEl","html","canvasEl","pointerEvents","onHover","mouseMove","touchStart","touchMove","touchEndClick","mouseUp","mouseDown","touchEnd","mouseLeave","touchCancel","_manageListeners","detectType","detectsOn","_canvasEl$parentEleme","parentElement","parentNode","_manageMediaMatch","_manageResize","visibilityChange","mediaMatch","addListener","oldThemeChange","removeListener","themeChange","ResizeObserver","_resizeObserver","unobserve","entries","target","_mouseDown","clicking","downPosition","_mouseTouchClick","handled","mousePosition","clickPositionValid","_mouseTouchMove","mouseEvent","clientRect","getBoundingClientRect","clientX","clientY","currentTarget","sourceRect","targetRect","canvasRect","offsetX","offsetY","_mouseEvent$offsetX","_mouseEvent$offsetY","_mouseEvent$offsetX2","_mouseEvent$offsetY2","_canvasRect$left","_canvasRect$top","touchEvent","lastTouch","touches","_touchEnd","_touches","from","changedTouches","touch","delete","identifier","_touchEndClick","_i2","_touches2","_touchStart","_i3","_touches3","performance","now","Background","BackgroundMaskCover","BackgroundMask","FullScreen","ClickEvent","DivEvent","elementId","ids","_data$ids","el","Parallax","force","smooth","HoverEvent","parallax","ResizeEvent","Events","onDiv","_data$onClick","_data$onDiv","_data$onHover","onclick","ondiv","onhover","Modes","loadModeOptions","Interactivity","modes","_data$detectsOn","detect_on","ManualParticle","_data$position$mode","Responsive","maxWidth","Infinity","ThemeDefault","Theme","Options","_findDefaultTheme","_this$themes$find","_importPreset","preset","getPreset","autoPlay","detectRetina","duration","fpsLimit","manualParticles","pauseOnOutsideViewport","responsive","zLayers","_data$detectRetina","_data$fpsLimit","_data$fullScreen","_this$_findDefaultThe","_this$_findDefaultThe2","retina_detect","fps_limit","backgroundMode","optResponsive","sort","existingTheme","optTheme","defaultOptions","responsiveOptions","screen","availWidth","chosenTheme","clientDarkMode","defaultTheme","InteractionManager","_interactors","getInteractors","_externalInteractors","_particleInteractors","_externalInteract","isEnabled","interact","t1","finish","_particlesInteract","_interactor","_x3","_reset","_interactor2","reset","_x4","fixOutMode","checkModes","diameter","coord","maxCoord","setCb","Particle","overrideOptions","_calcPosition","_outModes$left","_outModes$right","_outModes$top","_outModes$bottom","tryCount","pluginPos","particlePosition","exactPosition","fixHorizontal","fixVertical","_checkOverlap","_calculateVelocity","copy","moveOptions","rad","radOffset","collisionsOptions","overlapOptions","_getRollColor","_this$roll$angle","roll","backColor","alter","backFactor","backSum","_initPosition","_this$options$move$ce","_this$options$move$ce2","zIndexValue","initialPosition","moveCenter","outType","_loadShapeData","shapeOptions","shapeData","override","unbreakable","inRange","slow","pathGenerator","particleDestroyed","_this$bubble$color","_this$bubble$radius","_this$bubble$color2","strokeColor","_shapeData$fill","_shapeData$close","_drawer","lastPathTime","misplaced","maxDistance","ignoresResizeRatio","mainOptions","particlesOptions","shapeType","overrideShapeType","pathOptions","pathDelay","getPathGenerator","addPath","initParticle","initialVelocity","moveDecay","needsSort","lastZIndex","sides","getShapeDrawer","sideCountFunc","getSidesCount","movers","mover","particleInit","particleCreated","isInsideCanvas","_step8","_iterator8","Point","QuadTree","rectangle","capacity","_subdivide","_this$rectangle$posit","_this$rectangle$size","_subs","round","_divided","_points","contains","insert","check","found","qTreeRectangle","_applyDensity","manualCount","_options$number$densi","numberOptions","densityFactor","_initDensityFactor","optParticlesNumber","optParticlesLimit","particlesNumber","particlesCount","removeQuantity","densityOptions","_pushParticle","initializer","pool","pop","_nextId","canAdd","_array","_zArray","dispatchEvent","_removeParticle","zIdx","splice","_interactionManager","quadTree","getMovers","getUpdaters","addParticle","countToRemove","_draw","_step2$value","update","condition","particlesInitialization","pathGenerators","addManualParticles","groupOptions","j","_groupOptions$number","nb","pushing","_redraw","removeAt","quantity","deleted","_update","particlesToDelete","_step6$value","_step7$value","_iterator10","_step10","_step10$value","_plugin","_iterator11","_step11","_this$pool","checkDelete","_iterator9","_step9","_particle","_iterator12","_step12","zArray","Set","particleUpdate","has","_toConsumableArray","externalInteract","particlesInteract","t2","Retina","devicePixelRatio","ratio","attractDistance","sizeAnimationSpeed","moveDistance","moveDrift","moveSpeed","guardCheck","initDelta","loadContainerOptions","defaultPathGenerator","generate","Container","_intersectionManager","entry","isIntersecting","_nextFrame","timestamp","_this$lastFrameTime","lastFrameTime","addLifeTime","alive","_delay","_duration","_lifeTime","_firstStart","_paused","_sourceOptions","_initialSourceOptions","_options","_eventListeners","IntersectionObserver","_intersectionObserver","clickOrTouchHandler","posRetina","queryCircle","touched","touchMoved","radiusX","radiusY","mainArr","dom","idx","findIndex","refreshTime","_drawAnimationFrame","requestAnimationFrame","_export2","_step4$value","_args3","export","supported","blob","shapes","availablePlugins","_step8$value","_step9$value","_plugin2","getSupportedShapes","getAvailablePlugins","t3","particlesSetup","_loadTheme","_callee5","_context5","_currentTheme","cancelAnimationFrame","needsUpdate","_callee6","_context6","start","_callee7","_context7","noiseOrGenerator","setPath","pathOrGenerator","oldGenerator","_start","_callee9","_context9","_delayTimeout","_callee8","_iterator13","_step13","_step13$value","_context8","addListeners","HTMLElement","removeListeners","_step14","_iterator14","_step15","_iterator15","newMaxWidth","setResponsive","setTheme","responsiveMaxWidth","EventDispatcher","_listeners","listener","arr","args","listeners","forEach","getItemsFromInitializer","initializers","values","Plugins","_initializers","presets","initInteractor","initMover","initUpdater","getPlugin","presetKey","types","needsPlugin","getDataFromUrl","_getDataFromUrl","_callee15","response","_context15","fallback","fetch","ok","json","isParams","Engine","_configs","_domArray","_eventDispatcher","_initialized","_step$value","config","nameOrConfig","_nameOrConfig$name","_addInteractor","interactorInitializer","_args","addInteractor","_addMover","moverInitializer","_args2","addParticleMover","_x5","_addParticleUpdater","updaterInitializer","addParticleUpdater","_x6","_x7","_addPathGenerator","_args4","addPathGenerator","_x8","_x9","_addPlugin","_args5","addPlugin","_x10","_addPreset","_args6","addPreset","_x11","_x12","_addShape","initOrRefresh","afterEffectOrRefresh","destroyOrRefresh","customDrawer","realRefresh","realInit","realAfterEffect","realDestroy","_args7","addShapeDrawer","_x13","_x14","_x15","_x16","_x17","_load","tagIdOrOptionsOrParams","loadFromArray","_x18","_x19","_loadFromArray","optionsOrIndex","_loadParams","_x20","_x21","_x22","_loadJSON","_callee10","tagId","pathConfigJson","_context10","_x23","_x24","_x25","_refresh2","_callee11","_args11","_context11","_set","_callee12","_context12","_x26","_x27","_x28","_x29","_setJSON","_callee13","_context13","_x30","_x31","_x32","_x33","addClickHandler","_loadParams2","_callee14","_params$id","_params$element","domContainer","oldIndex","old","existingCanvases","newItem","_context14","getElementById","body","append","domItem","tagName","toLowerCase","getElementsByTagName","appendChild","loadCanvas","_x34","HslColorManager","_colorValue$hsl","_colorValue$hsl2","RgbColorManager","_colorValue$rgb","rgbColor","_colorValue$rgb2","rgbColorManager","hslColorManager","AbsorberSizeLimit","AbsorberSize","Absorber","draggable","orbits","AbsorberInstance","absorbers","_rangeColorToRgb","_this$initialPosition","_this$initialPosition2","_updateParticlePosition","needsNewPosition","newPosition","setTo","absorberOrbit","_particle$retina$move","minSize","absorberOrbitDirection","orbitRadius","orbitAngle","orbitDirection","updateFunc","addV","addTo","dragging","sizeFactor","translate","arc","Absorbers","interactivityAbsorbers","getAbsorber","idxOrName","addAbsorber","absorber","absorberOptions","modeAbsorbers","absorbersModeOptions","absorbersOptions","aPosition","AbsorbersPlugin","_source$interactivity","_options$interactivit","loadAbsorbersPlugin","_loadAbsorbersPlugin","DestroyBounds","SplitFactor","SplitRate","Split","rate","sizeOffset","_this$colorOffset","colorOffset","Destroy","split","addSplitParticle","parent","splitParticlesOptions","destroyOptions","splitOptions","parentColor","_splitOptions$colorOf","_splitOptions$colorOf2","_splitOptions$colorOf3","_parent$splitCount","splitCount","DestroyUpdater","destroyBoundsOptions","destroyBounds","particlesSplitOptions","loadDestroyUpdater","_loadDestroyUpdater","CircleShape","theta","randomTheta","u","atan","tan","generateTheta","maxRadius","randomRadius","EmitterLife","wait","EmitterRate","EmitterSize","Emitter","life","startCount","domId","spawnColor","EmitterInstance","emitters","_this$options$life$de","_this$_initialPositio","_this$_engine$emitter","_particlesOptions2","_particlesOptions3","_particlesOptions3$mo","_particlesOptions$mov","_particlesOptions$mov2","_this$options$size","_this$options$life$co","_destroy","removeEmitter","emitter","_emit","_emitParticles","singleParticlesOptions","_particlesOptions","_this$_shape$randomPo","_this$_shape","_this$options$spawnCo","hslAnimation","_setColorAnimation","pPosition","_shape","randomPosition","_prepareToDie","_this$options$life","_lifeCount","_immortal","initValue","maxValue","_animation$speed","emitFactor","_currentDuration","_currentEmitDelay","_currentSpawnDelay","_initialPosition","_spawnDelay","emitterShapeManager","getShape","_firstSpawn","_startParticlesAdded","elRect","_emitDelay","_this$_spawnDelay","_this$_spawnDelay2","_this$_emitDelay","_this$options$life$de2","Emitters","interactivityEmitters","getEmitter","addEmitter","playEmitter","externalPlay","pauseEmitter","externalPause","emitterOptions","_emittersModeOptions","modeEmitters","emittersModeOptions","usedIndexes","includes","emittersOptions","ePosition","ShapeManager","randomSquareCoordinate","SquareShape","halfW","halfH","side","EmittersPlugin","emitterMode","_emitterMode$random$c","_emitterMode$random$e","_emitterMode$random$c2","_emitterMode$random$e2","loadEmittersPlugin","_loadEmittersPlugin","addEmitterShape","_engine$emitterShapeM","addShape","ExternalInteractorBase","Trail","pauseOnStop","TrailMaker","_ExternalInteractorBa","_interact","_interactivity$mouse$","_this$_lastPosition","_interactivity$mouse$2","_this$_lastPosition2","trailOptions","optDelay","canEmit","_lastPosition","_particle$interactivi","loadExternalTrailInteraction","_loadExternalTrailInteraction","RollLight","Roll","darken","enlighten","RollUpdater","_particle$roll","rollHorizontal","rollVertical","rollOpt","alterType","updateRoll","loadRollUpdater","_loadRollUpdater","_options$color","_options$minDistance","_options$connectParti","_options$speed","_options$maxParticles","_options$sizeVariatio","_options$responsive","querySelector","links","minDistance","connectParticles","maxParticles","sizeVariations","_responsive$options","_responsive$options2","_responsive$options3","_responsive$options4","_responsive$options5","breakpoint","initPjs","_initParticlesJS","particlesJS","loadJSON","catch","setOnClickHandler","pJSDom","initParticlesJS","_particle$pathGenerat","applyPath","gravityOptions","gravityFactor","mult","zVelocityFactor","BaseMover","_initSpin","_spinOptions$position","spinOptions","spinPos","spinCenter","spinAcceleration","_particle$retina","_particle$retina2","_particle$retina2$mov","_particle$retina$maxS","particleOptions","slowFactor","getProximitySpeedFactor","baseSpeed","maxSize","maxCanvasSize","dxFixed","dyFixed","hDistance","vDistance","vel","applyDistance","loadBaseMover","_loadBaseMover","addMover","CircleDrawer","circleRange","_shapeData$angle","loadCircleShape","_loadCircleShape","updateColorValue","valueAnimation","decrease","_colorValue$maxLoops","_colorValue$loops","_colorValue$maxLoops2","_colorValue$delayTime","_colorValue$delayTime2","_colorValue$delayTime3","_colorValue$delayTime4","_colorValue$velocity","_colorValue$decay","ColorUpdater","_particle$options$col","hAnimation","sAnimation","lAnimation","updateColor","loadColorUpdater","_loadColorUpdater","OpacityUpdater","opacityOptions","opacityAnimation","_particle$opacity$max","_particle$opacity$max2","_particle$opacity$loo","_particle$opacity$max3","_data$maxLoops","_data$loops","_data$maxLoops2","_data$decay","_data$delayTime","_data$delayTime2","_data$delayTime3","_data$delayTime4","minValue","_data$velocity","_data$velocity2","checkDestroy","updateOpacity","loadOpacityUpdater","_loadOpacityUpdater","BounceOutMode","particleBounce","newVelocity","minPos","bounceHorizontal","bounceVertical","DestroyOutMode","_delta","_particle$velocity","vx","vy","NoneOutMode","pRadius","OutOutMode","circVec","_getDistances2","newDx","newDy","_getDistances3","newPos","sizeValue","nextBounds","OutOfCanvasUpdater","_updateOutMode","loadOutModesUpdater","_loadOutModesUpdater","SizeUpdater","_particle$retina$size","sizeAnimation","_particle$size$maxLoo","_particle$size$maxLoo2","_particle$size$loops","_particle$size$maxLoo3","sizeVelocity","updateSize","loadSizeUpdater","_loadSizeUpdater","loadBasic","_loadBasic","loadEasingQuadPlugin","_loadEasingQuadPlugin","Attract","Attractor","_clickAttract","attractRadius","attractModeDistance","_processAttract","_hoverAttract","attractOptions","attractFactor","normVec","subFrom","mouseMoveStatus","hoverEnabled","hoverMode","clickEnabled","clickMode","loadExternalAttractInteraction","_loadExternalAttractInteraction","Bounce","Bouncer","_processBounce","_processMouseBounce","tolerance","bounceModeDistance","_singleSelectorBounce","querySelectorAll","elem","offsetLeft","offsetTop","loadExternalBounceInteraction","_loadExternalBounceInteraction","BubbleBase","BubbleDiv","_BubbleBase","Bubble","calculateBubbleValue","particleValue","modeValue","optionsValue","Bubbler","_clickBubble","mouseClickPos","bubbleOptions","bubbleModeDistance","_particle$opacity$val","durationEnd","distMouse","timeSpent","sizeData","bubbleObj","optValue","bubbleModeSize","particlesObj","_process","opacityData","_hoverBubbleColor","_hoverBubble","pointDistance","_hoverBubbleSize","_hoverBubbleOpacity","divBubble","finalColor","modeColor","bubbleColor","pColor","_divBubble$opacity","_particle$opacity$val2","_particle$opacity2","modeOpacity","optOpacity","modeSize","optSize","bubbleParam","bubbleDuration","bubbleDistance","particlesParam","pObjBubble","pObj","_singleSelectorHover","repulseRadius","loadExternalBubbleInteraction","_loadExternalBubbleInteraction","ConnectLinks","Connect","_data$links","lineLinked","line_linked","lineStyle","connectOptions","connect","gradStop","sourcePos","destPos","midRgb","grad","createLinearGradient","addColorStop","gradient","drawConnection","_p1$retina$linksWidth","ls","drawConnectLine","linksWidth","Connector","connectModeDistance","connectModeRadius","distMax","xDiff","yDiff","slice","loadExternalConnectInteraction","_loadExternalConnectInteraction","GrabLinks","Grab","drawGrab","lineColor","_particle$retina$link","beginPos","colorLine","drawGrabLine","Grabber","grab","grabModeDistance","_grabLineOptions$colo","_particle$options$lin","grabLineOptions","lineOpacity","opacityLine","linksOptions","grabLineColor","loadExternalGrabInteraction","_loadExternalGrabInteraction","Pauser","loadExternalPauseInteraction","_loadExternalPauseInteraction","Push","_data$quantity","particles_nb","Pusher","pushOptions","loadExternalPushInteraction","_loadExternalPushInteraction","Remove","Remover","removeNb","loadExternalRemoveInteraction","_loadExternalRemoveInteraction","RepulseBase","RepulseDiv","_RepulseBase","Repulse","Repulser","_clickRepulse","repulseOptions","repulse","repulseDistance","repulseModeDistance","vect","_hoverRepulse","_processRepulse","divRepulse","_divRepulse$speed","repulseFactor","_singleSelectorRepulse","repulseOpts","hover","click","loadExternalRepulseInteraction","_loadExternalRepulseInteraction","Slow","Slower","slowModeRadius","slowOptions","particlePos","dist","proximityFactor","loadExternalSlowInteraction","_loadExternalSlowInteraction","InterlaceOffsets","InterlaceSteps","ByteStream","bytes","Uint8ClampedArray","reduce","acc","curr","String","fromCharCode","blockString","len","blockData","Uint8Array","parseColorTable","byteStream","colors","parseExtensionBlock","_parseExtensionBlock","gif","getFrameIndex","getTransparencyIndex","frame","packedByte","transparencyFlag","transparencyIndex","applicationExtension","nextByte","frames","GCreserved","disposalMethod","userInputDelayFlag","nextTwoBytes","getString","authenticationCode","readSubBlocksBin","applicationExtensions","comments","readSubBlocks","globalColorTable","EvalError","plainTextData","charSize","foregroundColor","text","skipSubBlocks","parseImageBlock","_parseImageBlock","avgAlpha","progressCallback","localColorTableFlag","interlacedFlag","localColorCount","getColor","minCodeSize","imageData","clearCode","readBits","code","dic","pass","pixelPos","lineIndex","last","_getColor","_code","_size","_pos","_dic","_pixelPos","_last","_getColor2","_r","_g","_b","_a","sortFlag","reserved","localColorTable","_index","ImageData","colorSpace","DOMException","bytePos","bitPos","createImageBitmap","bitmap","parseBlock","_parseBlock","getGIFLoopAmount","extension","NaN","decodeGIF","_decodeGIF","gifURL","buffer","globalColorTableFlag","globalColorCount","backgroundColorIndex","_gif$globalColorTable","frameIndex","incrementFrameIndex","getframeIndex","_frame","arrayBuffer","totalTime","colorRes","pixelAspectRatio","copyWithin","increment","message","currentColorRegex","loadImage","_loadImage","loading","Image","loadGifImage","_loadGifImage","_getGIFLoopAmount","gifData","gifLoopCount","downloadSvgImage","_downloadSvgImage","svgData","replaceImageColor","_imageData$replaceCol","svgColoredData","imageShape","colorStyle","preFillIndex","substring","replaceColorSvg","imageRes","replaceColor","replace_color","svg","Blob","domUrl","URL","webkitURL","createObjectURL","revokeObjectURL","img2","ImageDrawer","loadImageShape","_imageShape$replaceCo","_particle$gifFrame","_image$gifLoopCount","offscreenCanvas","OffscreenCanvas","offscreenContext","imageSmoothingQuality","imageSmoothingEnabled","gifFrame","gifTime","scale","putImageData","previousImageData","getImageData","preload","_imageData$fill","_imageData$close","_image$ratio","Preload","ImagePreloaderPlugin","preloadOptions","existing","addLoadImageToEngine","_data$gif","_data$name","imageFunc","_data$name2","_loadImageShape","preloader","LifeDelay","LifeDuration","Life","LifeUpdater","lifeOptions","justSpawned","widthRange","heightRange","loadLifeUpdater","_loadLifeUpdater","LineDrawer","_shapeData$cap","lineCap","cap","loadLineShape","_loadLineShape","ParallaxMover","parallaxOptions","parallaxForce","canvasCenter","parallaxSmooth","centerDistance","loadParallaxMover","_loadParallaxMover","ParticlesInteractorBase","_ParticlesInteractorB","_p1$retina$attractDis","ax","ay","p1Factor","p2Factor","loadParticlesAttractInteraction","_loadParticlesAttractInteraction","updateAbsorb","r2","fixBounceSpeed","collisionMaxSpeed","resolveCollision","Collider","radius1","radius2","loadParticlesCollisionsInteraction","_loadParticlesCollisionsInteraction","CircleWarp","_Circle","_this$canvasSize","rect","circle","biggerCircle","rectSW","LinksShadow","LinksTriangle","frequency","Links","triangles","getLinkDistance","optDistance","absDiffs","warpDistances","Linker","_setColor","linkContainer","linksColor","linksColors","_p1$retina$linksDista","linkOpt1","linksDistance","linkOpt2","delegateYield","_source$links","loadLinksInteraction","_loadLinksInteraction","setLinkFrequency","dictionary","join","LinkInstance","_drawLinkLine","link","p1LinksOptions","_p1$options$twinkle","twinkle","lines","twinkleFreq","twinkleRgb","drawn","pi1","pi2","endNE","d1","yi","endSW","d2","xi","endSE","d3","drawLinkLine","_drawLinkTriangle","link1","link2","_triangleOptions$opac","triangleOptions","opacityTriangle","_p1$retina$linksDista2","pos3","colorTriangle","drawLinkTriangle","_drawTriangles","p1Links","_options$links","_p2$options$links","_p2$links","vertices","linkFreq","_getLinkFrequency","vertex","_getTriangleFrequency","_freqs","LinksPlugin","loadLinksPlugin","_loadLinksPlugin","loadParticlesLinksInteraction","_loadParticlesLinksInteraction","PolygonDrawerBase","getCenter","getSidesData","sideCount","numerator","denominator","decimalSides","interiorAngleDegrees","interiorAngle","_polygon$sides","nb_sides","PolygonDrawer","_PolygonDrawerBase","TriangleDrawer","loadGenericPolygonShape","_loadGenericPolygonShape","loadTriangleShape","_loadTriangleShape","loadPolygonShape","_loadPolygonShape","RotateAnimation","Rotate","RotateUpdater","rotateOptions","rotateDirection","rotateAnimation","_particle$rotate$valu","_particle$rotate","_rotate$velocity","_rotate$decay","updateRotate","loadRotateUpdater","_loadRotateUpdater","fixFactor","SquareDrawer","fixedRadius","fixedDiameter","loadSquareShape","_loadSquareShape","StarDrawer","_particle$starInset","inset","starInset","_star$sides","star","_star$inset","loadStarShape","_loadStarShape","StrokeColorUpdater","_stroke$opacity","_stroke$color","_rangeColorToHsl","strokeAnimation","strokeHslColor","_particle$strokeColor","_particle$strokeAnima","updateStrokeColor","loadStrokeColorUpdater","_loadStrokeColorUpdater","validTypes","TextDrawer","_character$style","_character$weight","_character$font","textData","randomIndexData","fillText","strokeText","promises","all","loadTextShape","_loadTextShape","loadSlim","_loadSlim","TiltAnimation","Tilt","TiltUpdater","_particle$tilt","tilt","cosDirection","sinDirection","_particle$options$til","tiltOptions","tiltDirection","tiltAnimation","_particle$options$til2","_particle$tilt$veloci","_particle$tilt$decay","updateTilt","loadTiltUpdater","_loadTiltUpdater","TwinkleValues","Twinkle","TwinkleUpdater","twinkleOptions","twinkling","twinklingOpacity","twinkleStyle","needsTwinkle","loadTwinkleUpdater","_loadTwinkleUpdater","WobbleSpeed","Wobble","rangeSpeed","WobbleUpdater","_wobbleOpt$distance","wobbleOpt","wobble","angleSpeed","wobbleDistance","_particle$options$wob","_particle$retina$wobb","wobbleOptions","updateWobble","loadWobbleUpdater","_loadWobbleUpdater","loadFull","_loadFull"],"sourceRoot":""}