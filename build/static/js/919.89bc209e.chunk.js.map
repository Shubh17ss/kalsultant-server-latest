{"version":3,"file":"static/js/919.89bc209e.chunk.js","mappings":"6OAMaA,EAAgB,WAEzB,IAAMC,GAAOC,EAAAA,EAAAA,aACPC,GAASC,EAAAA,EAAAA,eACfC,GAAsCC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,GAAFF,EAAA,GAAiBA,EAAA,IAE9BG,EAAY,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAC,EAAOC,GAAK,IAAAC,EAAAC,EAAA,OAAAL,EAAAA,EAAAA,KAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACL,GAAvBN,EAAMO,iBACFtB,GAAWE,EAAQ,CAAAiB,EAAAE,KAAA,eAAAF,EAAAI,OAAA,wBAAAJ,EAAAE,KAAA,EAGHrB,EAAOwB,eAAe,CACtCtB,SAAAA,EACAuB,cAAc,CACVC,WAAW,6BAEhB,KAAD,EAAAV,EAAAG,EAAAQ,MALKV,EAAKD,EAALC,QAQHT,EAAgBS,EAAMW,SAIzB,wBAAAT,EAAAU,OAAA,GAAAf,EAAA,KAEJ,gBAnBiBgB,GAAA,OAAApB,EAAAqB,MAAA,KAAAC,UAAA,KAqBlB,OACIC,EAAAA,EAAAA,MAAA,QAAAC,SAAA,EACIC,EAAAA,EAAAA,KAACC,EAAAA,eAAc,KACfD,EAAAA,EAAAA,KAAA,UAAQE,UAAWrC,EAAQsC,QAAS7B,EAAc8B,UAAU,wBAAuBL,SAAC,cAIhG,ECjCMM,GAAgBC,EAAAA,EAAAA,GAAW,+GCNjC,EDWwB,WAEpB,IAAArC,GAA8BC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArCsC,EAAOpC,EAAA,GAAEqC,EAAUrC,EAAA,GA0C1B,OAzCAsC,EAAAA,EAAAA,YAAU,WACNC,QAAQC,IAAI,uBACZC,EAAAA,EAAMC,IAAI,6BAA6BC,MAAK,SAACC,GACzCL,QAAQC,IAAII,EAAIC,KAAKC,eACrB,IAAIC,EAAc,CACdC,aAAcJ,EAAIC,KAAKC,cACvBG,WAAY,CACRC,MAAO,QACPC,UAAW,CACPC,aAAc,UACdC,gBAAiB,UACjBC,UAAW,UACXC,YAAa,UACbC,WAAY,gCACZC,YAAa,MACbC,aAAc,MACdC,kBAAmB,OACnBC,eAAgB,OAGpBC,MAAO,CACH,OAAQ,CACJC,MAAO,WAEX,SAAU,CACNA,MAAO,WAQvBzB,EAAWU,EAGf,IAAGgB,OAAM,SAACC,GACNzB,QAAQC,IAAIwB,EAChB,GACJ,GAAG,IAEgB,MAAX5B,GAAkBP,EAAAA,EAAAA,KAAAoC,EAAAA,SAAA,KAAQpC,EAAAA,EAAAA,KAAA,OAAKI,UAAU,sBAAqBL,UAClEC,EAAAA,EAAAA,KAACqC,EAAAA,SAAQ,CAACxE,OAAQwC,EAAeE,QAASA,EAAQR,UAC9CC,EAAAA,EAAAA,KAACpC,EAAa,OAI1B,C","sources":["Screens/Checkout/stripeElement.js","Screens/Checkout/checkout.js","DefaultExports/Checkout.js"],"sourcesContent":["import React, {useState} from 'react'\r\nimport { PaymentElement, useStripe, useElements} from '@stripe/react-stripe-js';\r\n\r\n\r\n\r\n\r\nexport const StripeElement = () => {\r\n    \r\n    const stripe=useStripe();\r\n    const elements=useElements();\r\n    const [errorMessage, setErrorMessage]=useState(null);\r\n\r\n    const handleSubmit= async (event)=>{\r\n        event.preventDefault();\r\n        if(!stripe || !elements){\r\n            return;\r\n        }\r\n        const {error}=await stripe.confirmPayment({\r\n            elements,\r\n            confirmParams:{\r\n                return_url:'https://kalsultant.com/'\r\n            }\r\n        });\r\n\r\n        if(error){\r\n            setErrorMessage(error.message);\r\n        }\r\n        else{\r\n            //the customer will be redirected to the specified url on line 21\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <form>\r\n            <PaymentElement />\r\n            <button disabled={!stripe} onClick={handleSubmit} className='payment_button_stripe'>Pay Now</button>\r\n        </form>\r\n\r\n    )\r\n}\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\nimport './checkout.css';\r\nimport { Elements } from '@stripe/react-stripe-js';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\nimport { StripeElement } from './stripeElement';\r\n\r\nconst stripePromise = loadStripe('pk_test_51KRCZgSHIWJCaDoU3ak1Gv3ZSPqvMtN6qD1dfGDr3mtjcsXam4pN2EEfq28vp7fRfqOIovUVbyJ4aHeBalH8Eb7g00ttrrnSBN');\r\n\r\n\r\n\r\n\r\nexport const Checkout = () => {\r\n\r\n    const [options, setOptions] = useState(null);\r\n    useEffect(() => {\r\n        console.log('useEffect is called');\r\n        axios.get('/api/payment/createIntent').then((res) => {\r\n            console.log(res.data.client_secret);\r\n            let tempOptions = {\r\n                clientSecret: res.data.client_secret,\r\n                appearance: {\r\n                    theme: 'night',\r\n                    variables: {\r\n                        colorPrimary: '#0570de',\r\n                        colorBackground: '#ffffff',\r\n                        colorText: '#f9f6ee',\r\n                        colorDanger: '#df1b41',\r\n                        fontFamily: 'Libre Baskerville, sans-serif',\r\n                        spacingUnit: '4px',\r\n                        borderRadius: '4px',\r\n                        gridColumnSpacing: '25px',\r\n                        gridRowSpacing: '4px',\r\n                        // See all possible variables below\r\n                    },\r\n                    rules: {\r\n                        '.Tab': {\r\n                            color: 'crimson'\r\n                        },\r\n                        '.Input': {\r\n                            color: '#000'\r\n                        },\r\n\r\n                    }\r\n\r\n                },\r\n\r\n            }\r\n            setOptions(tempOptions);\r\n\r\n\r\n        }).catch((err) => {\r\n            console.log(err);\r\n        })\r\n    }, [])\r\n\r\n    return (options == null ? <></> : <div className='stripeFormContainer'>\r\n        <Elements stripe={stripePromise} options={options}>\r\n            <StripeElement />\r\n        </Elements>\r\n    </div>\r\n    )\r\n}\r\n\r\n","import {Checkout} from '../Screens/Checkout/checkout';\r\nexport default Checkout;"],"names":["StripeElement","stripe","useStripe","elements","useElements","_useState","useState","_useState2","_slicedToArray","setErrorMessage","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","_yield$stripe$confirm","error","wrap","_context","prev","next","preventDefault","abrupt","confirmPayment","confirmParams","return_url","sent","message","stop","_x","apply","arguments","_jsxs","children","_jsx","PaymentElement","disabled","onClick","className","stripePromise","loadStripe","options","setOptions","useEffect","console","log","axios","get","then","res","data","client_secret","tempOptions","clientSecret","appearance","theme","variables","colorPrimary","colorBackground","colorText","colorDanger","fontFamily","spacingUnit","borderRadius","gridColumnSpacing","gridRowSpacing","rules","color","catch","err","_Fragment","Elements"],"sourceRoot":""}